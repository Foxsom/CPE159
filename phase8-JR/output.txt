
MyOS.dli:     file format elf32-i386


Disassembly of section .text:

00101080 <_start>:
  101080:	55                   	push   %ebp
  101081:	89 e5                	mov    %esp,%ebp
  101083:	57                   	push   %edi
  101084:	56                   	push   %esi
  101085:	53                   	push   %ebx
  101086:	8b 75 08             	mov    0x8(%ebp),%esi
  101089:	8b 7d 0c             	mov    0xc(%ebp),%edi
  10108c:	8b 5d 10             	mov    0x10(%ebp),%ebx
  10108f:	b8 fd 67 12 00       	mov    $0x1267fd,%eax
  101094:	2d 88 72 10 00       	sub    $0x107288,%eax
  101099:	50                   	push   %eax
  10109a:	6a 00                	push   $0x0
  10109c:	68 88 72 10 00       	push   $0x107288
  1010a1:	e8 7a 4b 00 00       	call   105c20 <memset>
  1010a6:	b8 0c 68 12 00       	mov    $0x12680c,%eax
  1010ab:	24 f0                	and    $0xf0,%al
  1010ad:	50                   	push   %eax
  1010ae:	e8 31 3b 00 00       	call   104be4 <brk>
  1010b3:	89 2d a0 72 10 00    	mov    %ebp,0x1072a0
  1010b9:	89 1d b0 72 10 00    	mov    %ebx,0x1072b0
  1010bf:	89 35 a8 72 10 00    	mov    %esi,0x1072a8
  1010c5:	89 3d a4 72 10 00    	mov    %edi,0x1072a4
  1010cb:	c7 05 ac 72 10 00 ff 	movl   $0xffffffff,0x1072ac
  1010d2:	ff ff ff 
  1010d5:	e8 5a 44 00 00       	call   105534 <init_cons>
  1010da:	6a 0c                	push   $0xc
  1010dc:	68 f2 03 00 00       	push   $0x3f2
  1010e1:	e8 a6 49 00 00       	call   105a8c <outportb>
  1010e6:	e8 f5 55 00 00       	call   1066e0 <init_gdb_serial>
  1010eb:	83 c4 18             	add    $0x18,%esp
  1010ee:	85 ff                	test   %edi,%edi
  1010f0:	74 3c                	je     10112e <_start+0xae>
  1010f2:	6a 2d                	push   $0x2d
  1010f4:	57                   	push   %edi
  1010f5:	e8 ba 55 00 00       	call   1066b4 <strchr>
  1010fa:	83 c4 08             	add    $0x8,%esp
  1010fd:	85 c0                	test   %eax,%eax
  1010ff:	74 2d                	je     10112e <_start+0xae>
  101101:	80 78 01 67          	cmpb   $0x67,0x1(%eax)
  101105:	75 27                	jne    10112e <_start+0xae>
  101107:	80 78 02 00          	cmpb   $0x0,0x2(%eax)
  10110b:	74 0d                	je     10111a <_start+0x9a>
  10110d:	0f be 40 02          	movsbl 0x2(%eax),%eax
  101111:	f6 80 44 6d 10 00 08 	testb  $0x8,0x106d44(%eax)
  101118:	74 14                	je     10112e <_start+0xae>
  10111a:	e8 e9 38 00 00       	call   104a08 <set_debug_traps>
  10111f:	c7 05 ac 72 10 00 01 	movl   $0x1,0x1072ac
  101126:	00 00 00 
  101129:	e8 82 3a 00 00       	call   104bb0 <breakpoint>
  10112e:	e8 19 4a 00 00       	call   105b4c <_init_machine>
  101133:	e8 0c 00 00 00       	call   101144 <_run_ctors>
  101138:	e8 4b 17 00 00       	call   102888 <main>
  10113d:	6a 00                	push   $0x0
  10113f:	e8 68 45 00 00       	call   1056ac <exit>

00101144 <_run_ctors>:
  101144:	53                   	push   %ebx
  101145:	8d 1d 80 72 10 00    	lea    0x107280,%ebx
  10114b:	8b 03                	mov    (%ebx),%eax
  10114d:	09 c0                	or     %eax,%eax
  10114f:	74 07                	je     101158 <_run_ctors+0x14>
  101151:	ff d0                	call   *%eax
  101153:	83 c3 04             	add    $0x4,%ebx
  101156:	eb f3                	jmp    10114b <_run_ctors+0x7>
  101158:	5b                   	pop    %ebx
  101159:	c3                   	ret    
  10115a:	8d 36                	lea    (%esi),%esi

0010115c <_run_dtors>:
  10115c:	53                   	push   %ebx
  10115d:	8d 1d 84 72 10 00    	lea    0x107284,%ebx
  101163:	8b 03                	mov    (%ebx),%eax
  101165:	09 c0                	or     %eax,%eax
  101167:	74 07                	je     101170 <_run_dtors+0x14>
  101169:	ff d0                	call   *%eax
  10116b:	83 c3 04             	add    $0x4,%ebx
  10116e:	eb f3                	jmp    101163 <_run_dtors+0x7>
  101170:	5b                   	pop    %ebx
  101171:	c3                   	ret    
  101172:	90                   	nop
  101173:	90                   	nop

00101174 <Loader>:
  101174:	8b 5c 24 04          	mov    0x4(%esp),%ebx
  101178:	89 dc                	mov    %ebx,%esp
  10117a:	61                   	popa   
  10117b:	83 c4 04             	add    $0x4,%esp
  10117e:	cf                   	iret   
  10117f:	90                   	nop

00101180 <TimerEntry>:
  101180:	6a 20                	push   $0x20
  101182:	eb 30                	jmp    1011b4 <PreKernel>

00101184 <GetPidEntry>:
  101184:	6a 30                	push   $0x30
  101186:	eb 2c                	jmp    1011b4 <PreKernel>

00101188 <ShowCharEntry>:
  101188:	6a 31                	push   $0x31
  10118a:	eb 28                	jmp    1011b4 <PreKernel>

0010118c <SleepEntry>:
  10118c:	6a 32                	push   $0x32
  10118e:	eb 24                	jmp    1011b4 <PreKernel>

00101190 <MuxCreateEntry>:
  101190:	6a 33                	push   $0x33
  101192:	eb 20                	jmp    1011b4 <PreKernel>

00101194 <MuxOpEntry>:
  101194:	6a 34                	push   $0x34
  101196:	eb 1c                	jmp    1011b4 <PreKernel>

00101198 <Term0Entry>:
  101198:	6a 23                	push   $0x23
  10119a:	eb 18                	jmp    1011b4 <PreKernel>

0010119c <Term1Entry>:
  10119c:	6a 24                	push   $0x24
  10119e:	eb 14                	jmp    1011b4 <PreKernel>

001011a0 <ForkEntry>:
  1011a0:	6a 35                	push   $0x35
  1011a2:	eb 10                	jmp    1011b4 <PreKernel>

001011a4 <WaitEntry>:
  1011a4:	6a 36                	push   $0x36
  1011a6:	eb 0c                	jmp    1011b4 <PreKernel>

001011a8 <ExitEntry>:
  1011a8:	6a 37                	push   $0x37
  1011aa:	eb 08                	jmp    1011b4 <PreKernel>

001011ac <ExecEntry>:
  1011ac:	6a 38                	push   $0x38
  1011ae:	eb 04                	jmp    1011b4 <PreKernel>

001011b0 <SignalEntry>:
  1011b0:	6a 39                	push   $0x39
  1011b2:	eb 00                	jmp    1011b4 <PreKernel>

001011b4 <PreKernel>:
  1011b4:	60                   	pusha  
  1011b5:	89 e3                	mov    %esp,%ebx
  1011b7:	66 b8 10 00          	mov    $0x10,%ax
  1011bb:	66 8e d8             	mov    %ax,%ds
  1011be:	66 8e c0             	mov    %ax,%es
  1011c1:	8d 25 b4 f2 10 00    	lea    0x10f2b4,%esp
  1011c7:	53                   	push   %ebx
  1011c8:	fc                   	cld    
  1011c9:	e8 0a 17 00 00       	call   1028d8 <Kernel>
  1011ce:	90                   	nop
  1011cf:	90                   	nop

001011d0 <NewProcSR>:
  1011d0:	55                   	push   %ebp
  1011d1:	89 e5                	mov    %esp,%ebp
  1011d3:	83 ec 08             	sub    $0x8,%esp
  1011d6:	56                   	push   %esi
  1011d7:	53                   	push   %ebx
  1011d8:	a1 14 f3 10 00       	mov    0x10f314,%eax
  1011dd:	89 45 f8             	mov    %eax,-0x8(%ebp)
  1011e0:	68 6c 33 12 00       	push   $0x12336c
  1011e5:	e8 7e 23 00 00       	call   103568 <QisEmpty>
  1011ea:	83 c4 04             	add    $0x4,%esp
  1011ed:	89 c0                	mov    %eax,%eax
  1011ef:	85 c0                	test   %eax,%eax
  1011f1:	74 21                	je     101214 <NewProcSR+0x44>
  1011f3:	68 3c 69 10 00       	push   $0x10693c
  1011f8:	e8 4b 44 00 00       	call   105648 <cons_printf>
  1011fd:	83 c4 04             	add    $0x4,%esp
  101200:	e8 ab 39 00 00       	call   104bb0 <breakpoint>
  101205:	8b 45 f8             	mov    -0x8(%ebp),%eax
  101208:	a3 14 f3 10 00       	mov    %eax,0x10f314
  10120d:	e9 2c 01 00 00       	jmp    10133e <NewProcSR+0x16e>
  101212:	8d 36                	lea    (%esi),%esi
  101214:	68 6c 33 12 00       	push   $0x12336c
  101219:	e8 7a 23 00 00       	call   103598 <DeQ>
  10121e:	83 c4 04             	add    $0x4,%esp
  101221:	89 c0                	mov    %eax,%eax
  101223:	89 45 fc             	mov    %eax,-0x4(%ebp)
  101226:	6a 1c                	push   $0x1c
  101228:	8b 45 fc             	mov    -0x4(%ebp),%eax
  10122b:	89 c2                	mov    %eax,%edx
  10122d:	01 d2                	add    %edx,%edx
  10122f:	01 c2                	add    %eax,%edx
  101231:	8d 0c d5 00 00 00 00 	lea    0x0(,%edx,8),%ecx
  101238:	01 ca                	add    %ecx,%edx
  10123a:	01 d0                	add    %edx,%eax
  10123c:	8d 90 14 34 12 00    	lea    0x123414(%eax),%edx
  101242:	52                   	push   %edx
  101243:	e8 00 23 00 00       	call   103548 <Bzero>
  101248:	83 c4 08             	add    $0x8,%esp
  10124b:	68 00 10 00 00       	push   $0x1000
  101250:	8b 45 fc             	mov    -0x4(%ebp),%eax
  101253:	89 c2                	mov    %eax,%edx
  101255:	89 d0                	mov    %edx,%eax
  101257:	c1 e0 0c             	shl    $0xc,%eax
  10125a:	8d 90 18 f3 10 00    	lea    0x10f318(%eax),%edx
  101260:	52                   	push   %edx
  101261:	e8 e2 22 00 00       	call   103548 <Bzero>
  101266:	83 c4 08             	add    $0x8,%esp
  101269:	8b 45 fc             	mov    -0x4(%ebp),%eax
  10126c:	89 c2                	mov    %eax,%edx
  10126e:	01 d2                	add    %edx,%edx
  101270:	01 c2                	add    %eax,%edx
  101272:	8d 0c d5 00 00 00 00 	lea    0x0(,%edx,8),%ecx
  101279:	01 ca                	add    %ecx,%edx
  10127b:	01 d0                	add    %edx,%eax
  10127d:	ba 14 34 12 00       	mov    $0x123414,%edx
  101282:	c7 04 10 01 00 00 00 	movl   $0x1,(%eax,%edx,1)
  101289:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)
  10128d:	7e 11                	jle    1012a0 <NewProcSR+0xd0>
  10128f:	68 18 33 12 00       	push   $0x123318
  101294:	8b 45 fc             	mov    -0x4(%ebp),%eax
  101297:	50                   	push   %eax
  101298:	e8 b7 23 00 00       	call   103654 <EnQ>
  10129d:	83 c4 08             	add    $0x8,%esp
  1012a0:	8b 45 fc             	mov    -0x4(%ebp),%eax
  1012a3:	89 c2                	mov    %eax,%edx
  1012a5:	01 d2                	add    %edx,%edx
  1012a7:	01 c2                	add    %eax,%edx
  1012a9:	8d 0c d5 00 00 00 00 	lea    0x0(,%edx,8),%ecx
  1012b0:	01 ca                	add    %ecx,%edx
  1012b2:	01 d0                	add    %edx,%eax
  1012b4:	ba 14 34 12 00       	mov    $0x123414,%edx
  1012b9:	8b 4d fc             	mov    -0x4(%ebp),%ecx
  1012bc:	89 cb                	mov    %ecx,%ebx
  1012be:	89 d9                	mov    %ebx,%ecx
  1012c0:	c1 e1 0c             	shl    $0xc,%ecx
  1012c3:	8d b1 e8 02 11 00    	lea    0x1102e8(%ecx),%esi
  1012c9:	89 74 10 10          	mov    %esi,0x10(%eax,%edx,1)
  1012cd:	8b 45 fc             	mov    -0x4(%ebp),%eax
  1012d0:	89 c2                	mov    %eax,%edx
  1012d2:	01 d2                	add    %edx,%edx
  1012d4:	01 c2                	add    %eax,%edx
  1012d6:	8d 0c d5 00 00 00 00 	lea    0x0(,%edx,8),%ecx
  1012dd:	01 ca                	add    %ecx,%edx
  1012df:	01 d0                	add    %edx,%eax
  1012e1:	ba 14 34 12 00       	mov    $0x123414,%edx
  1012e6:	8b 44 10 10          	mov    0x10(%eax,%edx,1),%eax
  1012ea:	c7 40 2c 02 02 00 00 	movl   $0x202,0x2c(%eax)
  1012f1:	e8 de 46 00 00       	call   1059d4 <get_cs>
  1012f6:	89 c0                	mov    %eax,%eax
  1012f8:	8b 55 fc             	mov    -0x4(%ebp),%edx
  1012fb:	89 d1                	mov    %edx,%ecx
  1012fd:	01 c9                	add    %ecx,%ecx
  1012ff:	01 d1                	add    %edx,%ecx
  101301:	8d 1c cd 00 00 00 00 	lea    0x0(,%ecx,8),%ebx
  101308:	01 d9                	add    %ebx,%ecx
  10130a:	01 ca                	add    %ecx,%edx
  10130c:	b9 14 34 12 00       	mov    $0x123414,%ecx
  101311:	8b 54 0a 10          	mov    0x10(%edx,%ecx,1),%edx
  101315:	0f b7 f0             	movzwl %ax,%esi
  101318:	89 72 28             	mov    %esi,0x28(%edx)
  10131b:	8b 45 fc             	mov    -0x4(%ebp),%eax
  10131e:	89 c2                	mov    %eax,%edx
  101320:	01 d2                	add    %edx,%edx
  101322:	01 c2                	add    %eax,%edx
  101324:	8d 0c d5 00 00 00 00 	lea    0x0(,%edx,8),%ecx
  10132b:	01 ca                	add    %ecx,%edx
  10132d:	01 d0                	add    %edx,%eax
  10132f:	ba 14 34 12 00       	mov    $0x123414,%edx
  101334:	8b 44 10 10          	mov    0x10(%eax,%edx,1),%eax
  101338:	8b 55 08             	mov    0x8(%ebp),%edx
  10133b:	89 50 24             	mov    %edx,0x24(%eax)
  10133e:	8d 65 f0             	lea    -0x10(%ebp),%esp
  101341:	5b                   	pop    %ebx
  101342:	5e                   	pop    %esi
  101343:	c9                   	leave  
  101344:	c3                   	ret    
  101345:	8d 76 00             	lea    0x0(%esi),%esi

00101348 <CheckWakeProc>:
  101348:	55                   	push   %ebp
  101349:	89 e5                	mov    %esp,%ebp
  10134b:	83 ec 08             	sub    $0x8,%esp
  10134e:	90                   	nop
  10134f:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
  101356:	8b 45 fc             	mov    -0x4(%ebp),%eax
  101359:	39 05 c0 33 12 00    	cmp    %eax,0x1233c0
  10135f:	7f 07                	jg     101368 <CheckWakeProc+0x20>
  101361:	e9 8a 00 00 00       	jmp    1013f0 <CheckWakeProc+0xa8>
  101366:	8d 36                	lea    (%esi),%esi
  101368:	68 c0 33 12 00       	push   $0x1233c0
  10136d:	e8 26 22 00 00       	call   103598 <DeQ>
  101372:	83 c4 04             	add    $0x4,%esp
  101375:	89 c0                	mov    %eax,%eax
  101377:	89 45 f8             	mov    %eax,-0x8(%ebp)
  10137a:	8b 45 f8             	mov    -0x8(%ebp),%eax
  10137d:	89 c2                	mov    %eax,%edx
  10137f:	01 d2                	add    %edx,%edx
  101381:	01 c2                	add    %eax,%edx
  101383:	8d 0c d5 00 00 00 00 	lea    0x0(,%edx,8),%ecx
  10138a:	01 ca                	add    %ecx,%edx
  10138c:	01 d0                	add    %edx,%eax
  10138e:	ba 14 34 12 00       	mov    $0x123414,%edx
  101393:	8b 44 10 0c          	mov    0xc(%eax,%edx,1),%eax
  101397:	39 05 b8 f2 10 00    	cmp    %eax,0x10f2b8
  10139d:	75 35                	jne    1013d4 <CheckWakeProc+0x8c>
  10139f:	68 18 33 12 00       	push   $0x123318
  1013a4:	8b 45 f8             	mov    -0x8(%ebp),%eax
  1013a7:	50                   	push   %eax
  1013a8:	e8 a7 22 00 00       	call   103654 <EnQ>
  1013ad:	83 c4 08             	add    $0x8,%esp
  1013b0:	8b 45 f8             	mov    -0x8(%ebp),%eax
  1013b3:	89 c2                	mov    %eax,%edx
  1013b5:	01 d2                	add    %edx,%edx
  1013b7:	01 c2                	add    %eax,%edx
  1013b9:	8d 0c d5 00 00 00 00 	lea    0x0(,%edx,8),%ecx
  1013c0:	01 ca                	add    %ecx,%edx
  1013c2:	01 d0                	add    %edx,%eax
  1013c4:	ba 14 34 12 00       	mov    $0x123414,%edx
  1013c9:	c7 04 10 01 00 00 00 	movl   $0x1,(%eax,%edx,1)
  1013d0:	eb 13                	jmp    1013e5 <CheckWakeProc+0x9d>
  1013d2:	8d 36                	lea    (%esi),%esi
  1013d4:	68 c0 33 12 00       	push   $0x1233c0
  1013d9:	8b 45 f8             	mov    -0x8(%ebp),%eax
  1013dc:	50                   	push   %eax
  1013dd:	e8 72 22 00 00       	call   103654 <EnQ>
  1013e2:	83 c4 08             	add    $0x8,%esp
  1013e5:	ff 45 fc             	incl   -0x4(%ebp)
  1013e8:	e9 69 ff ff ff       	jmp    101356 <CheckWakeProc+0xe>
  1013ed:	8d 76 00             	lea    0x0(%esi),%esi
  1013f0:	c9                   	leave  
  1013f1:	c3                   	ret    
  1013f2:	8d 36                	lea    (%esi),%esi

001013f4 <TimerSR>:
  1013f4:	55                   	push   %ebp
  1013f5:	89 e5                	mov    %esp,%ebp
  1013f7:	6a 60                	push   $0x60
  1013f9:	6a 20                	push   $0x20
  1013fb:	e8 8c 46 00 00       	call   105a8c <outportb>
  101400:	83 c4 08             	add    $0x8,%esp
  101403:	ff 05 b8 f2 10 00    	incl   0x10f2b8
  101409:	e8 3a ff ff ff       	call   101348 <CheckWakeProc>
  10140e:	83 3d 14 f3 10 00 00 	cmpl   $0x0,0x10f314
  101415:	75 05                	jne    10141c <TimerSR+0x28>
  101417:	e9 a2 00 00 00       	jmp    1014be <TimerSR+0xca>
  10141c:	a1 14 f3 10 00       	mov    0x10f314,%eax
  101421:	89 c2                	mov    %eax,%edx
  101423:	01 d2                	add    %edx,%edx
  101425:	01 c2                	add    %eax,%edx
  101427:	8d 0c d5 00 00 00 00 	lea    0x0(,%edx,8),%ecx
  10142e:	01 ca                	add    %ecx,%edx
  101430:	01 d0                	add    %edx,%eax
  101432:	ba 14 34 12 00       	mov    $0x123414,%edx
  101437:	ff 44 10 04          	incl   0x4(%eax,%edx,1)
  10143b:	a1 14 f3 10 00       	mov    0x10f314,%eax
  101440:	89 c2                	mov    %eax,%edx
  101442:	01 d2                	add    %edx,%edx
  101444:	01 c2                	add    %eax,%edx
  101446:	8d 0c d5 00 00 00 00 	lea    0x0(,%edx,8),%ecx
  10144d:	01 ca                	add    %ecx,%edx
  10144f:	01 d0                	add    %edx,%eax
  101451:	ba 14 34 12 00       	mov    $0x123414,%edx
  101456:	ff 44 10 08          	incl   0x8(%eax,%edx,1)
  10145a:	a1 14 f3 10 00       	mov    0x10f314,%eax
  10145f:	89 c2                	mov    %eax,%edx
  101461:	01 d2                	add    %edx,%edx
  101463:	01 c2                	add    %eax,%edx
  101465:	8d 0c d5 00 00 00 00 	lea    0x0(,%edx,8),%ecx
  10146c:	01 ca                	add    %ecx,%edx
  10146e:	01 d0                	add    %edx,%eax
  101470:	ba 14 34 12 00       	mov    $0x123414,%edx
  101475:	81 7c 10 04 36 01 00 	cmpl   $0x136,0x4(%eax,%edx,1)
  10147c:	00 
  10147d:	75 3f                	jne    1014be <TimerSR+0xca>
  10147f:	68 18 33 12 00       	push   $0x123318
  101484:	a1 14 f3 10 00       	mov    0x10f314,%eax
  101489:	50                   	push   %eax
  10148a:	e8 c5 21 00 00       	call   103654 <EnQ>
  10148f:	83 c4 08             	add    $0x8,%esp
  101492:	a1 14 f3 10 00       	mov    0x10f314,%eax
  101497:	89 c2                	mov    %eax,%edx
  101499:	01 d2                	add    %edx,%edx
  10149b:	01 c2                	add    %eax,%edx
  10149d:	8d 0c d5 00 00 00 00 	lea    0x0(,%edx,8),%ecx
  1014a4:	01 ca                	add    %ecx,%edx
  1014a6:	01 d0                	add    %edx,%eax
  1014a8:	ba 14 34 12 00       	mov    $0x123414,%edx
  1014ad:	c7 04 10 01 00 00 00 	movl   $0x1,(%eax,%edx,1)
  1014b4:	c7 05 14 f3 10 00 ff 	movl   $0xffffffff,0x10f314
  1014bb:	ff ff ff 
  1014be:	c9                   	leave  
  1014bf:	c3                   	ret    

001014c0 <GetPidSR>:
  1014c0:	55                   	push   %ebp
  1014c1:	89 e5                	mov    %esp,%ebp
  1014c3:	a1 14 f3 10 00       	mov    0x10f314,%eax
  1014c8:	eb 02                	jmp    1014cc <GetPidSR+0xc>
  1014ca:	8d 36                	lea    (%esi),%esi
  1014cc:	c9                   	leave  
  1014cd:	c3                   	ret    
  1014ce:	8d 36                	lea    (%esi),%esi

001014d0 <SleepSR>:
  1014d0:	55                   	push   %ebp
  1014d1:	89 e5                	mov    %esp,%ebp
  1014d3:	53                   	push   %ebx
  1014d4:	a1 14 f3 10 00       	mov    0x10f314,%eax
  1014d9:	89 c2                	mov    %eax,%edx
  1014db:	01 d2                	add    %edx,%edx
  1014dd:	01 c2                	add    %eax,%edx
  1014df:	8d 0c d5 00 00 00 00 	lea    0x0(,%edx,8),%ecx
  1014e6:	01 ca                	add    %ecx,%edx
  1014e8:	01 d0                	add    %edx,%eax
  1014ea:	ba 14 34 12 00       	mov    $0x123414,%edx
  1014ef:	8b 1d b8 f2 10 00    	mov    0x10f2b8,%ebx
  1014f5:	03 5d 08             	add    0x8(%ebp),%ebx
  1014f8:	89 5c 10 0c          	mov    %ebx,0xc(%eax,%edx,1)
  1014fc:	a1 14 f3 10 00       	mov    0x10f314,%eax
  101501:	89 c2                	mov    %eax,%edx
  101503:	01 d2                	add    %edx,%edx
  101505:	01 c2                	add    %eax,%edx
  101507:	8d 0c d5 00 00 00 00 	lea    0x0(,%edx,8),%ecx
  10150e:	01 ca                	add    %ecx,%edx
  101510:	01 d0                	add    %edx,%eax
  101512:	ba 14 34 12 00       	mov    $0x123414,%edx
  101517:	c7 04 10 03 00 00 00 	movl   $0x3,(%eax,%edx,1)
  10151e:	68 c0 33 12 00       	push   $0x1233c0
  101523:	a1 14 f3 10 00       	mov    0x10f314,%eax
  101528:	50                   	push   %eax
  101529:	e8 26 21 00 00       	call   103654 <EnQ>
  10152e:	83 c4 08             	add    $0x8,%esp
  101531:	c7 05 14 f3 10 00 ff 	movl   $0xffffffff,0x10f314
  101538:	ff ff ff 
  10153b:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  10153e:	c9                   	leave  
  10153f:	c3                   	ret    

00101540 <ShowCharSR>:
  101540:	55                   	push   %ebp
  101541:	89 e5                	mov    %esp,%ebp
  101543:	83 ec 08             	sub    $0x8,%esp
  101546:	56                   	push   %esi
  101547:	53                   	push   %ebx
  101548:	8b 45 10             	mov    0x10(%ebp),%eax
  10154b:	88 45 ff             	mov    %al,-0x1(%ebp)
  10154e:	c7 45 f8 00 80 0b 00 	movl   $0xb8000,-0x8(%ebp)
  101555:	8b 4d 08             	mov    0x8(%ebp),%ecx
  101558:	89 ca                	mov    %ecx,%edx
  10155a:	c1 e2 02             	shl    $0x2,%edx
  10155d:	01 ca                	add    %ecx,%edx
  10155f:	89 d1                	mov    %edx,%ecx
  101561:	c1 e1 04             	shl    $0x4,%ecx
  101564:	89 cb                	mov    %ecx,%ebx
  101566:	03 5d 0c             	add    0xc(%ebp),%ebx
  101569:	89 da                	mov    %ebx,%edx
  10156b:	8d 0c 13             	lea    (%ebx,%edx,1),%ecx
  10156e:	01 4d f8             	add    %ecx,-0x8(%ebp)
  101571:	8b 55 f8             	mov    -0x8(%ebp),%edx
  101574:	66 0f be 4d ff       	movsbw -0x1(%ebp),%cx
  101579:	89 ce                	mov    %ecx,%esi
  10157b:	66 81 c6 00 0f       	add    $0xf00,%si
  101580:	66 89 32             	mov    %si,(%edx)
  101583:	8d 65 f0             	lea    -0x10(%ebp),%esp
  101586:	5b                   	pop    %ebx
  101587:	5e                   	pop    %esi
  101588:	c9                   	leave  
  101589:	c3                   	ret    
  10158a:	8d 36                	lea    (%esi),%esi

0010158c <MuxCreateSR>:
  10158c:	55                   	push   %ebp
  10158d:	89 e5                	mov    %esp,%ebp
  10158f:	83 ec 04             	sub    $0x4,%esp
  101592:	68 bc f2 10 00       	push   $0x10f2bc
  101597:	e8 fc 1f 00 00       	call   103598 <DeQ>
  10159c:	83 c4 04             	add    $0x4,%esp
  10159f:	89 c0                	mov    %eax,%eax
  1015a1:	89 45 fc             	mov    %eax,-0x4(%ebp)
  1015a4:	8b 55 fc             	mov    -0x4(%ebp),%edx
  1015a7:	89 d0                	mov    %edx,%eax
  1015a9:	c1 e0 02             	shl    $0x2,%eax
  1015ac:	01 d0                	add    %edx,%eax
  1015ae:	01 c0                	add    %eax,%eax
  1015b0:	01 d0                	add    %edx,%eax
  1015b2:	01 c0                	add    %eax,%eax
  1015b4:	01 d0                	add    %edx,%eax
  1015b6:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
  1015bd:	b8 44 36 12 00       	mov    $0x123644,%eax
  1015c2:	8b 4d 08             	mov    0x8(%ebp),%ecx
  1015c5:	89 0c 02             	mov    %ecx,(%edx,%eax,1)
  1015c8:	8b 55 fc             	mov    -0x4(%ebp),%edx
  1015cb:	89 d0                	mov    %edx,%eax
  1015cd:	c1 e0 02             	shl    $0x2,%eax
  1015d0:	01 d0                	add    %edx,%eax
  1015d2:	01 c0                	add    %eax,%eax
  1015d4:	01 d0                	add    %edx,%eax
  1015d6:	01 c0                	add    %eax,%eax
  1015d8:	01 d0                	add    %edx,%eax
  1015da:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
  1015e1:	b8 44 36 12 00       	mov    $0x123644,%eax
  1015e6:	8b 0d 14 f3 10 00    	mov    0x10f314,%ecx
  1015ec:	89 4c 02 04          	mov    %ecx,0x4(%edx,%eax,1)
  1015f0:	6a 54                	push   $0x54
  1015f2:	8b 55 fc             	mov    -0x4(%ebp),%edx
  1015f5:	89 d0                	mov    %edx,%eax
  1015f7:	c1 e0 02             	shl    $0x2,%eax
  1015fa:	01 d0                	add    %edx,%eax
  1015fc:	01 c0                	add    %eax,%eax
  1015fe:	01 d0                	add    %edx,%eax
  101600:	01 c0                	add    %eax,%eax
  101602:	01 d0                	add    %edx,%eax
  101604:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
  10160b:	8d 82 4c 36 12 00    	lea    0x12364c(%edx),%eax
  101611:	50                   	push   %eax
  101612:	e8 31 1f 00 00       	call   103548 <Bzero>
  101617:	83 c4 08             	add    $0x8,%esp
  10161a:	8b 45 fc             	mov    -0x4(%ebp),%eax
  10161d:	eb 01                	jmp    101620 <MuxCreateSR+0x94>
  10161f:	90                   	nop
  101620:	c9                   	leave  
  101621:	c3                   	ret    
  101622:	8d 36                	lea    (%esi),%esi

00101624 <MuxOpSR>:
  101624:	55                   	push   %ebp
  101625:	89 e5                	mov    %esp,%ebp
  101627:	83 ec 04             	sub    $0x4,%esp
  10162a:	83 7d 0c 01          	cmpl   $0x1,0xc(%ebp)
  10162e:	0f 85 a8 00 00 00    	jne    1016dc <MuxOpSR+0xb8>
  101634:	8b 55 08             	mov    0x8(%ebp),%edx
  101637:	89 d0                	mov    %edx,%eax
  101639:	c1 e0 02             	shl    $0x2,%eax
  10163c:	01 d0                	add    %edx,%eax
  10163e:	01 c0                	add    %eax,%eax
  101640:	01 d0                	add    %edx,%eax
  101642:	01 c0                	add    %eax,%eax
  101644:	01 d0                	add    %edx,%eax
  101646:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
  10164d:	b8 44 36 12 00       	mov    $0x123644,%eax
  101652:	83 3c 02 00          	cmpl   $0x0,(%edx,%eax,1)
  101656:	7e 24                	jle    10167c <MuxOpSR+0x58>
  101658:	8b 55 08             	mov    0x8(%ebp),%edx
  10165b:	89 d0                	mov    %edx,%eax
  10165d:	c1 e0 02             	shl    $0x2,%eax
  101660:	01 d0                	add    %edx,%eax
  101662:	01 c0                	add    %eax,%eax
  101664:	01 d0                	add    %edx,%eax
  101666:	01 c0                	add    %eax,%eax
  101668:	01 d0                	add    %edx,%eax
  10166a:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
  101671:	b8 44 36 12 00       	mov    $0x123644,%eax
  101676:	ff 0c 02             	decl   (%edx,%eax,1)
  101679:	eb 5b                	jmp    1016d6 <MuxOpSR+0xb2>
  10167b:	90                   	nop
  10167c:	8b 55 08             	mov    0x8(%ebp),%edx
  10167f:	89 d0                	mov    %edx,%eax
  101681:	c1 e0 02             	shl    $0x2,%eax
  101684:	01 d0                	add    %edx,%eax
  101686:	01 c0                	add    %eax,%eax
  101688:	01 d0                	add    %edx,%eax
  10168a:	01 c0                	add    %eax,%eax
  10168c:	01 d0                	add    %edx,%eax
  10168e:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
  101695:	8d 82 4c 36 12 00    	lea    0x12364c(%edx),%eax
  10169b:	50                   	push   %eax
  10169c:	a1 14 f3 10 00       	mov    0x10f314,%eax
  1016a1:	50                   	push   %eax
  1016a2:	e8 ad 1f 00 00       	call   103654 <EnQ>
  1016a7:	83 c4 08             	add    $0x8,%esp
  1016aa:	a1 14 f3 10 00       	mov    0x10f314,%eax
  1016af:	89 c2                	mov    %eax,%edx
  1016b1:	01 d2                	add    %edx,%edx
  1016b3:	01 c2                	add    %eax,%edx
  1016b5:	8d 0c d5 00 00 00 00 	lea    0x0(,%edx,8),%ecx
  1016bc:	01 ca                	add    %ecx,%edx
  1016be:	01 d0                	add    %edx,%eax
  1016c0:	ba 14 34 12 00       	mov    $0x123414,%edx
  1016c5:	c7 04 10 04 00 00 00 	movl   $0x4,(%eax,%edx,1)
  1016cc:	c7 05 14 f3 10 00 ff 	movl   $0xffffffff,0x10f314
  1016d3:	ff ff ff 
  1016d6:	e9 bb 00 00 00       	jmp    101796 <MuxOpSR+0x172>
  1016db:	90                   	nop
  1016dc:	83 7d 0c 02          	cmpl   $0x2,0xc(%ebp)
  1016e0:	0f 85 b0 00 00 00    	jne    101796 <MuxOpSR+0x172>
  1016e6:	8b 55 08             	mov    0x8(%ebp),%edx
  1016e9:	89 d0                	mov    %edx,%eax
  1016eb:	c1 e0 02             	shl    $0x2,%eax
  1016ee:	01 d0                	add    %edx,%eax
  1016f0:	01 c0                	add    %eax,%eax
  1016f2:	01 d0                	add    %edx,%eax
  1016f4:	01 c0                	add    %eax,%eax
  1016f6:	01 d0                	add    %edx,%eax
  1016f8:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
  1016ff:	8d 82 4c 36 12 00    	lea    0x12364c(%edx),%eax
  101705:	50                   	push   %eax
  101706:	e8 5d 1e 00 00       	call   103568 <QisEmpty>
  10170b:	83 c4 04             	add    $0x4,%esp
  10170e:	89 c0                	mov    %eax,%eax
  101710:	85 c0                	test   %eax,%eax
  101712:	74 24                	je     101738 <MuxOpSR+0x114>
  101714:	8b 55 08             	mov    0x8(%ebp),%edx
  101717:	89 d0                	mov    %edx,%eax
  101719:	c1 e0 02             	shl    $0x2,%eax
  10171c:	01 d0                	add    %edx,%eax
  10171e:	01 c0                	add    %eax,%eax
  101720:	01 d0                	add    %edx,%eax
  101722:	01 c0                	add    %eax,%eax
  101724:	01 d0                	add    %edx,%eax
  101726:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
  10172d:	b8 44 36 12 00       	mov    $0x123644,%eax
  101732:	ff 04 02             	incl   (%edx,%eax,1)
  101735:	eb 5f                	jmp    101796 <MuxOpSR+0x172>
  101737:	90                   	nop
  101738:	8b 55 08             	mov    0x8(%ebp),%edx
  10173b:	89 d0                	mov    %edx,%eax
  10173d:	c1 e0 02             	shl    $0x2,%eax
  101740:	01 d0                	add    %edx,%eax
  101742:	01 c0                	add    %eax,%eax
  101744:	01 d0                	add    %edx,%eax
  101746:	01 c0                	add    %eax,%eax
  101748:	01 d0                	add    %edx,%eax
  10174a:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
  101751:	8d 82 4c 36 12 00    	lea    0x12364c(%edx),%eax
  101757:	50                   	push   %eax
  101758:	e8 3b 1e 00 00       	call   103598 <DeQ>
  10175d:	83 c4 04             	add    $0x4,%esp
  101760:	89 c0                	mov    %eax,%eax
  101762:	89 45 fc             	mov    %eax,-0x4(%ebp)
  101765:	68 18 33 12 00       	push   $0x123318
  10176a:	8b 45 fc             	mov    -0x4(%ebp),%eax
  10176d:	50                   	push   %eax
  10176e:	e8 e1 1e 00 00       	call   103654 <EnQ>
  101773:	83 c4 08             	add    $0x8,%esp
  101776:	8b 45 fc             	mov    -0x4(%ebp),%eax
  101779:	89 c2                	mov    %eax,%edx
  10177b:	01 d2                	add    %edx,%edx
  10177d:	01 c2                	add    %eax,%edx
  10177f:	8d 0c d5 00 00 00 00 	lea    0x0(,%edx,8),%ecx
  101786:	01 ca                	add    %ecx,%edx
  101788:	01 d0                	add    %edx,%eax
  10178a:	ba 14 34 12 00       	mov    $0x123414,%edx
  10178f:	c7 04 10 01 00 00 00 	movl   $0x1,(%eax,%edx,1)
  101796:	c9                   	leave  
  101797:	c3                   	ret    

00101798 <TermSR>:
  101798:	55                   	push   %ebp
  101799:	89 e5                	mov    %esp,%ebp
  10179b:	83 ec 04             	sub    $0x4,%esp
  10179e:	8b 45 08             	mov    0x8(%ebp),%eax
  1017a1:	89 c1                	mov    %eax,%ecx
  1017a3:	89 ca                	mov    %ecx,%edx
  1017a5:	c1 e2 05             	shl    $0x5,%edx
  1017a8:	01 c2                	add    %eax,%edx
  1017aa:	01 d2                	add    %edx,%edx
  1017ac:	01 c2                	add    %eax,%edx
  1017ae:	8d 04 95 00 00 00 00 	lea    0x0(,%edx,4),%eax
  1017b5:	ba 6c 6f 10 00       	mov    $0x106f6c,%edx
  1017ba:	8b 44 10 04          	mov    0x4(%eax,%edx,1),%eax
  1017be:	83 c0 02             	add    $0x2,%eax
  1017c1:	50                   	push   %eax
  1017c2:	e8 bd 42 00 00       	call   105a84 <inportb>
  1017c7:	83 c4 04             	add    $0x4,%esp
  1017ca:	89 45 fc             	mov    %eax,-0x4(%ebp)
  1017cd:	83 7d fc 02          	cmpl   $0x2,-0x4(%ebp)
  1017d1:	75 11                	jne    1017e4 <TermSR+0x4c>
  1017d3:	8b 45 08             	mov    0x8(%ebp),%eax
  1017d6:	50                   	push   %eax
  1017d7:	e8 4c 00 00 00       	call   101828 <TermTxSR>
  1017dc:	83 c4 04             	add    $0x4,%esp
  1017df:	eb 15                	jmp    1017f6 <TermSR+0x5e>
  1017e1:	8d 76 00             	lea    0x0(%esi),%esi
  1017e4:	83 7d fc 04          	cmpl   $0x4,-0x4(%ebp)
  1017e8:	75 0c                	jne    1017f6 <TermSR+0x5e>
  1017ea:	8b 45 08             	mov    0x8(%ebp),%eax
  1017ed:	50                   	push   %eax
  1017ee:	e8 cd 01 00 00       	call   1019c0 <TermRxSR>
  1017f3:	83 c4 04             	add    $0x4,%esp
  1017f6:	8b 45 08             	mov    0x8(%ebp),%eax
  1017f9:	89 c1                	mov    %eax,%ecx
  1017fb:	89 ca                	mov    %ecx,%edx
  1017fd:	c1 e2 05             	shl    $0x5,%edx
  101800:	01 c2                	add    %eax,%edx
  101802:	01 d2                	add    %edx,%edx
  101804:	01 c2                	add    %eax,%edx
  101806:	8d 04 95 00 00 00 00 	lea    0x0(,%edx,4),%eax
  10180d:	ba 6c 6f 10 00       	mov    $0x106f6c,%edx
  101812:	83 3c 10 01          	cmpl   $0x1,(%eax,%edx,1)
  101816:	75 0c                	jne    101824 <TermSR+0x8c>
  101818:	8b 45 08             	mov    0x8(%ebp),%eax
  10181b:	50                   	push   %eax
  10181c:	e8 07 00 00 00       	call   101828 <TermTxSR>
  101821:	83 c4 04             	add    $0x4,%esp
  101824:	c9                   	leave  
  101825:	c3                   	ret    
  101826:	8d 36                	lea    (%esi),%esi

00101828 <TermTxSR>:
  101828:	55                   	push   %ebp
  101829:	89 e5                	mov    %esp,%ebp
  10182b:	83 ec 04             	sub    $0x4,%esp
  10182e:	8b 45 08             	mov    0x8(%ebp),%eax
  101831:	89 c1                	mov    %eax,%ecx
  101833:	89 ca                	mov    %ecx,%edx
  101835:	c1 e2 05             	shl    $0x5,%edx
  101838:	01 c2                	add    %eax,%edx
  10183a:	01 d2                	add    %edx,%edx
  10183c:	01 c2                	add    %eax,%edx
  10183e:	8d 04 95 00 00 00 00 	lea    0x0(,%edx,4),%eax
  101845:	8d 90 78 6f 10 00    	lea    0x106f78(%eax),%edx
  10184b:	52                   	push   %edx
  10184c:	e8 17 1d 00 00       	call   103568 <QisEmpty>
  101851:	83 c4 04             	add    $0x4,%esp
  101854:	89 c0                	mov    %eax,%eax
  101856:	85 c0                	test   %eax,%eax
  101858:	74 5e                	je     1018b8 <TermTxSR+0x90>
  10185a:	8b 45 08             	mov    0x8(%ebp),%eax
  10185d:	89 c1                	mov    %eax,%ecx
  10185f:	89 ca                	mov    %ecx,%edx
  101861:	c1 e2 05             	shl    $0x5,%edx
  101864:	01 c2                	add    %eax,%edx
  101866:	01 d2                	add    %edx,%edx
  101868:	01 c2                	add    %eax,%edx
  10186a:	8d 04 95 00 00 00 00 	lea    0x0(,%edx,4),%eax
  101871:	8d 90 20 70 10 00    	lea    0x107020(%eax),%edx
  101877:	52                   	push   %edx
  101878:	e8 eb 1c 00 00       	call   103568 <QisEmpty>
  10187d:	83 c4 04             	add    $0x4,%esp
  101880:	89 c0                	mov    %eax,%eax
  101882:	85 c0                	test   %eax,%eax
  101884:	74 32                	je     1018b8 <TermTxSR+0x90>
  101886:	8b 45 08             	mov    0x8(%ebp),%eax
  101889:	89 c1                	mov    %eax,%ecx
  10188b:	89 ca                	mov    %ecx,%edx
  10188d:	c1 e2 05             	shl    $0x5,%edx
  101890:	01 c2                	add    %eax,%edx
  101892:	01 d2                	add    %edx,%edx
  101894:	01 c2                	add    %eax,%edx
  101896:	8d 04 95 00 00 00 00 	lea    0x0(,%edx,4),%eax
  10189d:	ba 6c 6f 10 00       	mov    $0x106f6c,%edx
  1018a2:	c7 04 10 01 00 00 00 	movl   $0x1,(%eax,%edx,1)
  1018a9:	e9 0d 01 00 00       	jmp    1019bb <TermTxSR+0x193>
  1018ae:	8d 36                	lea    (%esi),%esi
  1018b0:	e9 06 01 00 00       	jmp    1019bb <TermTxSR+0x193>
  1018b5:	8d 76 00             	lea    0x0(%esi),%esi
  1018b8:	8b 45 08             	mov    0x8(%ebp),%eax
  1018bb:	89 c1                	mov    %eax,%ecx
  1018bd:	89 ca                	mov    %ecx,%edx
  1018bf:	c1 e2 05             	shl    $0x5,%edx
  1018c2:	01 c2                	add    %eax,%edx
  1018c4:	01 d2                	add    %edx,%edx
  1018c6:	01 c2                	add    %eax,%edx
  1018c8:	8d 04 95 00 00 00 00 	lea    0x0(,%edx,4),%eax
  1018cf:	8d 90 20 70 10 00    	lea    0x107020(%eax),%edx
  1018d5:	52                   	push   %edx
  1018d6:	e8 8d 1c 00 00       	call   103568 <QisEmpty>
  1018db:	83 c4 04             	add    $0x4,%esp
  1018de:	89 c0                	mov    %eax,%eax
  1018e0:	85 c0                	test   %eax,%eax
  1018e2:	75 30                	jne    101914 <TermTxSR+0xec>
  1018e4:	8b 45 08             	mov    0x8(%ebp),%eax
  1018e7:	89 c1                	mov    %eax,%ecx
  1018e9:	89 ca                	mov    %ecx,%edx
  1018eb:	c1 e2 05             	shl    $0x5,%edx
  1018ee:	01 c2                	add    %eax,%edx
  1018f0:	01 d2                	add    %edx,%edx
  1018f2:	01 c2                	add    %eax,%edx
  1018f4:	8d 04 95 00 00 00 00 	lea    0x0(,%edx,4),%eax
  1018fb:	8d 90 20 70 10 00    	lea    0x107020(%eax),%edx
  101901:	52                   	push   %edx
  101902:	e8 91 1c 00 00       	call   103598 <DeQ>
  101907:	83 c4 04             	add    $0x4,%esp
  10190a:	89 c0                	mov    %eax,%eax
  10190c:	88 45 ff             	mov    %al,-0x1(%ebp)
  10190f:	eb 59                	jmp    10196a <TermTxSR+0x142>
  101911:	8d 76 00             	lea    0x0(%esi),%esi
  101914:	8b 45 08             	mov    0x8(%ebp),%eax
  101917:	89 c1                	mov    %eax,%ecx
  101919:	89 ca                	mov    %ecx,%edx
  10191b:	c1 e2 05             	shl    $0x5,%edx
  10191e:	01 c2                	add    %eax,%edx
  101920:	01 d2                	add    %edx,%edx
  101922:	01 c2                	add    %eax,%edx
  101924:	8d 04 95 00 00 00 00 	lea    0x0(,%edx,4),%eax
  10192b:	8d 90 78 6f 10 00    	lea    0x106f78(%eax),%edx
  101931:	52                   	push   %edx
  101932:	e8 61 1c 00 00       	call   103598 <DeQ>
  101937:	83 c4 04             	add    $0x4,%esp
  10193a:	89 c0                	mov    %eax,%eax
  10193c:	88 45 ff             	mov    %al,-0x1(%ebp)
  10193f:	6a 02                	push   $0x2
  101941:	8b 45 08             	mov    0x8(%ebp),%eax
  101944:	89 c1                	mov    %eax,%ecx
  101946:	89 ca                	mov    %ecx,%edx
  101948:	c1 e2 05             	shl    $0x5,%edx
  10194b:	01 c2                	add    %eax,%edx
  10194d:	01 d2                	add    %edx,%edx
  10194f:	01 c2                	add    %eax,%edx
  101951:	8d 04 95 00 00 00 00 	lea    0x0(,%edx,4),%eax
  101958:	ba 6c 6f 10 00       	mov    $0x106f6c,%edx
  10195d:	8b 44 10 08          	mov    0x8(%eax,%edx,1),%eax
  101961:	50                   	push   %eax
  101962:	e8 bd fc ff ff       	call   101624 <MuxOpSR>
  101967:	83 c4 08             	add    $0x8,%esp
  10196a:	0f be 45 ff          	movsbl -0x1(%ebp),%eax
  10196e:	50                   	push   %eax
  10196f:	8b 45 08             	mov    0x8(%ebp),%eax
  101972:	89 c1                	mov    %eax,%ecx
  101974:	89 ca                	mov    %ecx,%edx
  101976:	c1 e2 05             	shl    $0x5,%edx
  101979:	01 c2                	add    %eax,%edx
  10197b:	01 d2                	add    %edx,%edx
  10197d:	01 c2                	add    %eax,%edx
  10197f:	8d 04 95 00 00 00 00 	lea    0x0(,%edx,4),%eax
  101986:	ba 6c 6f 10 00       	mov    $0x106f6c,%edx
  10198b:	8b 44 10 04          	mov    0x4(%eax,%edx,1),%eax
  10198f:	50                   	push   %eax
  101990:	e8 f7 40 00 00       	call   105a8c <outportb>
  101995:	83 c4 08             	add    $0x8,%esp
  101998:	8b 45 08             	mov    0x8(%ebp),%eax
  10199b:	89 c1                	mov    %eax,%ecx
  10199d:	89 ca                	mov    %ecx,%edx
  10199f:	c1 e2 05             	shl    $0x5,%edx
  1019a2:	01 c2                	add    %eax,%edx
  1019a4:	01 d2                	add    %edx,%edx
  1019a6:	01 c2                	add    %eax,%edx
  1019a8:	8d 04 95 00 00 00 00 	lea    0x0(,%edx,4),%eax
  1019af:	ba 6c 6f 10 00       	mov    $0x106f6c,%edx
  1019b4:	c7 04 10 00 00 00 00 	movl   $0x0,(%eax,%edx,1)
  1019bb:	c9                   	leave  
  1019bc:	c3                   	ret    
  1019bd:	8d 76 00             	lea    0x0(%esi),%esi

001019c0 <TermRxSR>:
  1019c0:	55                   	push   %ebp
  1019c1:	89 e5                	mov    %esp,%ebp
  1019c3:	83 ec 08             	sub    $0x8,%esp
  1019c6:	8b 45 08             	mov    0x8(%ebp),%eax
  1019c9:	89 c1                	mov    %eax,%ecx
  1019cb:	89 ca                	mov    %ecx,%edx
  1019cd:	c1 e2 05             	shl    $0x5,%edx
  1019d0:	01 c2                	add    %eax,%edx
  1019d2:	01 d2                	add    %edx,%edx
  1019d4:	01 c2                	add    %eax,%edx
  1019d6:	8d 04 95 00 00 00 00 	lea    0x0(,%edx,4),%eax
  1019dd:	ba 6c 6f 10 00       	mov    $0x106f6c,%edx
  1019e2:	8b 44 10 04          	mov    0x4(%eax,%edx,1),%eax
  1019e6:	50                   	push   %eax
  1019e7:	e8 98 40 00 00       	call   105a84 <inportb>
  1019ec:	83 c4 04             	add    $0x4,%esp
  1019ef:	89 c0                	mov    %eax,%eax
  1019f1:	88 45 ff             	mov    %al,-0x1(%ebp)
  1019f4:	c7 45 f8 03 00 00 00 	movl   $0x3,-0x8(%ebp)
  1019fb:	8b 45 08             	mov    0x8(%ebp),%eax
  1019fe:	89 c1                	mov    %eax,%ecx
  101a00:	89 ca                	mov    %ecx,%edx
  101a02:	c1 e2 05             	shl    $0x5,%edx
  101a05:	01 c2                	add    %eax,%edx
  101a07:	01 d2                	add    %edx,%edx
  101a09:	01 c2                	add    %eax,%edx
  101a0b:	8d 04 95 00 00 00 00 	lea    0x0(,%edx,4),%eax
  101a12:	8d 90 20 70 10 00    	lea    0x107020(%eax),%edx
  101a18:	52                   	push   %edx
  101a19:	0f be 45 ff          	movsbl -0x1(%ebp),%eax
  101a1d:	50                   	push   %eax
  101a1e:	e8 31 1c 00 00       	call   103654 <EnQ>
  101a23:	83 c4 08             	add    $0x8,%esp
  101a26:	8a 45 ff             	mov    -0x1(%ebp),%al
  101a29:	38 45 f8             	cmp    %al,-0x8(%ebp)
  101a2c:	0f 85 7b 01 00 00    	jne    101bad <TermRxSR+0x1ed>
  101a32:	68 55 69 10 00       	push   $0x106955
  101a37:	e8 0c 3c 00 00       	call   105648 <cons_printf>
  101a3c:	83 c4 04             	add    $0x4,%esp
  101a3f:	8b 45 08             	mov    0x8(%ebp),%eax
  101a42:	89 c1                	mov    %eax,%ecx
  101a44:	89 ca                	mov    %ecx,%edx
  101a46:	c1 e2 05             	shl    $0x5,%edx
  101a49:	01 c2                	add    %eax,%edx
  101a4b:	01 d2                	add    %edx,%edx
  101a4d:	01 c2                	add    %eax,%edx
  101a4f:	8d 04 95 00 00 00 00 	lea    0x0(,%edx,4),%eax
  101a56:	b9 6c 6f 10 00       	mov    $0x106f6c,%ecx
  101a5b:	8b 94 08 08 01 00 00 	mov    0x108(%eax,%ecx,1),%edx
  101a62:	89 d0                	mov    %edx,%eax
  101a64:	c1 e0 02             	shl    $0x2,%eax
  101a67:	01 d0                	add    %edx,%eax
  101a69:	01 c0                	add    %eax,%eax
  101a6b:	01 d0                	add    %edx,%eax
  101a6d:	01 c0                	add    %eax,%eax
  101a6f:	01 d0                	add    %edx,%eax
  101a71:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
  101a78:	8d 82 4c 36 12 00    	lea    0x12364c(%edx),%eax
  101a7e:	50                   	push   %eax
  101a7f:	e8 e4 1a 00 00       	call   103568 <QisEmpty>
  101a84:	83 c4 04             	add    $0x4,%esp
  101a87:	89 c0                	mov    %eax,%eax
  101a89:	85 c0                	test   %eax,%eax
  101a8b:	0f 85 1c 01 00 00    	jne    101bad <TermRxSR+0x1ed>
  101a91:	8b 45 08             	mov    0x8(%ebp),%eax
  101a94:	89 c1                	mov    %eax,%ecx
  101a96:	89 ca                	mov    %ecx,%edx
  101a98:	c1 e2 05             	shl    $0x5,%edx
  101a9b:	01 c2                	add    %eax,%edx
  101a9d:	01 d2                	add    %edx,%edx
  101a9f:	01 c2                	add    %eax,%edx
  101aa1:	8d 04 95 00 00 00 00 	lea    0x0(,%edx,4),%eax
  101aa8:	b9 6c 6f 10 00       	mov    $0x106f6c,%ecx
  101aad:	8b 94 08 08 01 00 00 	mov    0x108(%eax,%ecx,1),%edx
  101ab4:	89 d0                	mov    %edx,%eax
  101ab6:	c1 e0 02             	shl    $0x2,%eax
  101ab9:	01 d0                	add    %edx,%eax
  101abb:	01 c0                	add    %eax,%eax
  101abd:	01 d0                	add    %edx,%eax
  101abf:	01 c0                	add    %eax,%eax
  101ac1:	01 d0                	add    %edx,%eax
  101ac3:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
  101aca:	b9 44 36 12 00       	mov    $0x123644,%ecx
  101acf:	8b 44 0a 0c          	mov    0xc(%edx,%ecx,1),%eax
  101ad3:	89 c2                	mov    %eax,%edx
  101ad5:	01 d2                	add    %edx,%edx
  101ad7:	01 c2                	add    %eax,%edx
  101ad9:	8d 0c d5 00 00 00 00 	lea    0x0(,%edx,8),%ecx
  101ae0:	01 ca                	add    %ecx,%edx
  101ae2:	01 d0                	add    %edx,%eax
  101ae4:	ba 14 34 12 00       	mov    $0x123414,%edx
  101ae9:	83 7c 10 18 ff       	cmpl   $0xffffffff,0x18(%eax,%edx,1)
  101aee:	0f 84 b9 00 00 00    	je     101bad <TermRxSR+0x1ed>
  101af4:	68 65 69 10 00       	push   $0x106965
  101af9:	e8 4a 3b 00 00       	call   105648 <cons_printf>
  101afe:	83 c4 04             	add    $0x4,%esp
  101b01:	8b 45 08             	mov    0x8(%ebp),%eax
  101b04:	50                   	push   %eax
  101b05:	8b 45 08             	mov    0x8(%ebp),%eax
  101b08:	89 c1                	mov    %eax,%ecx
  101b0a:	89 ca                	mov    %ecx,%edx
  101b0c:	c1 e2 05             	shl    $0x5,%edx
  101b0f:	01 c2                	add    %eax,%edx
  101b11:	01 d2                	add    %edx,%edx
  101b13:	01 c2                	add    %eax,%edx
  101b15:	8d 04 95 00 00 00 00 	lea    0x0(,%edx,4),%eax
  101b1c:	b9 6c 6f 10 00       	mov    $0x106f6c,%ecx
  101b21:	8b 94 08 08 01 00 00 	mov    0x108(%eax,%ecx,1),%edx
  101b28:	89 d0                	mov    %edx,%eax
  101b2a:	c1 e0 02             	shl    $0x2,%eax
  101b2d:	01 d0                	add    %edx,%eax
  101b2f:	01 c0                	add    %eax,%eax
  101b31:	01 d0                	add    %edx,%eax
  101b33:	01 c0                	add    %eax,%eax
  101b35:	01 d0                	add    %edx,%eax
  101b37:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
  101b3e:	b9 44 36 12 00       	mov    $0x123644,%ecx
  101b43:	8b 44 0a 0c          	mov    0xc(%edx,%ecx,1),%eax
  101b47:	89 c2                	mov    %eax,%edx
  101b49:	01 d2                	add    %edx,%edx
  101b4b:	01 c2                	add    %eax,%edx
  101b4d:	8d 0c d5 00 00 00 00 	lea    0x0(,%edx,8),%ecx
  101b54:	01 ca                	add    %ecx,%edx
  101b56:	01 d0                	add    %edx,%eax
  101b58:	ba 14 34 12 00       	mov    $0x123414,%edx
  101b5d:	8b 44 10 18          	mov    0x18(%eax,%edx,1),%eax
  101b61:	50                   	push   %eax
  101b62:	8b 45 08             	mov    0x8(%ebp),%eax
  101b65:	89 c1                	mov    %eax,%ecx
  101b67:	89 ca                	mov    %ecx,%edx
  101b69:	c1 e2 05             	shl    $0x5,%edx
  101b6c:	01 c2                	add    %eax,%edx
  101b6e:	01 d2                	add    %edx,%edx
  101b70:	01 c2                	add    %eax,%edx
  101b72:	8d 04 95 00 00 00 00 	lea    0x0(,%edx,4),%eax
  101b79:	b9 6c 6f 10 00       	mov    $0x106f6c,%ecx
  101b7e:	8b 94 08 08 01 00 00 	mov    0x108(%eax,%ecx,1),%edx
  101b85:	89 d0                	mov    %edx,%eax
  101b87:	c1 e0 02             	shl    $0x2,%eax
  101b8a:	01 d0                	add    %edx,%eax
  101b8c:	01 c0                	add    %eax,%eax
  101b8e:	01 d0                	add    %edx,%eax
  101b90:	01 c0                	add    %eax,%eax
  101b92:	01 d0                	add    %edx,%eax
  101b94:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
  101b9b:	b8 44 36 12 00       	mov    $0x123644,%eax
  101ba0:	8b 54 02 0c          	mov    0xc(%edx,%eax,1),%edx
  101ba4:	52                   	push   %edx
  101ba5:	e8 62 08 00 00       	call   10240c <WrapperSR>
  101baa:	83 c4 0c             	add    $0xc,%esp
  101bad:	80 7d ff 0d          	cmpb   $0xd,-0x1(%ebp)
  101bb1:	75 28                	jne    101bdb <TermRxSR+0x21b>
  101bb3:	8b 45 08             	mov    0x8(%ebp),%eax
  101bb6:	89 c1                	mov    %eax,%ecx
  101bb8:	89 ca                	mov    %ecx,%edx
  101bba:	c1 e2 05             	shl    $0x5,%edx
  101bbd:	01 c2                	add    %eax,%edx
  101bbf:	01 d2                	add    %edx,%edx
  101bc1:	01 c2                	add    %eax,%edx
  101bc3:	8d 04 95 00 00 00 00 	lea    0x0(,%edx,4),%eax
  101bca:	8d 90 20 70 10 00    	lea    0x107020(%eax),%edx
  101bd0:	52                   	push   %edx
  101bd1:	6a 0a                	push   $0xa
  101bd3:	e8 7c 1a 00 00       	call   103654 <EnQ>
  101bd8:	83 c4 08             	add    $0x8,%esp
  101bdb:	80 7d ff 0d          	cmpb   $0xd,-0x1(%ebp)
  101bdf:	75 2b                	jne    101c0c <TermRxSR+0x24c>
  101be1:	8b 45 08             	mov    0x8(%ebp),%eax
  101be4:	89 c1                	mov    %eax,%ecx
  101be6:	89 ca                	mov    %ecx,%edx
  101be8:	c1 e2 05             	shl    $0x5,%edx
  101beb:	01 c2                	add    %eax,%edx
  101bed:	01 d2                	add    %edx,%edx
  101bef:	01 c2                	add    %eax,%edx
  101bf1:	8d 04 95 00 00 00 00 	lea    0x0(,%edx,4),%eax
  101bf8:	8d 90 cc 6f 10 00    	lea    0x106fcc(%eax),%edx
  101bfe:	52                   	push   %edx
  101bff:	6a 00                	push   $0x0
  101c01:	e8 4e 1a 00 00       	call   103654 <EnQ>
  101c06:	83 c4 08             	add    $0x8,%esp
  101c09:	eb 2c                	jmp    101c37 <TermRxSR+0x277>
  101c0b:	90                   	nop
  101c0c:	8b 45 08             	mov    0x8(%ebp),%eax
  101c0f:	89 c1                	mov    %eax,%ecx
  101c11:	89 ca                	mov    %ecx,%edx
  101c13:	c1 e2 05             	shl    $0x5,%edx
  101c16:	01 c2                	add    %eax,%edx
  101c18:	01 d2                	add    %edx,%edx
  101c1a:	01 c2                	add    %eax,%edx
  101c1c:	8d 04 95 00 00 00 00 	lea    0x0(,%edx,4),%eax
  101c23:	8d 90 cc 6f 10 00    	lea    0x106fcc(%eax),%edx
  101c29:	52                   	push   %edx
  101c2a:	0f be 45 ff          	movsbl -0x1(%ebp),%eax
  101c2e:	50                   	push   %eax
  101c2f:	e8 20 1a 00 00       	call   103654 <EnQ>
  101c34:	83 c4 08             	add    $0x8,%esp
  101c37:	6a 02                	push   $0x2
  101c39:	8b 45 08             	mov    0x8(%ebp),%eax
  101c3c:	89 c1                	mov    %eax,%ecx
  101c3e:	89 ca                	mov    %ecx,%edx
  101c40:	c1 e2 05             	shl    $0x5,%edx
  101c43:	01 c2                	add    %eax,%edx
  101c45:	01 d2                	add    %edx,%edx
  101c47:	01 c2                	add    %eax,%edx
  101c49:	8d 04 95 00 00 00 00 	lea    0x0(,%edx,4),%eax
  101c50:	ba 6c 6f 10 00       	mov    $0x106f6c,%edx
  101c55:	8b 84 10 08 01 00 00 	mov    0x108(%eax,%edx,1),%eax
  101c5c:	50                   	push   %eax
  101c5d:	e8 c2 f9 ff ff       	call   101624 <MuxOpSR>
  101c62:	83 c4 08             	add    $0x8,%esp
  101c65:	c9                   	leave  
  101c66:	c3                   	ret    
  101c67:	90                   	nop

00101c68 <ForkSR>:
  101c68:	55                   	push   %ebp
  101c69:	89 e5                	mov    %esp,%ebp
  101c6b:	83 ec 10             	sub    $0x10,%esp
  101c6e:	57                   	push   %edi
  101c6f:	56                   	push   %esi
  101c70:	53                   	push   %ebx
  101c71:	a1 14 f3 10 00       	mov    0x10f314,%eax
  101c76:	89 45 fc             	mov    %eax,-0x4(%ebp)
  101c79:	68 6c 33 12 00       	push   $0x12336c
  101c7e:	e8 e5 18 00 00       	call   103568 <QisEmpty>
  101c83:	83 c4 04             	add    $0x4,%esp
  101c86:	89 c0                	mov    %eax,%eax
  101c88:	85 c0                	test   %eax,%eax
  101c8a:	74 18                	je     101ca4 <ForkSR+0x3c>
  101c8c:	68 78 69 10 00       	push   $0x106978
  101c91:	e8 b2 39 00 00       	call   105648 <cons_printf>
  101c96:	83 c4 04             	add    $0x4,%esp
  101c99:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  101c9e:	e9 8d 02 00 00       	jmp    101f30 <ForkSR+0x2c8>
  101ca3:	90                   	nop
  101ca4:	68 6c 33 12 00       	push   $0x12336c
  101ca9:	e8 ea 18 00 00       	call   103598 <DeQ>
  101cae:	83 c4 04             	add    $0x4,%esp
  101cb1:	89 c0                	mov    %eax,%eax
  101cb3:	89 45 f8             	mov    %eax,-0x8(%ebp)
  101cb6:	6a 1c                	push   $0x1c
  101cb8:	8b 45 f8             	mov    -0x8(%ebp),%eax
  101cbb:	89 c2                	mov    %eax,%edx
  101cbd:	01 d2                	add    %edx,%edx
  101cbf:	01 c2                	add    %eax,%edx
  101cc1:	8d 0c d5 00 00 00 00 	lea    0x0(,%edx,8),%ecx
  101cc8:	01 ca                	add    %ecx,%edx
  101cca:	01 d0                	add    %edx,%eax
  101ccc:	8d 90 14 34 12 00    	lea    0x123414(%eax),%edx
  101cd2:	52                   	push   %edx
  101cd3:	e8 70 18 00 00       	call   103548 <Bzero>
  101cd8:	83 c4 08             	add    $0x8,%esp
  101cdb:	8b 45 f8             	mov    -0x8(%ebp),%eax
  101cde:	89 c2                	mov    %eax,%edx
  101ce0:	01 d2                	add    %edx,%edx
  101ce2:	01 c2                	add    %eax,%edx
  101ce4:	8d 0c d5 00 00 00 00 	lea    0x0(,%edx,8),%ecx
  101ceb:	01 ca                	add    %ecx,%edx
  101ced:	01 d0                	add    %edx,%eax
  101cef:	ba 14 34 12 00       	mov    $0x123414,%edx
  101cf4:	c7 04 10 01 00 00 00 	movl   $0x1,(%eax,%edx,1)
  101cfb:	8b 45 f8             	mov    -0x8(%ebp),%eax
  101cfe:	89 c2                	mov    %eax,%edx
  101d00:	01 d2                	add    %edx,%edx
  101d02:	01 c2                	add    %eax,%edx
  101d04:	8d 0c d5 00 00 00 00 	lea    0x0(,%edx,8),%ecx
  101d0b:	01 ca                	add    %ecx,%edx
  101d0d:	01 d0                	add    %edx,%eax
  101d0f:	ba 14 34 12 00       	mov    $0x123414,%edx
  101d14:	8b 4d fc             	mov    -0x4(%ebp),%ecx
  101d17:	89 4c 10 14          	mov    %ecx,0x14(%eax,%edx,1)
  101d1b:	68 18 33 12 00       	push   $0x123318
  101d20:	8b 45 f8             	mov    -0x8(%ebp),%eax
  101d23:	50                   	push   %eax
  101d24:	e8 2b 19 00 00       	call   103654 <EnQ>
  101d29:	83 c4 08             	add    $0x8,%esp
  101d2c:	8b 45 f8             	mov    -0x8(%ebp),%eax
  101d2f:	89 c2                	mov    %eax,%edx
  101d31:	89 d0                	mov    %edx,%eax
  101d33:	c1 e0 0c             	shl    $0xc,%eax
  101d36:	8b 55 fc             	mov    -0x4(%ebp),%edx
  101d39:	89 d1                	mov    %edx,%ecx
  101d3b:	89 ca                	mov    %ecx,%edx
  101d3d:	c1 e2 0c             	shl    $0xc,%edx
  101d40:	89 c7                	mov    %eax,%edi
  101d42:	29 d7                	sub    %edx,%edi
  101d44:	89 7d f0             	mov    %edi,-0x10(%ebp)
  101d47:	8b 45 f8             	mov    -0x8(%ebp),%eax
  101d4a:	89 c2                	mov    %eax,%edx
  101d4c:	01 d2                	add    %edx,%edx
  101d4e:	01 c2                	add    %eax,%edx
  101d50:	8d 0c d5 00 00 00 00 	lea    0x0(,%edx,8),%ecx
  101d57:	01 ca                	add    %ecx,%edx
  101d59:	01 d0                	add    %edx,%eax
  101d5b:	ba 14 34 12 00       	mov    $0x123414,%edx
  101d60:	8b 4d fc             	mov    -0x4(%ebp),%ecx
  101d63:	89 cb                	mov    %ecx,%ebx
  101d65:	01 db                	add    %ebx,%ebx
  101d67:	01 cb                	add    %ecx,%ebx
  101d69:	8d 34 dd 00 00 00 00 	lea    0x0(,%ebx,8),%esi
  101d70:	01 f3                	add    %esi,%ebx
  101d72:	01 d9                	add    %ebx,%ecx
  101d74:	bb 14 34 12 00       	mov    $0x123414,%ebx
  101d79:	8b 7c 19 10          	mov    0x10(%ecx,%ebx,1),%edi
  101d7d:	03 7d f0             	add    -0x10(%ebp),%edi
  101d80:	89 7c 10 10          	mov    %edi,0x10(%eax,%edx,1)
  101d84:	68 00 10 00 00       	push   $0x1000
  101d89:	8b 45 fc             	mov    -0x4(%ebp),%eax
  101d8c:	89 c2                	mov    %eax,%edx
  101d8e:	89 d0                	mov    %edx,%eax
  101d90:	c1 e0 0c             	shl    $0xc,%eax
  101d93:	8d 90 18 f3 10 00    	lea    0x10f318(%eax),%edx
  101d99:	52                   	push   %edx
  101d9a:	8b 45 f8             	mov    -0x8(%ebp),%eax
  101d9d:	89 c2                	mov    %eax,%edx
  101d9f:	89 d0                	mov    %edx,%eax
  101da1:	c1 e0 0c             	shl    $0xc,%eax
  101da4:	8d 90 18 f3 10 00    	lea    0x10f318(%eax),%edx
  101daa:	52                   	push   %edx
  101dab:	e8 e0 18 00 00       	call   103690 <MemCpy>
  101db0:	83 c4 0c             	add    $0xc,%esp
  101db3:	8b 45 f8             	mov    -0x8(%ebp),%eax
  101db6:	89 c2                	mov    %eax,%edx
  101db8:	01 d2                	add    %edx,%edx
  101dba:	01 c2                	add    %eax,%edx
  101dbc:	8d 0c d5 00 00 00 00 	lea    0x0(,%edx,8),%ecx
  101dc3:	01 ca                	add    %ecx,%edx
  101dc5:	01 d0                	add    %edx,%eax
  101dc7:	ba 14 34 12 00       	mov    $0x123414,%edx
  101dcc:	8b 44 10 10          	mov    0x10(%eax,%edx,1),%eax
  101dd0:	c7 40 1c 00 00 00 00 	movl   $0x0,0x1c(%eax)
  101dd7:	8b 45 f8             	mov    -0x8(%ebp),%eax
  101dda:	89 c2                	mov    %eax,%edx
  101ddc:	01 d2                	add    %edx,%edx
  101dde:	01 c2                	add    %eax,%edx
  101de0:	8d 0c d5 00 00 00 00 	lea    0x0(,%edx,8),%ecx
  101de7:	01 ca                	add    %ecx,%edx
  101de9:	01 d0                	add    %edx,%eax
  101deb:	ba 14 34 12 00       	mov    $0x123414,%edx
  101df0:	8b 44 10 10          	mov    0x10(%eax,%edx,1),%eax
  101df4:	8b 55 f8             	mov    -0x8(%ebp),%edx
  101df7:	89 d1                	mov    %edx,%ecx
  101df9:	01 c9                	add    %ecx,%ecx
  101dfb:	01 d1                	add    %edx,%ecx
  101dfd:	8d 1c cd 00 00 00 00 	lea    0x0(,%ecx,8),%ebx
  101e04:	01 d9                	add    %ebx,%ecx
  101e06:	01 ca                	add    %ecx,%edx
  101e08:	b9 14 34 12 00       	mov    $0x123414,%ecx
  101e0d:	8b 54 0a 10          	mov    0x10(%edx,%ecx,1),%edx
  101e11:	8b 7a 0c             	mov    0xc(%edx),%edi
  101e14:	03 7d f0             	add    -0x10(%ebp),%edi
  101e17:	89 78 0c             	mov    %edi,0xc(%eax)
  101e1a:	8b 45 f8             	mov    -0x8(%ebp),%eax
  101e1d:	89 c2                	mov    %eax,%edx
  101e1f:	01 d2                	add    %edx,%edx
  101e21:	01 c2                	add    %eax,%edx
  101e23:	8d 0c d5 00 00 00 00 	lea    0x0(,%edx,8),%ecx
  101e2a:	01 ca                	add    %ecx,%edx
  101e2c:	01 d0                	add    %edx,%eax
  101e2e:	ba 14 34 12 00       	mov    $0x123414,%edx
  101e33:	8b 44 10 10          	mov    0x10(%eax,%edx,1),%eax
  101e37:	8b 55 f8             	mov    -0x8(%ebp),%edx
  101e3a:	89 d1                	mov    %edx,%ecx
  101e3c:	01 c9                	add    %ecx,%ecx
  101e3e:	01 d1                	add    %edx,%ecx
  101e40:	8d 1c cd 00 00 00 00 	lea    0x0(,%ecx,8),%ebx
  101e47:	01 d9                	add    %ebx,%ecx
  101e49:	01 ca                	add    %ecx,%edx
  101e4b:	b9 14 34 12 00       	mov    $0x123414,%ecx
  101e50:	8b 54 0a 10          	mov    0x10(%edx,%ecx,1),%edx
  101e54:	8b 7a 08             	mov    0x8(%edx),%edi
  101e57:	03 7d f0             	add    -0x10(%ebp),%edi
  101e5a:	89 78 08             	mov    %edi,0x8(%eax)
  101e5d:	8b 45 f8             	mov    -0x8(%ebp),%eax
  101e60:	89 c2                	mov    %eax,%edx
  101e62:	01 d2                	add    %edx,%edx
  101e64:	01 c2                	add    %eax,%edx
  101e66:	8d 0c d5 00 00 00 00 	lea    0x0(,%edx,8),%ecx
  101e6d:	01 ca                	add    %ecx,%edx
  101e6f:	01 d0                	add    %edx,%eax
  101e71:	ba 14 34 12 00       	mov    $0x123414,%edx
  101e76:	8b 44 10 10          	mov    0x10(%eax,%edx,1),%eax
  101e7a:	8b 55 f8             	mov    -0x8(%ebp),%edx
  101e7d:	89 d1                	mov    %edx,%ecx
  101e7f:	01 c9                	add    %ecx,%ecx
  101e81:	01 d1                	add    %edx,%ecx
  101e83:	8d 1c cd 00 00 00 00 	lea    0x0(,%ecx,8),%ebx
  101e8a:	01 d9                	add    %ebx,%ecx
  101e8c:	01 ca                	add    %ecx,%edx
  101e8e:	b9 14 34 12 00       	mov    $0x123414,%ecx
  101e93:	8b 54 0a 10          	mov    0x10(%edx,%ecx,1),%edx
  101e97:	8b 7a 04             	mov    0x4(%edx),%edi
  101e9a:	03 7d f0             	add    -0x10(%ebp),%edi
  101e9d:	89 78 04             	mov    %edi,0x4(%eax)
  101ea0:	8b 45 f8             	mov    -0x8(%ebp),%eax
  101ea3:	89 c2                	mov    %eax,%edx
  101ea5:	01 d2                	add    %edx,%edx
  101ea7:	01 c2                	add    %eax,%edx
  101ea9:	8d 0c d5 00 00 00 00 	lea    0x0(,%edx,8),%ecx
  101eb0:	01 ca                	add    %ecx,%edx
  101eb2:	01 d0                	add    %edx,%eax
  101eb4:	ba 14 34 12 00       	mov    $0x123414,%edx
  101eb9:	8b 44 10 10          	mov    0x10(%eax,%edx,1),%eax
  101ebd:	8b 55 f8             	mov    -0x8(%ebp),%edx
  101ec0:	89 d1                	mov    %edx,%ecx
  101ec2:	01 c9                	add    %ecx,%ecx
  101ec4:	01 d1                	add    %edx,%ecx
  101ec6:	8d 1c cd 00 00 00 00 	lea    0x0(,%ecx,8),%ebx
  101ecd:	01 d9                	add    %ebx,%ecx
  101ecf:	01 ca                	add    %ecx,%edx
  101ed1:	b9 14 34 12 00       	mov    $0x123414,%ecx
  101ed6:	8b 54 0a 10          	mov    0x10(%edx,%ecx,1),%edx
  101eda:	8b 3a                	mov    (%edx),%edi
  101edc:	03 7d f0             	add    -0x10(%ebp),%edi
  101edf:	89 38                	mov    %edi,(%eax)
  101ee1:	8b 45 f8             	mov    -0x8(%ebp),%eax
  101ee4:	89 c2                	mov    %eax,%edx
  101ee6:	01 d2                	add    %edx,%edx
  101ee8:	01 c2                	add    %eax,%edx
  101eea:	8d 0c d5 00 00 00 00 	lea    0x0(,%edx,8),%ecx
  101ef1:	01 ca                	add    %ecx,%edx
  101ef3:	01 d0                	add    %edx,%eax
  101ef5:	ba 14 34 12 00       	mov    $0x123414,%edx
  101efa:	8b 44 10 10          	mov    0x10(%eax,%edx,1),%eax
  101efe:	8b 50 08             	mov    0x8(%eax),%edx
  101f01:	89 55 f4             	mov    %edx,-0xc(%ebp)
  101f04:	8b 45 f4             	mov    -0xc(%ebp),%eax
  101f07:	83 38 00             	cmpl   $0x0,(%eax)
  101f0a:	75 04                	jne    101f10 <ForkSR+0x2a8>
  101f0c:	eb 1a                	jmp    101f28 <ForkSR+0x2c0>
  101f0e:	8d 36                	lea    (%esi),%esi
  101f10:	8b 45 f4             	mov    -0xc(%ebp),%eax
  101f13:	8b 55 f4             	mov    -0xc(%ebp),%edx
  101f16:	8b 3a                	mov    (%edx),%edi
  101f18:	03 7d f0             	add    -0x10(%ebp),%edi
  101f1b:	89 38                	mov    %edi,(%eax)
  101f1d:	8b 45 f4             	mov    -0xc(%ebp),%eax
  101f20:	8b 10                	mov    (%eax),%edx
  101f22:	89 55 f4             	mov    %edx,-0xc(%ebp)
  101f25:	eb dd                	jmp    101f04 <ForkSR+0x29c>
  101f27:	90                   	nop
  101f28:	8b 45 f8             	mov    -0x8(%ebp),%eax
  101f2b:	eb 03                	jmp    101f30 <ForkSR+0x2c8>
  101f2d:	8d 76 00             	lea    0x0(%esi),%esi
  101f30:	8d 65 e4             	lea    -0x1c(%ebp),%esp
  101f33:	5b                   	pop    %ebx
  101f34:	5e                   	pop    %esi
  101f35:	5f                   	pop    %edi
  101f36:	c9                   	leave  
  101f37:	c3                   	ret    

00101f38 <WaitSR>:
  101f38:	55                   	push   %ebp
  101f39:	89 e5                	mov    %esp,%ebp
  101f3b:	83 ec 08             	sub    $0x8,%esp
  101f3e:	90                   	nop
  101f3f:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
  101f46:	83 7d fc 13          	cmpl   $0x13,-0x4(%ebp)
  101f4a:	7e 04                	jle    101f50 <WaitSR+0x18>
  101f4c:	eb 52                	jmp    101fa0 <WaitSR+0x68>
  101f4e:	8d 36                	lea    (%esi),%esi
  101f50:	8b 45 fc             	mov    -0x4(%ebp),%eax
  101f53:	89 c2                	mov    %eax,%edx
  101f55:	01 d2                	add    %edx,%edx
  101f57:	01 c2                	add    %eax,%edx
  101f59:	8d 0c d5 00 00 00 00 	lea    0x0(,%edx,8),%ecx
  101f60:	01 ca                	add    %ecx,%edx
  101f62:	01 d0                	add    %edx,%eax
  101f64:	ba 14 34 12 00       	mov    $0x123414,%edx
  101f69:	8b 0d 14 f3 10 00    	mov    0x10f314,%ecx
  101f6f:	39 4c 10 14          	cmp    %ecx,0x14(%eax,%edx,1)
  101f73:	75 23                	jne    101f98 <WaitSR+0x60>
  101f75:	8b 45 fc             	mov    -0x4(%ebp),%eax
  101f78:	89 c2                	mov    %eax,%edx
  101f7a:	01 d2                	add    %edx,%edx
  101f7c:	01 c2                	add    %eax,%edx
  101f7e:	8d 0c d5 00 00 00 00 	lea    0x0(,%edx,8),%ecx
  101f85:	01 ca                	add    %ecx,%edx
  101f87:	01 d0                	add    %edx,%eax
  101f89:	ba 14 34 12 00       	mov    $0x123414,%edx
  101f8e:	83 3c 10 05          	cmpl   $0x5,(%eax,%edx,1)
  101f92:	75 04                	jne    101f98 <WaitSR+0x60>
  101f94:	eb 0a                	jmp    101fa0 <WaitSR+0x68>
  101f96:	8d 36                	lea    (%esi),%esi
  101f98:	ff 45 fc             	incl   -0x4(%ebp)
  101f9b:	eb a9                	jmp    101f46 <WaitSR+0xe>
  101f9d:	8d 76 00             	lea    0x0(%esi),%esi
  101fa0:	83 7d fc 14          	cmpl   $0x14,-0x4(%ebp)
  101fa4:	75 36                	jne    101fdc <WaitSR+0xa4>
  101fa6:	a1 14 f3 10 00       	mov    0x10f314,%eax
  101fab:	89 c2                	mov    %eax,%edx
  101fad:	01 d2                	add    %edx,%edx
  101faf:	01 c2                	add    %eax,%edx
  101fb1:	8d 0c d5 00 00 00 00 	lea    0x0(,%edx,8),%ecx
  101fb8:	01 ca                	add    %ecx,%edx
  101fba:	01 d0                	add    %edx,%eax
  101fbc:	ba 14 34 12 00       	mov    $0x123414,%edx
  101fc1:	c7 04 10 06 00 00 00 	movl   $0x6,(%eax,%edx,1)
  101fc8:	c7 05 14 f3 10 00 ff 	movl   $0xffffffff,0x10f314
  101fcf:	ff ff ff 
  101fd2:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  101fd7:	eb 5f                	jmp    102038 <WaitSR+0x100>
  101fd9:	8d 76 00             	lea    0x0(%esi),%esi
  101fdc:	8b 45 fc             	mov    -0x4(%ebp),%eax
  101fdf:	89 c2                	mov    %eax,%edx
  101fe1:	01 d2                	add    %edx,%edx
  101fe3:	01 c2                	add    %eax,%edx
  101fe5:	8d 0c d5 00 00 00 00 	lea    0x0(,%edx,8),%ecx
  101fec:	01 ca                	add    %ecx,%edx
  101fee:	01 d0                	add    %edx,%eax
  101ff0:	ba 14 34 12 00       	mov    $0x123414,%edx
  101ff5:	8b 44 10 10          	mov    0x10(%eax,%edx,1),%eax
  101ff9:	8b 50 1c             	mov    0x1c(%eax),%edx
  101ffc:	89 55 f8             	mov    %edx,-0x8(%ebp)
  101fff:	8b 45 fc             	mov    -0x4(%ebp),%eax
  102002:	89 c2                	mov    %eax,%edx
  102004:	01 d2                	add    %edx,%edx
  102006:	01 c2                	add    %eax,%edx
  102008:	8d 0c d5 00 00 00 00 	lea    0x0(,%edx,8),%ecx
  10200f:	01 ca                	add    %ecx,%edx
  102011:	01 d0                	add    %edx,%eax
  102013:	ba 14 34 12 00       	mov    $0x123414,%edx
  102018:	c7 04 10 00 00 00 00 	movl   $0x0,(%eax,%edx,1)
  10201f:	68 6c 33 12 00       	push   $0x12336c
  102024:	8b 45 fc             	mov    -0x4(%ebp),%eax
  102027:	50                   	push   %eax
  102028:	e8 27 16 00 00       	call   103654 <EnQ>
  10202d:	83 c4 08             	add    $0x8,%esp
  102030:	8b 45 f8             	mov    -0x8(%ebp),%eax
  102033:	eb 03                	jmp    102038 <WaitSR+0x100>
  102035:	8d 76 00             	lea    0x0(%esi),%esi
  102038:	c9                   	leave  
  102039:	c3                   	ret    
  10203a:	8d 36                	lea    (%esi),%esi

0010203c <ExitSR>:
  10203c:	55                   	push   %ebp
  10203d:	89 e5                	mov    %esp,%ebp
  10203f:	83 ec 08             	sub    $0x8,%esp
  102042:	a1 14 f3 10 00       	mov    0x10f314,%eax
  102047:	89 c2                	mov    %eax,%edx
  102049:	01 d2                	add    %edx,%edx
  10204b:	01 c2                	add    %eax,%edx
  10204d:	8d 0c d5 00 00 00 00 	lea    0x0(,%edx,8),%ecx
  102054:	01 ca                	add    %ecx,%edx
  102056:	01 d0                	add    %edx,%eax
  102058:	ba 14 34 12 00       	mov    $0x123414,%edx
  10205d:	8b 44 10 14          	mov    0x14(%eax,%edx,1),%eax
  102061:	89 45 f8             	mov    %eax,-0x8(%ebp)
  102064:	8b 45 f8             	mov    -0x8(%ebp),%eax
  102067:	89 c2                	mov    %eax,%edx
  102069:	01 d2                	add    %edx,%edx
  10206b:	01 c2                	add    %eax,%edx
  10206d:	8d 0c d5 00 00 00 00 	lea    0x0(,%edx,8),%ecx
  102074:	01 ca                	add    %ecx,%edx
  102076:	01 d0                	add    %edx,%eax
  102078:	ba 14 34 12 00       	mov    $0x123414,%edx
  10207d:	83 3c 10 06          	cmpl   $0x6,(%eax,%edx,1)
  102081:	74 31                	je     1020b4 <ExitSR+0x78>
  102083:	a1 14 f3 10 00       	mov    0x10f314,%eax
  102088:	89 c2                	mov    %eax,%edx
  10208a:	01 d2                	add    %edx,%edx
  10208c:	01 c2                	add    %eax,%edx
  10208e:	8d 0c d5 00 00 00 00 	lea    0x0(,%edx,8),%ecx
  102095:	01 ca                	add    %ecx,%edx
  102097:	01 d0                	add    %edx,%eax
  102099:	ba 14 34 12 00       	mov    $0x123414,%edx
  10209e:	c7 04 10 05 00 00 00 	movl   $0x5,(%eax,%edx,1)
  1020a5:	c7 05 14 f3 10 00 ff 	movl   $0xffffffff,0x10f314
  1020ac:	ff ff ff 
  1020af:	e9 cb 00 00 00       	jmp    10217f <ExitSR+0x143>
  1020b4:	8b 45 f8             	mov    -0x8(%ebp),%eax
  1020b7:	89 c2                	mov    %eax,%edx
  1020b9:	01 d2                	add    %edx,%edx
  1020bb:	01 c2                	add    %eax,%edx
  1020bd:	8d 0c d5 00 00 00 00 	lea    0x0(,%edx,8),%ecx
  1020c4:	01 ca                	add    %ecx,%edx
  1020c6:	01 d0                	add    %edx,%eax
  1020c8:	ba 14 34 12 00       	mov    $0x123414,%edx
  1020cd:	c7 04 10 01 00 00 00 	movl   $0x1,(%eax,%edx,1)
  1020d4:	68 18 33 12 00       	push   $0x123318
  1020d9:	8b 45 f8             	mov    -0x8(%ebp),%eax
  1020dc:	50                   	push   %eax
  1020dd:	e8 72 15 00 00       	call   103654 <EnQ>
  1020e2:	83 c4 08             	add    $0x8,%esp
  1020e5:	8b 45 f8             	mov    -0x8(%ebp),%eax
  1020e8:	89 c2                	mov    %eax,%edx
  1020ea:	01 d2                	add    %edx,%edx
  1020ec:	01 c2                	add    %eax,%edx
  1020ee:	8d 0c d5 00 00 00 00 	lea    0x0(,%edx,8),%ecx
  1020f5:	01 ca                	add    %ecx,%edx
  1020f7:	01 d0                	add    %edx,%eax
  1020f9:	ba 14 34 12 00       	mov    $0x123414,%edx
  1020fe:	8b 44 10 10          	mov    0x10(%eax,%edx,1),%eax
  102102:	8b 55 08             	mov    0x8(%ebp),%edx
  102105:	89 50 1c             	mov    %edx,0x1c(%eax)
  102108:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
  10210f:	83 7d fc 13          	cmpl   $0x13,-0x4(%ebp)
  102113:	7e 03                	jle    102118 <ExitSR+0xdc>
  102115:	eb 29                	jmp    102140 <ExitSR+0x104>
  102117:	90                   	nop
  102118:	8b 45 fc             	mov    -0x4(%ebp),%eax
  10211b:	8b 14 85 1c 6f 10 00 	mov    0x106f1c(,%eax,4),%edx
  102122:	39 15 14 f3 10 00    	cmp    %edx,0x10f314
  102128:	75 10                	jne    10213a <ExitSR+0xfe>
  10212a:	a1 14 f3 10 00       	mov    0x10f314,%eax
  10212f:	c7 04 85 1c 6f 10 00 	movl   $0xffffffff,0x106f1c(,%eax,4)
  102136:	ff ff ff ff 
  10213a:	ff 45 fc             	incl   -0x4(%ebp)
  10213d:	eb d0                	jmp    10210f <ExitSR+0xd3>
  10213f:	90                   	nop
  102140:	a1 14 f3 10 00       	mov    0x10f314,%eax
  102145:	89 c2                	mov    %eax,%edx
  102147:	01 d2                	add    %edx,%edx
  102149:	01 c2                	add    %eax,%edx
  10214b:	8d 0c d5 00 00 00 00 	lea    0x0(,%edx,8),%ecx
  102152:	01 ca                	add    %ecx,%edx
  102154:	01 d0                	add    %edx,%eax
  102156:	ba 14 34 12 00       	mov    $0x123414,%edx
  10215b:	c7 04 10 00 00 00 00 	movl   $0x0,(%eax,%edx,1)
  102162:	68 6c 33 12 00       	push   $0x12336c
  102167:	a1 14 f3 10 00       	mov    0x10f314,%eax
  10216c:	50                   	push   %eax
  10216d:	e8 e2 14 00 00       	call   103654 <EnQ>
  102172:	83 c4 08             	add    $0x8,%esp
  102175:	c7 05 14 f3 10 00 ff 	movl   $0xffffffff,0x10f314
  10217c:	ff ff ff 
  10217f:	c9                   	leave  
  102180:	c3                   	ret    
  102181:	8d 76 00             	lea    0x0(%esi),%esi

00102184 <ExecSR>:
  102184:	55                   	push   %ebp
  102185:	89 e5                	mov    %esp,%ebp
  102187:	83 ec 10             	sub    $0x10,%esp
  10218a:	53                   	push   %ebx
  10218b:	c7 45 fc ff ff ff ff 	movl   $0xffffffff,-0x4(%ebp)
  102192:	c7 45 f8 ff ff ff ff 	movl   $0xffffffff,-0x8(%ebp)
  102199:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
  1021a0:	83 7d f4 13          	cmpl   $0x13,-0xc(%ebp)
  1021a4:	7e 06                	jle    1021ac <ExecSR+0x28>
  1021a6:	e9 a9 00 00 00       	jmp    102254 <ExecSR+0xd0>
  1021ab:	90                   	nop
  1021ac:	8b 45 f4             	mov    -0xc(%ebp),%eax
  1021af:	8b 14 85 1c 6f 10 00 	mov    0x106f1c(,%eax,4),%edx
  1021b6:	52                   	push   %edx
  1021b7:	8b 45 f4             	mov    -0xc(%ebp),%eax
  1021ba:	50                   	push   %eax
  1021bb:	68 93 69 10 00       	push   $0x106993
  1021c0:	e8 83 34 00 00       	call   105648 <cons_printf>
  1021c5:	83 c4 0c             	add    $0xc,%esp
  1021c8:	8b 45 f4             	mov    -0xc(%ebp),%eax
  1021cb:	83 3c 85 1c 6f 10 00 	cmpl   $0xffffffff,0x106f1c(,%eax,4)
  1021d2:	ff 
  1021d3:	75 68                	jne    10223d <ExecSR+0xb9>
  1021d5:	8b 45 f4             	mov    -0xc(%ebp),%eax
  1021d8:	50                   	push   %eax
  1021d9:	68 a7 69 10 00       	push   $0x1069a7
  1021de:	e8 65 34 00 00       	call   105648 <cons_printf>
  1021e3:	83 c4 08             	add    $0x8,%esp
  1021e6:	83 7d fc ff          	cmpl   $0xffffffff,-0x4(%ebp)
  1021ea:	75 28                	jne    102214 <ExecSR+0x90>
  1021ec:	8b 45 f4             	mov    -0xc(%ebp),%eax
  1021ef:	8b 15 14 f3 10 00    	mov    0x10f314,%edx
  1021f5:	89 14 85 1c 6f 10 00 	mov    %edx,0x106f1c(,%eax,4)
  1021fc:	8b 45 f4             	mov    -0xc(%ebp),%eax
  1021ff:	89 c2                	mov    %eax,%edx
  102201:	89 d0                	mov    %edx,%eax
  102203:	c1 e0 0c             	shl    $0xc,%eax
  102206:	8d 98 00 00 e0 00    	lea    0xe00000(%eax),%ebx
  10220c:	89 5d fc             	mov    %ebx,-0x4(%ebp)
  10220f:	eb 2c                	jmp    10223d <ExecSR+0xb9>
  102211:	8d 76 00             	lea    0x0(%esi),%esi
  102214:	83 7d f8 ff          	cmpl   $0xffffffff,-0x8(%ebp)
  102218:	75 23                	jne    10223d <ExecSR+0xb9>
  10221a:	8b 45 f4             	mov    -0xc(%ebp),%eax
  10221d:	8b 15 14 f3 10 00    	mov    0x10f314,%edx
  102223:	89 14 85 1c 6f 10 00 	mov    %edx,0x106f1c(,%eax,4)
  10222a:	8b 45 f4             	mov    -0xc(%ebp),%eax
  10222d:	89 c2                	mov    %eax,%edx
  10222f:	89 d0                	mov    %edx,%eax
  102231:	c1 e0 0c             	shl    $0xc,%eax
  102234:	8d 98 ff 0f e0 00    	lea    0xe00fff(%eax),%ebx
  10223a:	89 5d f8             	mov    %ebx,-0x8(%ebp)
  10223d:	83 7d fc ff          	cmpl   $0xffffffff,-0x4(%ebp)
  102241:	74 09                	je     10224c <ExecSR+0xc8>
  102243:	83 7d f8 ff          	cmpl   $0xffffffff,-0x8(%ebp)
  102247:	74 03                	je     10224c <ExecSR+0xc8>
  102249:	eb 09                	jmp    102254 <ExecSR+0xd0>
  10224b:	90                   	nop
  10224c:	ff 45 f4             	incl   -0xc(%ebp)
  10224f:	e9 4c ff ff ff       	jmp    1021a0 <ExecSR+0x1c>
  102254:	8b 45 fc             	mov    -0x4(%ebp),%eax
  102257:	50                   	push   %eax
  102258:	68 bf 69 10 00       	push   $0x1069bf
  10225d:	e8 e6 33 00 00       	call   105648 <cons_printf>
  102262:	83 c4 08             	add    $0x8,%esp
  102265:	8b 45 f8             	mov    -0x8(%ebp),%eax
  102268:	50                   	push   %eax
  102269:	68 da 69 10 00       	push   $0x1069da
  10226e:	e8 d5 33 00 00       	call   105648 <cons_printf>
  102273:	83 c4 08             	add    $0x8,%esp
  102276:	8b 45 08             	mov    0x8(%ebp),%eax
  102279:	50                   	push   %eax
  10227a:	68 0a 6a 10 00       	push   $0x106a0a
  10227f:	e8 c4 33 00 00       	call   105648 <cons_printf>
  102284:	83 c4 08             	add    $0x8,%esp
  102287:	68 00 10 00 00       	push   $0x1000
  10228c:	8b 45 08             	mov    0x8(%ebp),%eax
  10228f:	50                   	push   %eax
  102290:	8b 45 fc             	mov    -0x4(%ebp),%eax
  102293:	50                   	push   %eax
  102294:	e8 f7 13 00 00       	call   103690 <MemCpy>
  102299:	83 c4 0c             	add    $0xc,%esp
  10229c:	68 1d 6a 10 00       	push   $0x106a1d
  1022a1:	e8 a2 33 00 00       	call   105648 <cons_printf>
  1022a6:	83 c4 04             	add    $0x4,%esp
  1022a9:	68 00 10 00 00       	push   $0x1000
  1022ae:	8b 45 f8             	mov    -0x8(%ebp),%eax
  1022b1:	50                   	push   %eax
  1022b2:	e8 91 12 00 00       	call   103548 <Bzero>
  1022b7:	83 c4 08             	add    $0x8,%esp
  1022ba:	68 2d 6a 10 00       	push   $0x106a2d
  1022bf:	e8 84 33 00 00       	call   105648 <cons_printf>
  1022c4:	83 c4 04             	add    $0x4,%esp
  1022c7:	83 45 f8 fc          	addl   $0xfffffffc,-0x8(%ebp)
  1022cb:	8b 45 f8             	mov    -0x8(%ebp),%eax
  1022ce:	8b 55 0c             	mov    0xc(%ebp),%edx
  1022d1:	89 10                	mov    %edx,(%eax)
  1022d3:	8b 45 0c             	mov    0xc(%ebp),%eax
  1022d6:	50                   	push   %eax
  1022d7:	8b 45 f8             	mov    -0x8(%ebp),%eax
  1022da:	50                   	push   %eax
  1022db:	68 4a 6a 10 00       	push   $0x106a4a
  1022e0:	e8 63 33 00 00       	call   105648 <cons_printf>
  1022e5:	83 c4 0c             	add    $0xc,%esp
  1022e8:	68 5f 6a 10 00       	push   $0x106a5f
  1022ed:	e8 56 33 00 00       	call   105648 <cons_printf>
  1022f2:	83 c4 04             	add    $0x4,%esp
  1022f5:	83 45 f8 fc          	addl   $0xfffffffc,-0x8(%ebp)
  1022f9:	8b 45 f8             	mov    -0x8(%ebp),%eax
  1022fc:	50                   	push   %eax
  1022fd:	68 79 6a 10 00       	push   $0x106a79
  102302:	e8 41 33 00 00       	call   105648 <cons_printf>
  102307:	83 c4 08             	add    $0x8,%esp
  10230a:	68 85 6a 10 00       	push   $0x106a85
  10230f:	e8 34 33 00 00       	call   105648 <cons_printf>
  102314:	83 c4 04             	add    $0x4,%esp
  102317:	8b 45 f8             	mov    -0x8(%ebp),%eax
  10231a:	89 45 f0             	mov    %eax,-0x10(%ebp)
  10231d:	68 a8 6a 10 00       	push   $0x106aa8
  102322:	e8 21 33 00 00       	call   105648 <cons_printf>
  102327:	83 c4 04             	add    $0x4,%esp
  10232a:	8b 45 f0             	mov    -0x10(%ebp),%eax
  10232d:	50                   	push   %eax
  10232e:	68 c7 6a 10 00       	push   $0x106ac7
  102333:	e8 10 33 00 00       	call   105648 <cons_printf>
  102338:	83 c4 08             	add    $0x8,%esp
  10233b:	83 45 f0 d0          	addl   $0xffffffd0,-0x10(%ebp)
  10233f:	8b 45 f0             	mov    -0x10(%ebp),%eax
  102342:	50                   	push   %eax
  102343:	68 e3 6a 10 00       	push   $0x106ae3
  102348:	e8 fb 32 00 00       	call   105648 <cons_printf>
  10234d:	83 c4 08             	add    $0x8,%esp
  102350:	68 f6 6a 10 00       	push   $0x106af6
  102355:	e8 ee 32 00 00       	call   105648 <cons_printf>
  10235a:	83 c4 04             	add    $0x4,%esp
  10235d:	8b 45 f0             	mov    -0x10(%ebp),%eax
  102360:	c7 40 2c 02 02 00 00 	movl   $0x202,0x2c(%eax)
  102367:	68 03 6b 10 00       	push   $0x106b03
  10236c:	e8 d7 32 00 00       	call   105648 <cons_printf>
  102371:	83 c4 04             	add    $0x4,%esp
  102374:	e8 5b 36 00 00       	call   1059d4 <get_cs>
  102379:	89 c0                	mov    %eax,%eax
  10237b:	8b 55 f0             	mov    -0x10(%ebp),%edx
  10237e:	0f b7 d8             	movzwl %ax,%ebx
  102381:	89 5a 28             	mov    %ebx,0x28(%edx)
  102384:	68 0f 6b 10 00       	push   $0x106b0f
  102389:	e8 ba 32 00 00       	call   105648 <cons_printf>
  10238e:	83 c4 04             	add    $0x4,%esp
  102391:	8b 45 f0             	mov    -0x10(%ebp),%eax
  102394:	8b 55 fc             	mov    -0x4(%ebp),%edx
  102397:	89 50 24             	mov    %edx,0x24(%eax)
  10239a:	8b 45 f0             	mov    -0x10(%ebp),%eax
  10239d:	8b 50 24             	mov    0x24(%eax),%edx
  1023a0:	52                   	push   %edx
  1023a1:	68 1c 6b 10 00       	push   $0x106b1c
  1023a6:	e8 9d 32 00 00       	call   105648 <cons_printf>
  1023ab:	83 c4 08             	add    $0x8,%esp
  1023ae:	68 2f 6b 10 00       	push   $0x106b2f
  1023b3:	e8 90 32 00 00       	call   105648 <cons_printf>
  1023b8:	83 c4 04             	add    $0x4,%esp
  1023bb:	a1 14 f3 10 00       	mov    0x10f314,%eax
  1023c0:	89 c2                	mov    %eax,%edx
  1023c2:	01 d2                	add    %edx,%edx
  1023c4:	01 c2                	add    %eax,%edx
  1023c6:	8d 0c d5 00 00 00 00 	lea    0x0(,%edx,8),%ecx
  1023cd:	01 ca                	add    %ecx,%edx
  1023cf:	01 d0                	add    %edx,%eax
  1023d1:	ba 14 34 12 00       	mov    $0x123414,%edx
  1023d6:	8b 4d f0             	mov    -0x10(%ebp),%ecx
  1023d9:	89 4c 10 10          	mov    %ecx,0x10(%eax,%edx,1)
  1023dd:	8b 5d ec             	mov    -0x14(%ebp),%ebx
  1023e0:	c9                   	leave  
  1023e1:	c3                   	ret    
  1023e2:	8d 36                	lea    (%esi),%esi

001023e4 <SignalSR>:
  1023e4:	55                   	push   %ebp
  1023e5:	89 e5                	mov    %esp,%ebp
  1023e7:	a1 14 f3 10 00       	mov    0x10f314,%eax
  1023ec:	89 c2                	mov    %eax,%edx
  1023ee:	01 d2                	add    %edx,%edx
  1023f0:	01 c2                	add    %eax,%edx
  1023f2:	8d 0c d5 00 00 00 00 	lea    0x0(,%edx,8),%ecx
  1023f9:	01 ca                	add    %ecx,%edx
  1023fb:	01 d0                	add    %edx,%eax
  1023fd:	ba 14 34 12 00       	mov    $0x123414,%edx
  102402:	8b 4d 0c             	mov    0xc(%ebp),%ecx
  102405:	89 4c 10 18          	mov    %ecx,0x18(%eax,%edx,1)
  102409:	c9                   	leave  
  10240a:	c3                   	ret    
  10240b:	90                   	nop

0010240c <WrapperSR>:
  10240c:	55                   	push   %ebp
  10240d:	89 e5                	mov    %esp,%ebp
  10240f:	57                   	push   %edi
  102410:	56                   	push   %esi
  102411:	53                   	push   %ebx
  102412:	a1 14 f3 10 00       	mov    0x10f314,%eax
  102417:	89 c2                	mov    %eax,%edx
  102419:	01 d2                	add    %edx,%edx
  10241b:	01 c2                	add    %eax,%edx
  10241d:	8d 0c d5 00 00 00 00 	lea    0x0(,%edx,8),%ecx
  102424:	01 ca                	add    %ecx,%edx
  102426:	01 d0                	add    %edx,%eax
  102428:	ba 14 34 12 00       	mov    $0x123414,%edx
  10242d:	8b 0d 14 f3 10 00    	mov    0x10f314,%ecx
  102433:	89 cb                	mov    %ecx,%ebx
  102435:	01 db                	add    %ebx,%ebx
  102437:	01 cb                	add    %ecx,%ebx
  102439:	8d 34 dd 00 00 00 00 	lea    0x0(,%ebx,8),%esi
  102440:	01 f3                	add    %esi,%ebx
  102442:	01 d9                	add    %ebx,%ecx
  102444:	bb 14 34 12 00       	mov    $0x123414,%ebx
  102449:	8b 7c 19 10          	mov    0x10(%ecx,%ebx,1),%edi
  10244d:	81 c7 70 ff ff ff    	add    $0xffffff70,%edi
  102453:	89 7c 10 10          	mov    %edi,0x10(%eax,%edx,1)
  102457:	a1 14 f3 10 00       	mov    0x10f314,%eax
  10245c:	89 c2                	mov    %eax,%edx
  10245e:	01 d2                	add    %edx,%edx
  102460:	01 c2                	add    %eax,%edx
  102462:	8d 0c d5 00 00 00 00 	lea    0x0(,%edx,8),%ecx
  102469:	01 ca                	add    %ecx,%edx
  10246b:	01 d0                	add    %edx,%eax
  10246d:	ba 14 34 12 00       	mov    $0x123414,%edx
  102472:	8b 44 10 10          	mov    0x10(%eax,%edx,1),%eax
  102476:	83 c0 30             	add    $0x30,%eax
  102479:	8b 55 10             	mov    0x10(%ebp),%edx
  10247c:	89 10                	mov    %edx,(%eax)
  10247e:	a1 14 f3 10 00       	mov    0x10f314,%eax
  102483:	89 c2                	mov    %eax,%edx
  102485:	01 d2                	add    %edx,%edx
  102487:	01 c2                	add    %eax,%edx
  102489:	8d 0c d5 00 00 00 00 	lea    0x0(,%edx,8),%ecx
  102490:	01 ca                	add    %ecx,%edx
  102492:	01 d0                	add    %edx,%eax
  102494:	ba 14 34 12 00       	mov    $0x123414,%edx
  102499:	8b 44 10 10          	mov    0x10(%eax,%edx,1),%eax
  10249d:	83 c0 60             	add    $0x60,%eax
  1024a0:	8b 55 0c             	mov    0xc(%ebp),%edx
  1024a3:	89 10                	mov    %edx,(%eax)
  1024a5:	a1 14 f3 10 00       	mov    0x10f314,%eax
  1024aa:	89 c2                	mov    %eax,%edx
  1024ac:	01 d2                	add    %edx,%edx
  1024ae:	01 c2                	add    %eax,%edx
  1024b0:	8d 0c d5 00 00 00 00 	lea    0x0(,%edx,8),%ecx
  1024b7:	01 ca                	add    %ecx,%edx
  1024b9:	01 d0                	add    %edx,%eax
  1024bb:	ba 14 34 12 00       	mov    $0x123414,%edx
  1024c0:	8b 44 10 10          	mov    0x10(%eax,%edx,1),%eax
  1024c4:	05 90 00 00 00       	add    $0x90,%eax
  1024c9:	8b 15 14 f3 10 00    	mov    0x10f314,%edx
  1024cf:	89 d1                	mov    %edx,%ecx
  1024d1:	01 c9                	add    %ecx,%ecx
  1024d3:	01 d1                	add    %edx,%ecx
  1024d5:	8d 1c cd 00 00 00 00 	lea    0x0(,%ecx,8),%ebx
  1024dc:	01 d9                	add    %ebx,%ecx
  1024de:	01 ca                	add    %ecx,%edx
  1024e0:	b9 14 34 12 00       	mov    $0x123414,%ecx
  1024e5:	8b 54 0a 10          	mov    0x10(%edx,%ecx,1),%edx
  1024e9:	8b 4a 24             	mov    0x24(%edx),%ecx
  1024ec:	89 08                	mov    %ecx,(%eax)
  1024ee:	a1 14 f3 10 00       	mov    0x10f314,%eax
  1024f3:	89 c2                	mov    %eax,%edx
  1024f5:	01 d2                	add    %edx,%edx
  1024f7:	01 c2                	add    %eax,%edx
  1024f9:	8d 0c d5 00 00 00 00 	lea    0x0(,%edx,8),%ecx
  102500:	01 ca                	add    %ecx,%edx
  102502:	01 d0                	add    %edx,%eax
  102504:	ba 14 34 12 00       	mov    $0x123414,%edx
  102509:	8b 44 10 10          	mov    0x10(%eax,%edx,1),%eax
  10250d:	c7 40 24 b8 32 10 00 	movl   $0x1032b8,0x24(%eax)
  102514:	8d 65 f4             	lea    -0xc(%ebp),%esp
  102517:	5b                   	pop    %ebx
  102518:	5e                   	pop    %esi
  102519:	5f                   	pop    %edi
  10251a:	c9                   	leave  
  10251b:	c3                   	ret    

0010251c <InitKernelData>:
  10251c:	55                   	push   %ebp
  10251d:	89 e5                	mov    %esp,%ebp
  10251f:	83 ec 04             	sub    $0x4,%esp
  102522:	90                   	nop
  102523:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
  10252a:	83 7d fc 13          	cmpl   $0x13,-0x4(%ebp)
  10252e:	7e 04                	jle    102534 <InitKernelData+0x18>
  102530:	eb 16                	jmp    102548 <InitKernelData+0x2c>
  102532:	8d 36                	lea    (%esi),%esi
  102534:	8b 45 fc             	mov    -0x4(%ebp),%eax
  102537:	c7 04 85 1c 6f 10 00 	movl   $0xffffffff,0x106f1c(,%eax,4)
  10253e:	ff ff ff ff 
  102542:	ff 45 fc             	incl   -0x4(%ebp)
  102545:	eb e3                	jmp    10252a <InitKernelData+0xe>
  102547:	90                   	nop
  102548:	e8 37 33 00 00       	call   105884 <get_idt_base>
  10254d:	89 c0                	mov    %eax,%eax
  10254f:	a3 b4 f2 10 00       	mov    %eax,0x10f2b4
  102554:	c7 05 b8 f2 10 00 00 	movl   $0x0,0x10f2b8
  10255b:	00 00 00 
  10255e:	6a 54                	push   $0x54
  102560:	68 6c 33 12 00       	push   $0x12336c
  102565:	e8 de 0f 00 00       	call   103548 <Bzero>
  10256a:	83 c4 08             	add    $0x8,%esp
  10256d:	6a 54                	push   $0x54
  10256f:	68 18 33 12 00       	push   $0x123318
  102574:	e8 cf 0f 00 00       	call   103548 <Bzero>
  102579:	83 c4 08             	add    $0x8,%esp
  10257c:	6a 54                	push   $0x54
  10257e:	68 c0 33 12 00       	push   $0x1233c0
  102583:	e8 c0 0f 00 00       	call   103548 <Bzero>
  102588:	83 c4 08             	add    $0x8,%esp
  10258b:	6a 54                	push   $0x54
  10258d:	68 bc f2 10 00       	push   $0x10f2bc
  102592:	e8 b1 0f 00 00       	call   103548 <Bzero>
  102597:	83 c4 08             	add    $0x8,%esp
  10259a:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
  1025a1:	83 7d fc 13          	cmpl   $0x13,-0x4(%ebp)
  1025a5:	7e 05                	jle    1025ac <InitKernelData+0x90>
  1025a7:	eb 2b                	jmp    1025d4 <InitKernelData+0xb8>
  1025a9:	8d 76 00             	lea    0x0(%esi),%esi
  1025ac:	68 6c 33 12 00       	push   $0x12336c
  1025b1:	8b 45 fc             	mov    -0x4(%ebp),%eax
  1025b4:	50                   	push   %eax
  1025b5:	e8 9a 10 00 00       	call   103654 <EnQ>
  1025ba:	83 c4 08             	add    $0x8,%esp
  1025bd:	68 bc f2 10 00       	push   $0x10f2bc
  1025c2:	8b 45 fc             	mov    -0x4(%ebp),%eax
  1025c5:	50                   	push   %eax
  1025c6:	e8 89 10 00 00       	call   103654 <EnQ>
  1025cb:	83 c4 08             	add    $0x8,%esp
  1025ce:	ff 45 fc             	incl   -0x4(%ebp)
  1025d1:	eb ce                	jmp    1025a1 <InitKernelData+0x85>
  1025d3:	90                   	nop
  1025d4:	c7 05 14 f3 10 00 ff 	movl   $0xffffffff,0x10f314
  1025db:	ff ff ff 
  1025de:	c9                   	leave  
  1025df:	c3                   	ret    

001025e0 <InitKernelControl>:
  1025e0:	55                   	push   %ebp
  1025e1:	89 e5                	mov    %esp,%ebp
  1025e3:	6a 00                	push   $0x0
  1025e5:	6a 0e                	push   $0xe
  1025e7:	e8 e8 33 00 00       	call   1059d4 <get_cs>
  1025ec:	89 c0                	mov    %eax,%eax
  1025ee:	0f b7 d0             	movzwl %ax,%edx
  1025f1:	52                   	push   %edx
  1025f2:	68 80 11 10 00       	push   $0x101180
  1025f7:	a1 b4 f2 10 00       	mov    0x10f2b4,%eax
  1025fc:	05 00 01 00 00       	add    $0x100,%eax
  102601:	50                   	push   %eax
  102602:	e8 69 33 00 00       	call   105970 <fill_gate>
  102607:	83 c4 14             	add    $0x14,%esp
  10260a:	6a 00                	push   $0x0
  10260c:	6a 0e                	push   $0xe
  10260e:	e8 c1 33 00 00       	call   1059d4 <get_cs>
  102613:	89 c0                	mov    %eax,%eax
  102615:	0f b7 d0             	movzwl %ax,%edx
  102618:	52                   	push   %edx
  102619:	68 84 11 10 00       	push   $0x101184
  10261e:	a1 b4 f2 10 00       	mov    0x10f2b4,%eax
  102623:	05 80 01 00 00       	add    $0x180,%eax
  102628:	50                   	push   %eax
  102629:	e8 42 33 00 00       	call   105970 <fill_gate>
  10262e:	83 c4 14             	add    $0x14,%esp
  102631:	6a 00                	push   $0x0
  102633:	6a 0e                	push   $0xe
  102635:	e8 9a 33 00 00       	call   1059d4 <get_cs>
  10263a:	89 c0                	mov    %eax,%eax
  10263c:	0f b7 d0             	movzwl %ax,%edx
  10263f:	52                   	push   %edx
  102640:	68 8c 11 10 00       	push   $0x10118c
  102645:	a1 b4 f2 10 00       	mov    0x10f2b4,%eax
  10264a:	05 90 01 00 00       	add    $0x190,%eax
  10264f:	50                   	push   %eax
  102650:	e8 1b 33 00 00       	call   105970 <fill_gate>
  102655:	83 c4 14             	add    $0x14,%esp
  102658:	6a 00                	push   $0x0
  10265a:	6a 0e                	push   $0xe
  10265c:	e8 73 33 00 00       	call   1059d4 <get_cs>
  102661:	89 c0                	mov    %eax,%eax
  102663:	0f b7 d0             	movzwl %ax,%edx
  102666:	52                   	push   %edx
  102667:	68 88 11 10 00       	push   $0x101188
  10266c:	a1 b4 f2 10 00       	mov    0x10f2b4,%eax
  102671:	05 88 01 00 00       	add    $0x188,%eax
  102676:	50                   	push   %eax
  102677:	e8 f4 32 00 00       	call   105970 <fill_gate>
  10267c:	83 c4 14             	add    $0x14,%esp
  10267f:	6a 00                	push   $0x0
  102681:	6a 0e                	push   $0xe
  102683:	e8 4c 33 00 00       	call   1059d4 <get_cs>
  102688:	89 c0                	mov    %eax,%eax
  10268a:	0f b7 d0             	movzwl %ax,%edx
  10268d:	52                   	push   %edx
  10268e:	68 90 11 10 00       	push   $0x101190
  102693:	a1 b4 f2 10 00       	mov    0x10f2b4,%eax
  102698:	05 98 01 00 00       	add    $0x198,%eax
  10269d:	50                   	push   %eax
  10269e:	e8 cd 32 00 00       	call   105970 <fill_gate>
  1026a3:	83 c4 14             	add    $0x14,%esp
  1026a6:	6a 00                	push   $0x0
  1026a8:	6a 0e                	push   $0xe
  1026aa:	e8 25 33 00 00       	call   1059d4 <get_cs>
  1026af:	89 c0                	mov    %eax,%eax
  1026b1:	0f b7 d0             	movzwl %ax,%edx
  1026b4:	52                   	push   %edx
  1026b5:	68 94 11 10 00       	push   $0x101194
  1026ba:	a1 b4 f2 10 00       	mov    0x10f2b4,%eax
  1026bf:	05 a0 01 00 00       	add    $0x1a0,%eax
  1026c4:	50                   	push   %eax
  1026c5:	e8 a6 32 00 00       	call   105970 <fill_gate>
  1026ca:	83 c4 14             	add    $0x14,%esp
  1026cd:	6a 00                	push   $0x0
  1026cf:	6a 0e                	push   $0xe
  1026d1:	e8 fe 32 00 00       	call   1059d4 <get_cs>
  1026d6:	89 c0                	mov    %eax,%eax
  1026d8:	0f b7 d0             	movzwl %ax,%edx
  1026db:	52                   	push   %edx
  1026dc:	68 98 11 10 00       	push   $0x101198
  1026e1:	a1 b4 f2 10 00       	mov    0x10f2b4,%eax
  1026e6:	05 18 01 00 00       	add    $0x118,%eax
  1026eb:	50                   	push   %eax
  1026ec:	e8 7f 32 00 00       	call   105970 <fill_gate>
  1026f1:	83 c4 14             	add    $0x14,%esp
  1026f4:	6a 00                	push   $0x0
  1026f6:	6a 0e                	push   $0xe
  1026f8:	e8 d7 32 00 00       	call   1059d4 <get_cs>
  1026fd:	89 c0                	mov    %eax,%eax
  1026ff:	0f b7 d0             	movzwl %ax,%edx
  102702:	52                   	push   %edx
  102703:	68 9c 11 10 00       	push   $0x10119c
  102708:	a1 b4 f2 10 00       	mov    0x10f2b4,%eax
  10270d:	05 20 01 00 00       	add    $0x120,%eax
  102712:	50                   	push   %eax
  102713:	e8 58 32 00 00       	call   105970 <fill_gate>
  102718:	83 c4 14             	add    $0x14,%esp
  10271b:	6a 00                	push   $0x0
  10271d:	6a 0e                	push   $0xe
  10271f:	e8 b0 32 00 00       	call   1059d4 <get_cs>
  102724:	89 c0                	mov    %eax,%eax
  102726:	0f b7 d0             	movzwl %ax,%edx
  102729:	52                   	push   %edx
  10272a:	68 a0 11 10 00       	push   $0x1011a0
  10272f:	a1 b4 f2 10 00       	mov    0x10f2b4,%eax
  102734:	05 a8 01 00 00       	add    $0x1a8,%eax
  102739:	50                   	push   %eax
  10273a:	e8 31 32 00 00       	call   105970 <fill_gate>
  10273f:	83 c4 14             	add    $0x14,%esp
  102742:	6a 00                	push   $0x0
  102744:	6a 0e                	push   $0xe
  102746:	e8 89 32 00 00       	call   1059d4 <get_cs>
  10274b:	89 c0                	mov    %eax,%eax
  10274d:	0f b7 d0             	movzwl %ax,%edx
  102750:	52                   	push   %edx
  102751:	68 a4 11 10 00       	push   $0x1011a4
  102756:	a1 b4 f2 10 00       	mov    0x10f2b4,%eax
  10275b:	05 b0 01 00 00       	add    $0x1b0,%eax
  102760:	50                   	push   %eax
  102761:	e8 0a 32 00 00       	call   105970 <fill_gate>
  102766:	83 c4 14             	add    $0x14,%esp
  102769:	6a 00                	push   $0x0
  10276b:	6a 0e                	push   $0xe
  10276d:	e8 62 32 00 00       	call   1059d4 <get_cs>
  102772:	89 c0                	mov    %eax,%eax
  102774:	0f b7 d0             	movzwl %ax,%edx
  102777:	52                   	push   %edx
  102778:	68 a8 11 10 00       	push   $0x1011a8
  10277d:	a1 b4 f2 10 00       	mov    0x10f2b4,%eax
  102782:	05 b8 01 00 00       	add    $0x1b8,%eax
  102787:	50                   	push   %eax
  102788:	e8 e3 31 00 00       	call   105970 <fill_gate>
  10278d:	83 c4 14             	add    $0x14,%esp
  102790:	6a 00                	push   $0x0
  102792:	6a 0e                	push   $0xe
  102794:	e8 3b 32 00 00       	call   1059d4 <get_cs>
  102799:	89 c0                	mov    %eax,%eax
  10279b:	0f b7 d0             	movzwl %ax,%edx
  10279e:	52                   	push   %edx
  10279f:	68 ac 11 10 00       	push   $0x1011ac
  1027a4:	a1 b4 f2 10 00       	mov    0x10f2b4,%eax
  1027a9:	05 c0 01 00 00       	add    $0x1c0,%eax
  1027ae:	50                   	push   %eax
  1027af:	e8 bc 31 00 00       	call   105970 <fill_gate>
  1027b4:	83 c4 14             	add    $0x14,%esp
  1027b7:	6a 00                	push   $0x0
  1027b9:	6a 0e                	push   $0xe
  1027bb:	e8 14 32 00 00       	call   1059d4 <get_cs>
  1027c0:	89 c0                	mov    %eax,%eax
  1027c2:	0f b7 d0             	movzwl %ax,%edx
  1027c5:	52                   	push   %edx
  1027c6:	68 b0 11 10 00       	push   $0x1011b0
  1027cb:	a1 b4 f2 10 00       	mov    0x10f2b4,%eax
  1027d0:	05 c8 01 00 00       	add    $0x1c8,%eax
  1027d5:	50                   	push   %eax
  1027d6:	e8 95 31 00 00       	call   105970 <fill_gate>
  1027db:	83 c4 14             	add    $0x14,%esp
  1027de:	6a e6                	push   $0xffffffe6
  1027e0:	6a 21                	push   $0x21
  1027e2:	e8 a5 32 00 00       	call   105a8c <outportb>
  1027e7:	83 c4 08             	add    $0x8,%esp
  1027ea:	c9                   	leave  
  1027eb:	c3                   	ret    

001027ec <Scheduler>:
  1027ec:	55                   	push   %ebp
  1027ed:	89 e5                	mov    %esp,%ebp
  1027ef:	83 3d 14 f3 10 00 00 	cmpl   $0x0,0x10f314
  1027f6:	7e 08                	jle    102800 <Scheduler+0x14>
  1027f8:	e9 86 00 00 00       	jmp    102883 <Scheduler+0x97>
  1027fd:	8d 76 00             	lea    0x0(%esi),%esi
  102800:	68 18 33 12 00       	push   $0x123318
  102805:	e8 5e 0d 00 00       	call   103568 <QisEmpty>
  10280a:	83 c4 04             	add    $0x4,%esp
  10280d:	89 c0                	mov    %eax,%eax
  10280f:	85 c0                	test   %eax,%eax
  102811:	74 0d                	je     102820 <Scheduler+0x34>
  102813:	c7 05 14 f3 10 00 00 	movl   $0x0,0x10f314
  10281a:	00 00 00 
  10281d:	eb 1f                	jmp    10283e <Scheduler+0x52>
  10281f:	90                   	nop
  102820:	c7 05 14 34 12 00 01 	movl   $0x1,0x123414
  102827:	00 00 00 
  10282a:	68 18 33 12 00       	push   $0x123318
  10282f:	e8 64 0d 00 00       	call   103598 <DeQ>
  102834:	83 c4 04             	add    $0x4,%esp
  102837:	89 c0                	mov    %eax,%eax
  102839:	a3 14 f3 10 00       	mov    %eax,0x10f314
  10283e:	a1 14 f3 10 00       	mov    0x10f314,%eax
  102843:	89 c2                	mov    %eax,%edx
  102845:	01 d2                	add    %edx,%edx
  102847:	01 c2                	add    %eax,%edx
  102849:	8d 0c d5 00 00 00 00 	lea    0x0(,%edx,8),%ecx
  102850:	01 ca                	add    %ecx,%edx
  102852:	01 d0                	add    %edx,%eax
  102854:	ba 14 34 12 00       	mov    $0x123414,%edx
  102859:	c7 44 10 04 00 00 00 	movl   $0x0,0x4(%eax,%edx,1)
  102860:	00 
  102861:	a1 14 f3 10 00       	mov    0x10f314,%eax
  102866:	89 c2                	mov    %eax,%edx
  102868:	01 d2                	add    %edx,%edx
  10286a:	01 c2                	add    %eax,%edx
  10286c:	8d 0c d5 00 00 00 00 	lea    0x0(,%edx,8),%ecx
  102873:	01 ca                	add    %ecx,%edx
  102875:	01 d0                	add    %edx,%eax
  102877:	ba 14 34 12 00       	mov    $0x123414,%edx
  10287c:	c7 04 10 02 00 00 00 	movl   $0x2,(%eax,%edx,1)
  102883:	c9                   	leave  
  102884:	c3                   	ret    
  102885:	8d 76 00             	lea    0x0(%esi),%esi

00102888 <main>:
  102888:	55                   	push   %ebp
  102889:	89 e5                	mov    %esp,%ebp
  10288b:	e8 8c fc ff ff       	call   10251c <InitKernelData>
  102890:	e8 4b fd ff ff       	call   1025e0 <InitKernelControl>
  102895:	68 7c 2e 10 00       	push   $0x102e7c
  10289a:	e8 31 e9 ff ff       	call   1011d0 <NewProcSR>
  10289f:	83 c4 04             	add    $0x4,%esp
  1028a2:	e8 45 ff ff ff       	call   1027ec <Scheduler>
  1028a7:	a1 14 f3 10 00       	mov    0x10f314,%eax
  1028ac:	89 c2                	mov    %eax,%edx
  1028ae:	01 d2                	add    %edx,%edx
  1028b0:	01 c2                	add    %eax,%edx
  1028b2:	8d 0c d5 00 00 00 00 	lea    0x0(,%edx,8),%ecx
  1028b9:	01 ca                	add    %ecx,%edx
  1028bb:	01 d0                	add    %edx,%eax
  1028bd:	ba 14 34 12 00       	mov    $0x123414,%edx
  1028c2:	8b 44 10 10          	mov    0x10(%eax,%edx,1),%eax
  1028c6:	50                   	push   %eax
  1028c7:	e8 a8 e8 ff ff       	call   101174 <Loader>
  1028cc:	83 c4 04             	add    $0x4,%esp
  1028cf:	31 c0                	xor    %eax,%eax
  1028d1:	eb 01                	jmp    1028d4 <main+0x4c>
  1028d3:	90                   	nop
  1028d4:	c9                   	leave  
  1028d5:	c3                   	ret    
  1028d6:	8d 36                	lea    (%esi),%esi

001028d8 <Kernel>:
  1028d8:	55                   	push   %ebp
  1028d9:	89 e5                	mov    %esp,%ebp
  1028db:	83 ec 04             	sub    $0x4,%esp
  1028de:	a1 14 f3 10 00       	mov    0x10f314,%eax
  1028e3:	89 c2                	mov    %eax,%edx
  1028e5:	01 d2                	add    %edx,%edx
  1028e7:	01 c2                	add    %eax,%edx
  1028e9:	8d 0c d5 00 00 00 00 	lea    0x0(,%edx,8),%ecx
  1028f0:	01 ca                	add    %ecx,%edx
  1028f2:	01 d0                	add    %edx,%eax
  1028f4:	ba 14 34 12 00       	mov    $0x123414,%edx
  1028f9:	8b 4d 08             	mov    0x8(%ebp),%ecx
  1028fc:	89 4c 10 10          	mov    %ecx,0x10(%eax,%edx,1)
  102900:	8b 55 08             	mov    0x8(%ebp),%edx
  102903:	8b 42 20             	mov    0x20(%edx),%eax
  102906:	83 c0 e0             	add    $0xffffffe0,%eax
  102909:	83 f8 19             	cmp    $0x19,%eax
  10290c:	0f 87 be 01 00 00    	ja     102ad0 <Kernel+0x1f8>
  102912:	8b 04 85 1c 29 10 00 	mov    0x10291c(,%eax,4),%eax
  102919:	ff e0                	jmp    *%eax
  10291b:	90                   	nop
  10291c:	ac                   	lods   %ds:(%esi),%al
  10291d:	29 10                	sub    %edx,(%eax)
  10291f:	00 d0                	add    %dl,%al
  102921:	2a 10                	sub    (%eax),%dl
  102923:	00 d0                	add    %dl,%al
  102925:	2a 10                	sub    (%eax),%dl
  102927:	00 14 2a             	add    %dl,(%edx,%ebp,1)
  10292a:	10 00                	adc    %al,(%eax)
  10292c:	30 2a                	xor    %ch,(%edx)
  10292e:	10 00                	adc    %al,(%eax)
  102930:	d0 2a                	shrb   (%edx)
  102932:	10 00                	adc    %al,(%eax)
  102934:	d0 2a                	shrb   (%edx)
  102936:	10 00                	adc    %al,(%eax)
  102938:	d0 2a                	shrb   (%edx)
  10293a:	10 00                	adc    %al,(%eax)
  10293c:	d0 2a                	shrb   (%edx)
  10293e:	10 00                	adc    %al,(%eax)
  102940:	d0 2a                	shrb   (%edx)
  102942:	10 00                	adc    %al,(%eax)
  102944:	d0 2a                	shrb   (%edx)
  102946:	10 00                	adc    %al,(%eax)
  102948:	d0 2a                	shrb   (%edx)
  10294a:	10 00                	adc    %al,(%eax)
  10294c:	d0 2a                	shrb   (%edx)
  10294e:	10 00                	adc    %al,(%eax)
  102950:	d0 2a                	shrb   (%edx)
  102952:	10 00                	adc    %al,(%eax)
  102954:	d0 2a                	shrb   (%edx)
  102956:	10 00                	adc    %al,(%eax)
  102958:	d0 2a                	shrb   (%edx)
  10295a:	10 00                	adc    %al,(%eax)
  10295c:	98                   	cwtl   
  10295d:	29 10                	sub    %edx,(%eax)
  10295f:	00 f0                	add    %dh,%al
  102961:	29 10                	sub    %edx,(%eax)
  102963:	00 84 29 10 00 b8 29 	add    %al,0x29b80010(%ecx,%ebp,1)
  10296a:	10 00                	adc    %al,(%eax)
  10296c:	d4 29                	aam    $0x29
  10296e:	10 00                	adc    %al,(%eax)
  102970:	4c                   	dec    %esp
  102971:	2a 10                	sub    (%eax),%dl
  102973:	00 5c 2a 10          	add    %bl,0x10(%edx,%ebp,1)
  102977:	00 6c 2a 10          	add    %ch,0x10(%edx,%ebp,1)
  10297b:	00 80 2a 10 00 a8    	add    %al,-0x57ffefd6(%eax)
  102981:	2a 10                	sub    (%eax),%dl
  102983:	00 8b 45 08 8b 50    	add    %cl,0x508b0845(%ebx)
  102989:	1c 52                	sbb    $0x52,%al
  10298b:	e8 40 eb ff ff       	call   1014d0 <SleepSR>
  102990:	83 c4 04             	add    $0x4,%esp
  102993:	e9 38 01 00 00       	jmp    102ad0 <Kernel+0x1f8>
  102998:	e8 23 eb ff ff       	call   1014c0 <GetPidSR>
  10299d:	89 c0                	mov    %eax,%eax
  10299f:	8b 55 08             	mov    0x8(%ebp),%edx
  1029a2:	89 42 1c             	mov    %eax,0x1c(%edx)
  1029a5:	e9 26 01 00 00       	jmp    102ad0 <Kernel+0x1f8>
  1029aa:	8d 36                	lea    (%esi),%esi
  1029ac:	e8 43 ea ff ff       	call   1013f4 <TimerSR>
  1029b1:	e9 1a 01 00 00       	jmp    102ad0 <Kernel+0x1f8>
  1029b6:	8d 36                	lea    (%esi),%esi
  1029b8:	8b 45 08             	mov    0x8(%ebp),%eax
  1029bb:	8b 50 1c             	mov    0x1c(%eax),%edx
  1029be:	52                   	push   %edx
  1029bf:	e8 c8 eb ff ff       	call   10158c <MuxCreateSR>
  1029c4:	83 c4 04             	add    $0x4,%esp
  1029c7:	89 c0                	mov    %eax,%eax
  1029c9:	8b 55 08             	mov    0x8(%ebp),%edx
  1029cc:	89 42 1c             	mov    %eax,0x1c(%edx)
  1029cf:	e9 fc 00 00 00       	jmp    102ad0 <Kernel+0x1f8>
  1029d4:	8b 45 08             	mov    0x8(%ebp),%eax
  1029d7:	8b 50 10             	mov    0x10(%eax),%edx
  1029da:	52                   	push   %edx
  1029db:	8b 45 08             	mov    0x8(%ebp),%eax
  1029de:	8b 50 1c             	mov    0x1c(%eax),%edx
  1029e1:	52                   	push   %edx
  1029e2:	e8 3d ec ff ff       	call   101624 <MuxOpSR>
  1029e7:	83 c4 08             	add    $0x8,%esp
  1029ea:	e9 e1 00 00 00       	jmp    102ad0 <Kernel+0x1f8>
  1029ef:	90                   	nop
  1029f0:	8b 45 08             	mov    0x8(%ebp),%eax
  1029f3:	0f be 50 18          	movsbl 0x18(%eax),%edx
  1029f7:	52                   	push   %edx
  1029f8:	8b 45 08             	mov    0x8(%ebp),%eax
  1029fb:	8b 50 10             	mov    0x10(%eax),%edx
  1029fe:	52                   	push   %edx
  1029ff:	8b 45 08             	mov    0x8(%ebp),%eax
  102a02:	8b 50 1c             	mov    0x1c(%eax),%edx
  102a05:	52                   	push   %edx
  102a06:	e8 35 eb ff ff       	call   101540 <ShowCharSR>
  102a0b:	83 c4 0c             	add    $0xc,%esp
  102a0e:	e9 bd 00 00 00       	jmp    102ad0 <Kernel+0x1f8>
  102a13:	90                   	nop
  102a14:	6a 00                	push   $0x0
  102a16:	e8 7d ed ff ff       	call   101798 <TermSR>
  102a1b:	83 c4 04             	add    $0x4,%esp
  102a1e:	6a 63                	push   $0x63
  102a20:	6a 20                	push   $0x20
  102a22:	e8 65 30 00 00       	call   105a8c <outportb>
  102a27:	83 c4 08             	add    $0x8,%esp
  102a2a:	e9 a1 00 00 00       	jmp    102ad0 <Kernel+0x1f8>
  102a2f:	90                   	nop
  102a30:	6a 01                	push   $0x1
  102a32:	e8 61 ed ff ff       	call   101798 <TermSR>
  102a37:	83 c4 04             	add    $0x4,%esp
  102a3a:	6a 64                	push   $0x64
  102a3c:	6a 20                	push   $0x20
  102a3e:	e8 49 30 00 00       	call   105a8c <outportb>
  102a43:	83 c4 08             	add    $0x8,%esp
  102a46:	e9 85 00 00 00       	jmp    102ad0 <Kernel+0x1f8>
  102a4b:	90                   	nop
  102a4c:	e8 17 f2 ff ff       	call   101c68 <ForkSR>
  102a51:	89 c0                	mov    %eax,%eax
  102a53:	8b 55 08             	mov    0x8(%ebp),%edx
  102a56:	89 42 1c             	mov    %eax,0x1c(%edx)
  102a59:	eb 75                	jmp    102ad0 <Kernel+0x1f8>
  102a5b:	90                   	nop
  102a5c:	e8 d7 f4 ff ff       	call   101f38 <WaitSR>
  102a61:	89 c0                	mov    %eax,%eax
  102a63:	8b 55 08             	mov    0x8(%ebp),%edx
  102a66:	89 42 1c             	mov    %eax,0x1c(%edx)
  102a69:	eb 65                	jmp    102ad0 <Kernel+0x1f8>
  102a6b:	90                   	nop
  102a6c:	8b 45 08             	mov    0x8(%ebp),%eax
  102a6f:	8b 50 1c             	mov    0x1c(%eax),%edx
  102a72:	52                   	push   %edx
  102a73:	e8 c4 f5 ff ff       	call   10203c <ExitSR>
  102a78:	83 c4 04             	add    $0x4,%esp
  102a7b:	eb 53                	jmp    102ad0 <Kernel+0x1f8>
  102a7d:	8d 76 00             	lea    0x0(%esi),%esi
  102a80:	68 3c 6b 10 00       	push   $0x106b3c
  102a85:	e8 be 2b 00 00       	call   105648 <cons_printf>
  102a8a:	83 c4 04             	add    $0x4,%esp
  102a8d:	8b 45 08             	mov    0x8(%ebp),%eax
  102a90:	8b 50 10             	mov    0x10(%eax),%edx
  102a93:	52                   	push   %edx
  102a94:	8b 45 08             	mov    0x8(%ebp),%eax
  102a97:	8b 50 1c             	mov    0x1c(%eax),%edx
  102a9a:	52                   	push   %edx
  102a9b:	e8 e4 f6 ff ff       	call   102184 <ExecSR>
  102aa0:	83 c4 08             	add    $0x8,%esp
  102aa3:	eb 2b                	jmp    102ad0 <Kernel+0x1f8>
  102aa5:	8d 76 00             	lea    0x0(%esi),%esi
  102aa8:	68 4d 6b 10 00       	push   $0x106b4d
  102aad:	e8 96 2b 00 00       	call   105648 <cons_printf>
  102ab2:	83 c4 04             	add    $0x4,%esp
  102ab5:	8b 45 08             	mov    0x8(%ebp),%eax
  102ab8:	8b 50 10             	mov    0x10(%eax),%edx
  102abb:	52                   	push   %edx
  102abc:	8b 45 08             	mov    0x8(%ebp),%eax
  102abf:	8b 50 1c             	mov    0x1c(%eax),%edx
  102ac2:	52                   	push   %edx
  102ac3:	e8 1c f9 ff ff       	call   1023e4 <SignalSR>
  102ac8:	83 c4 08             	add    $0x8,%esp
  102acb:	eb 03                	jmp    102ad0 <Kernel+0x1f8>
  102acd:	8d 76 00             	lea    0x0(%esi),%esi
  102ad0:	e8 2f 24 00 00       	call   104f04 <cons_kbhit>
  102ad5:	89 c0                	mov    %eax,%eax
  102ad7:	85 c0                	test   %eax,%eax
  102ad9:	74 2c                	je     102b07 <Kernel+0x22f>
  102adb:	e8 2c 2a 00 00       	call   10550c <cons_getchar>
  102ae0:	89 c0                	mov    %eax,%eax
  102ae2:	88 45 ff             	mov    %al,-0x1(%ebp)
  102ae5:	80 7d ff 62          	cmpb   $0x62,-0x1(%ebp)
  102ae9:	75 09                	jne    102af4 <Kernel+0x21c>
  102aeb:	e8 c0 20 00 00       	call   104bb0 <breakpoint>
  102af0:	eb 15                	jmp    102b07 <Kernel+0x22f>
  102af2:	8d 36                	lea    (%esi),%esi
  102af4:	80 7d ff 6e          	cmpb   $0x6e,-0x1(%ebp)
  102af8:	75 0d                	jne    102b07 <Kernel+0x22f>
  102afa:	68 14 2f 10 00       	push   $0x102f14
  102aff:	e8 cc e6 ff ff       	call   1011d0 <NewProcSR>
  102b04:	83 c4 04             	add    $0x4,%esp
  102b07:	e8 e0 fc ff ff       	call   1027ec <Scheduler>
  102b0c:	a1 14 f3 10 00       	mov    0x10f314,%eax
  102b11:	89 c2                	mov    %eax,%edx
  102b13:	01 d2                	add    %edx,%edx
  102b15:	01 c2                	add    %eax,%edx
  102b17:	8d 0c d5 00 00 00 00 	lea    0x0(,%edx,8),%ecx
  102b1e:	01 ca                	add    %ecx,%edx
  102b20:	01 d0                	add    %edx,%eax
  102b22:	ba 14 34 12 00       	mov    $0x123414,%edx
  102b27:	8b 44 10 10          	mov    0x10(%eax,%edx,1),%eax
  102b2b:	50                   	push   %eax
  102b2c:	e8 43 e6 ff ff       	call   101174 <Loader>
  102b31:	83 c4 04             	add    $0x4,%esp
  102b34:	c9                   	leave  
  102b35:	c3                   	ret    
  102b36:	90                   	nop
  102b37:	90                   	nop

00102b38 <InitTerm>:
  102b38:	55                   	push   %ebp
  102b39:	89 e5                	mov    %esp,%ebp
  102b3b:	83 ec 08             	sub    $0x8,%esp
  102b3e:	53                   	push   %ebx
  102b3f:	6a 54                	push   $0x54
  102b41:	8b 45 08             	mov    0x8(%ebp),%eax
  102b44:	89 c1                	mov    %eax,%ecx
  102b46:	89 ca                	mov    %ecx,%edx
  102b48:	c1 e2 05             	shl    $0x5,%edx
  102b4b:	01 c2                	add    %eax,%edx
  102b4d:	01 d2                	add    %edx,%edx
  102b4f:	01 c2                	add    %eax,%edx
  102b51:	8d 04 95 00 00 00 00 	lea    0x0(,%edx,4),%eax
  102b58:	8d 90 78 6f 10 00    	lea    0x106f78(%eax),%edx
  102b5e:	52                   	push   %edx
  102b5f:	e8 e4 09 00 00       	call   103548 <Bzero>
  102b64:	83 c4 08             	add    $0x8,%esp
  102b67:	6a 54                	push   $0x54
  102b69:	8b 45 08             	mov    0x8(%ebp),%eax
  102b6c:	89 c1                	mov    %eax,%ecx
  102b6e:	89 ca                	mov    %ecx,%edx
  102b70:	c1 e2 05             	shl    $0x5,%edx
  102b73:	01 c2                	add    %eax,%edx
  102b75:	01 d2                	add    %edx,%edx
  102b77:	01 c2                	add    %eax,%edx
  102b79:	8d 04 95 00 00 00 00 	lea    0x0(,%edx,4),%eax
  102b80:	8d 90 cc 6f 10 00    	lea    0x106fcc(%eax),%edx
  102b86:	52                   	push   %edx
  102b87:	e8 bc 09 00 00       	call   103548 <Bzero>
  102b8c:	83 c4 08             	add    $0x8,%esp
  102b8f:	6a 54                	push   $0x54
  102b91:	8b 45 08             	mov    0x8(%ebp),%eax
  102b94:	89 c1                	mov    %eax,%ecx
  102b96:	89 ca                	mov    %ecx,%edx
  102b98:	c1 e2 05             	shl    $0x5,%edx
  102b9b:	01 c2                	add    %eax,%edx
  102b9d:	01 d2                	add    %edx,%edx
  102b9f:	01 c2                	add    %eax,%edx
  102ba1:	8d 04 95 00 00 00 00 	lea    0x0(,%edx,4),%eax
  102ba8:	8d 90 20 70 10 00    	lea    0x107020(%eax),%edx
  102bae:	52                   	push   %edx
  102baf:	e8 94 09 00 00       	call   103548 <Bzero>
  102bb4:	83 c4 08             	add    $0x8,%esp
  102bb7:	6a 14                	push   $0x14
  102bb9:	e8 62 07 00 00       	call   103320 <MuxCreateCall>
  102bbe:	83 c4 04             	add    $0x4,%esp
  102bc1:	89 c0                	mov    %eax,%eax
  102bc3:	8b 55 08             	mov    0x8(%ebp),%edx
  102bc6:	89 d3                	mov    %edx,%ebx
  102bc8:	89 d9                	mov    %ebx,%ecx
  102bca:	c1 e1 05             	shl    $0x5,%ecx
  102bcd:	01 d1                	add    %edx,%ecx
  102bcf:	01 c9                	add    %ecx,%ecx
  102bd1:	01 d1                	add    %edx,%ecx
  102bd3:	8d 14 8d 00 00 00 00 	lea    0x0(,%ecx,4),%edx
  102bda:	b9 6c 6f 10 00       	mov    $0x106f6c,%ecx
  102bdf:	89 44 0a 08          	mov    %eax,0x8(%edx,%ecx,1)
  102be3:	6a 00                	push   $0x0
  102be5:	e8 36 07 00 00       	call   103320 <MuxCreateCall>
  102bea:	83 c4 04             	add    $0x4,%esp
  102bed:	89 c0                	mov    %eax,%eax
  102bef:	8b 55 08             	mov    0x8(%ebp),%edx
  102bf2:	89 d3                	mov    %edx,%ebx
  102bf4:	89 d9                	mov    %ebx,%ecx
  102bf6:	c1 e1 05             	shl    $0x5,%ecx
  102bf9:	01 d1                	add    %edx,%ecx
  102bfb:	01 c9                	add    %ecx,%ecx
  102bfd:	01 d1                	add    %edx,%ecx
  102bff:	8d 14 8d 00 00 00 00 	lea    0x0(,%ecx,4),%edx
  102c06:	b9 6c 6f 10 00       	mov    $0x106f6c,%ecx
  102c0b:	89 84 0a 08 01 00 00 	mov    %eax,0x108(%edx,%ecx,1)
  102c12:	68 80 00 00 00       	push   $0x80
  102c17:	8b 45 08             	mov    0x8(%ebp),%eax
  102c1a:	89 c1                	mov    %eax,%ecx
  102c1c:	89 ca                	mov    %ecx,%edx
  102c1e:	c1 e2 05             	shl    $0x5,%edx
  102c21:	01 c2                	add    %eax,%edx
  102c23:	01 d2                	add    %edx,%edx
  102c25:	01 c2                	add    %eax,%edx
  102c27:	8d 04 95 00 00 00 00 	lea    0x0(,%edx,4),%eax
  102c2e:	ba 6c 6f 10 00       	mov    $0x106f6c,%edx
  102c33:	8b 44 10 04          	mov    0x4(%eax,%edx,1),%eax
  102c37:	83 c0 03             	add    $0x3,%eax
  102c3a:	50                   	push   %eax
  102c3b:	e8 4c 2e 00 00       	call   105a8c <outportb>
  102c40:	83 c4 08             	add    $0x8,%esp
  102c43:	6a 0c                	push   $0xc
  102c45:	8b 45 08             	mov    0x8(%ebp),%eax
  102c48:	89 c1                	mov    %eax,%ecx
  102c4a:	89 ca                	mov    %ecx,%edx
  102c4c:	c1 e2 05             	shl    $0x5,%edx
  102c4f:	01 c2                	add    %eax,%edx
  102c51:	01 d2                	add    %edx,%edx
  102c53:	01 c2                	add    %eax,%edx
  102c55:	8d 04 95 00 00 00 00 	lea    0x0(,%edx,4),%eax
  102c5c:	ba 6c 6f 10 00       	mov    $0x106f6c,%edx
  102c61:	8b 44 10 04          	mov    0x4(%eax,%edx,1),%eax
  102c65:	50                   	push   %eax
  102c66:	e8 21 2e 00 00       	call   105a8c <outportb>
  102c6b:	83 c4 08             	add    $0x8,%esp
  102c6e:	6a 00                	push   $0x0
  102c70:	8b 45 08             	mov    0x8(%ebp),%eax
  102c73:	89 c1                	mov    %eax,%ecx
  102c75:	89 ca                	mov    %ecx,%edx
  102c77:	c1 e2 05             	shl    $0x5,%edx
  102c7a:	01 c2                	add    %eax,%edx
  102c7c:	01 d2                	add    %edx,%edx
  102c7e:	01 c2                	add    %eax,%edx
  102c80:	8d 04 95 00 00 00 00 	lea    0x0(,%edx,4),%eax
  102c87:	ba 6c 6f 10 00       	mov    $0x106f6c,%edx
  102c8c:	8b 44 10 04          	mov    0x4(%eax,%edx,1),%eax
  102c90:	40                   	inc    %eax
  102c91:	50                   	push   %eax
  102c92:	e8 f5 2d 00 00       	call   105a8c <outportb>
  102c97:	83 c4 08             	add    $0x8,%esp
  102c9a:	6a 1a                	push   $0x1a
  102c9c:	8b 45 08             	mov    0x8(%ebp),%eax
  102c9f:	89 c1                	mov    %eax,%ecx
  102ca1:	89 ca                	mov    %ecx,%edx
  102ca3:	c1 e2 05             	shl    $0x5,%edx
  102ca6:	01 c2                	add    %eax,%edx
  102ca8:	01 d2                	add    %edx,%edx
  102caa:	01 c2                	add    %eax,%edx
  102cac:	8d 04 95 00 00 00 00 	lea    0x0(,%edx,4),%eax
  102cb3:	ba 6c 6f 10 00       	mov    $0x106f6c,%edx
  102cb8:	8b 44 10 04          	mov    0x4(%eax,%edx,1),%eax
  102cbc:	83 c0 03             	add    $0x3,%eax
  102cbf:	50                   	push   %eax
  102cc0:	e8 c7 2d 00 00       	call   105a8c <outportb>
  102cc5:	83 c4 08             	add    $0x8,%esp
  102cc8:	6a 00                	push   $0x0
  102cca:	8b 45 08             	mov    0x8(%ebp),%eax
  102ccd:	89 c1                	mov    %eax,%ecx
  102ccf:	89 ca                	mov    %ecx,%edx
  102cd1:	c1 e2 05             	shl    $0x5,%edx
  102cd4:	01 c2                	add    %eax,%edx
  102cd6:	01 d2                	add    %edx,%edx
  102cd8:	01 c2                	add    %eax,%edx
  102cda:	8d 04 95 00 00 00 00 	lea    0x0(,%edx,4),%eax
  102ce1:	ba 6c 6f 10 00       	mov    $0x106f6c,%edx
  102ce6:	8b 44 10 04          	mov    0x4(%eax,%edx,1),%eax
  102cea:	40                   	inc    %eax
  102ceb:	50                   	push   %eax
  102cec:	e8 9b 2d 00 00       	call   105a8c <outportb>
  102cf1:	83 c4 08             	add    $0x8,%esp
  102cf4:	6a 0b                	push   $0xb
  102cf6:	8b 45 08             	mov    0x8(%ebp),%eax
  102cf9:	89 c1                	mov    %eax,%ecx
  102cfb:	89 ca                	mov    %ecx,%edx
  102cfd:	c1 e2 05             	shl    $0x5,%edx
  102d00:	01 c2                	add    %eax,%edx
  102d02:	01 d2                	add    %edx,%edx
  102d04:	01 c2                	add    %eax,%edx
  102d06:	8d 04 95 00 00 00 00 	lea    0x0(,%edx,4),%eax
  102d0d:	ba 6c 6f 10 00       	mov    $0x106f6c,%edx
  102d12:	8b 44 10 04          	mov    0x4(%eax,%edx,1),%eax
  102d16:	83 c0 04             	add    $0x4,%eax
  102d19:	50                   	push   %eax
  102d1a:	e8 6d 2d 00 00       	call   105a8c <outportb>
  102d1f:	83 c4 08             	add    $0x8,%esp
  102d22:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
  102d29:	81 7d fc 34 b7 0c 00 	cmpl   $0xcb734,-0x4(%ebp)
  102d30:	7e 02                	jle    102d34 <InitTerm+0x1fc>
  102d32:	eb 08                	jmp    102d3c <InitTerm+0x204>
  102d34:	e4 80                	in     $0x80,%al
  102d36:	ff 45 fc             	incl   -0x4(%ebp)
  102d39:	eb ee                	jmp    102d29 <InitTerm+0x1f1>
  102d3b:	90                   	nop
  102d3c:	6a 03                	push   $0x3
  102d3e:	8b 45 08             	mov    0x8(%ebp),%eax
  102d41:	89 c1                	mov    %eax,%ecx
  102d43:	89 ca                	mov    %ecx,%edx
  102d45:	c1 e2 05             	shl    $0x5,%edx
  102d48:	01 c2                	add    %eax,%edx
  102d4a:	01 d2                	add    %edx,%edx
  102d4c:	01 c2                	add    %eax,%edx
  102d4e:	8d 04 95 00 00 00 00 	lea    0x0(,%edx,4),%eax
  102d55:	ba 6c 6f 10 00       	mov    $0x106f6c,%edx
  102d5a:	8b 44 10 04          	mov    0x4(%eax,%edx,1),%eax
  102d5e:	40                   	inc    %eax
  102d5f:	50                   	push   %eax
  102d60:	e8 27 2d 00 00       	call   105a8c <outportb>
  102d65:	83 c4 08             	add    $0x8,%esp
  102d68:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
  102d6f:	81 7d fc 34 b7 0c 00 	cmpl   $0xcb734,-0x4(%ebp)
  102d76:	7e 04                	jle    102d7c <InitTerm+0x244>
  102d78:	eb 0a                	jmp    102d84 <InitTerm+0x24c>
  102d7a:	8d 36                	lea    (%esi),%esi
  102d7c:	e4 80                	in     $0x80,%al
  102d7e:	ff 45 fc             	incl   -0x4(%ebp)
  102d81:	eb ec                	jmp    102d6f <InitTerm+0x237>
  102d83:	90                   	nop
  102d84:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)
  102d8b:	83 7d f8 18          	cmpl   $0x18,-0x8(%ebp)
  102d8f:	7e 07                	jle    102d98 <InitTerm+0x260>
  102d91:	e9 9a 00 00 00       	jmp    102e30 <InitTerm+0x2f8>
  102d96:	8d 36                	lea    (%esi),%esi
  102d98:	6a 0a                	push   $0xa
  102d9a:	8b 45 08             	mov    0x8(%ebp),%eax
  102d9d:	89 c1                	mov    %eax,%ecx
  102d9f:	89 ca                	mov    %ecx,%edx
  102da1:	c1 e2 05             	shl    $0x5,%edx
  102da4:	01 c2                	add    %eax,%edx
  102da6:	01 d2                	add    %edx,%edx
  102da8:	01 c2                	add    %eax,%edx
  102daa:	8d 04 95 00 00 00 00 	lea    0x0(,%edx,4),%eax
  102db1:	ba 6c 6f 10 00       	mov    $0x106f6c,%edx
  102db6:	8b 44 10 04          	mov    0x4(%eax,%edx,1),%eax
  102dba:	50                   	push   %eax
  102dbb:	e8 cc 2c 00 00       	call   105a8c <outportb>
  102dc0:	83 c4 08             	add    $0x8,%esp
  102dc3:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
  102dca:	81 7d fc 02 d9 00 00 	cmpl   $0xd902,-0x4(%ebp)
  102dd1:	7e 05                	jle    102dd8 <InitTerm+0x2a0>
  102dd3:	eb 0b                	jmp    102de0 <InitTerm+0x2a8>
  102dd5:	8d 76 00             	lea    0x0(%esi),%esi
  102dd8:	e4 80                	in     $0x80,%al
  102dda:	ff 45 fc             	incl   -0x4(%ebp)
  102ddd:	eb eb                	jmp    102dca <InitTerm+0x292>
  102ddf:	90                   	nop
  102de0:	6a 0d                	push   $0xd
  102de2:	8b 45 08             	mov    0x8(%ebp),%eax
  102de5:	89 c1                	mov    %eax,%ecx
  102de7:	89 ca                	mov    %ecx,%edx
  102de9:	c1 e2 05             	shl    $0x5,%edx
  102dec:	01 c2                	add    %eax,%edx
  102dee:	01 d2                	add    %edx,%edx
  102df0:	01 c2                	add    %eax,%edx
  102df2:	8d 04 95 00 00 00 00 	lea    0x0(,%edx,4),%eax
  102df9:	ba 6c 6f 10 00       	mov    $0x106f6c,%edx
  102dfe:	8b 44 10 04          	mov    0x4(%eax,%edx,1),%eax
  102e02:	50                   	push   %eax
  102e03:	e8 84 2c 00 00       	call   105a8c <outportb>
  102e08:	83 c4 08             	add    $0x8,%esp
  102e0b:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
  102e12:	81 7d fc 02 d9 00 00 	cmpl   $0xd902,-0x4(%ebp)
  102e19:	7e 05                	jle    102e20 <InitTerm+0x2e8>
  102e1b:	eb 0b                	jmp    102e28 <InitTerm+0x2f0>
  102e1d:	8d 76 00             	lea    0x0(%esi),%esi
  102e20:	e4 80                	in     $0x80,%al
  102e22:	ff 45 fc             	incl   -0x4(%ebp)
  102e25:	eb eb                	jmp    102e12 <InitTerm+0x2da>
  102e27:	90                   	nop
  102e28:	ff 45 f8             	incl   -0x8(%ebp)
  102e2b:	e9 5b ff ff ff       	jmp    102d8b <InitTerm+0x253>
  102e30:	8b 45 08             	mov    0x8(%ebp),%eax
  102e33:	89 c1                	mov    %eax,%ecx
  102e35:	89 ca                	mov    %ecx,%edx
  102e37:	c1 e2 05             	shl    $0x5,%edx
  102e3a:	01 c2                	add    %eax,%edx
  102e3c:	01 d2                	add    %edx,%edx
  102e3e:	01 c2                	add    %eax,%edx
  102e40:	8d 04 95 00 00 00 00 	lea    0x0(,%edx,4),%eax
  102e47:	ba 6c 6f 10 00       	mov    $0x106f6c,%edx
  102e4c:	8b 44 10 04          	mov    0x4(%eax,%edx,1),%eax
  102e50:	50                   	push   %eax
  102e51:	e8 2e 2c 00 00       	call   105a84 <inportb>
  102e56:	83 c4 04             	add    $0x4,%esp
  102e59:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
  102e60:	81 7d fc 34 b7 0c 00 	cmpl   $0xcb734,-0x4(%ebp)
  102e67:	7e 03                	jle    102e6c <InitTerm+0x334>
  102e69:	eb 09                	jmp    102e74 <InitTerm+0x33c>
  102e6b:	90                   	nop
  102e6c:	e4 80                	in     $0x80,%al
  102e6e:	ff 45 fc             	incl   -0x4(%ebp)
  102e71:	eb ed                	jmp    102e60 <InitTerm+0x328>
  102e73:	90                   	nop
  102e74:	8b 5d f4             	mov    -0xc(%ebp),%ebx
  102e77:	c9                   	leave  
  102e78:	c3                   	ret    
  102e79:	8d 76 00             	lea    0x0(%esi),%esi

00102e7c <InitProc>:
  102e7c:	55                   	push   %ebp
  102e7d:	89 e5                	mov    %esp,%ebp
  102e7f:	83 ec 04             	sub    $0x4,%esp
  102e82:	6a 01                	push   $0x1
  102e84:	e8 97 04 00 00       	call   103320 <MuxCreateCall>
  102e89:	83 c4 04             	add    $0x4,%esp
  102e8c:	89 c0                	mov    %eax,%eax
  102e8e:	a3 10 f3 10 00       	mov    %eax,0x10f310
  102e93:	6a 00                	push   $0x0
  102e95:	e8 9e fc ff ff       	call   102b38 <InitTerm>
  102e9a:	83 c4 04             	add    $0x4,%esp
  102e9d:	6a 01                	push   $0x1
  102e9f:	e8 94 fc ff ff       	call   102b38 <InitTerm>
  102ea4:	83 c4 04             	add    $0x4,%esp
  102ea7:	68 60 6b 10 00       	push   $0x106b60
  102eac:	e8 a3 2d 00 00       	call   105c54 <printf>
  102eb1:	83 c4 04             	add    $0x4,%esp
  102eb4:	eb 06                	jmp    102ebc <InitProc+0x40>
  102eb6:	8d 36                	lea    (%esi),%esi
  102eb8:	eb 56                	jmp    102f10 <InitProc+0x94>
  102eba:	8d 36                	lea    (%esi),%esi
  102ebc:	6a 2e                	push   $0x2e
  102ebe:	6a 00                	push   $0x0
  102ec0:	6a 00                	push   $0x0
  102ec2:	e8 2d 04 00 00       	call   1032f4 <ShowCharCall>
  102ec7:	83 c4 0c             	add    $0xc,%esp
  102eca:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
  102ed1:	81 7d fc 34 b7 0c 00 	cmpl   $0xcb734,-0x4(%ebp)
  102ed8:	7e 02                	jle    102edc <InitProc+0x60>
  102eda:	eb 08                	jmp    102ee4 <InitProc+0x68>
  102edc:	e4 80                	in     $0x80,%al
  102ede:	ff 45 fc             	incl   -0x4(%ebp)
  102ee1:	eb ee                	jmp    102ed1 <InitProc+0x55>
  102ee3:	90                   	nop
  102ee4:	6a 20                	push   $0x20
  102ee6:	6a 00                	push   $0x0
  102ee8:	6a 00                	push   $0x0
  102eea:	e8 05 04 00 00       	call   1032f4 <ShowCharCall>
  102eef:	83 c4 0c             	add    $0xc,%esp
  102ef2:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
  102ef9:	81 7d fc 34 b7 0c 00 	cmpl   $0xcb734,-0x4(%ebp)
  102f00:	7e 02                	jle    102f04 <InitProc+0x88>
  102f02:	eb 08                	jmp    102f0c <InitProc+0x90>
  102f04:	e4 80                	in     $0x80,%al
  102f06:	ff 45 fc             	incl   -0x4(%ebp)
  102f09:	eb ee                	jmp    102ef9 <InitProc+0x7d>
  102f0b:	90                   	nop
  102f0c:	eb a6                	jmp    102eb4 <InitProc+0x38>
  102f0e:	8d 36                	lea    (%esi),%esi
  102f10:	c9                   	leave  
  102f11:	c3                   	ret    
  102f12:	8d 36                	lea    (%esi),%esi

00102f14 <UserProc>:
  102f14:	55                   	push   %ebp
  102f15:	89 e5                	mov    %esp,%ebp
  102f17:	81 ec 04 01 00 00    	sub    $0x104,%esp
  102f1d:	57                   	push   %edi
  102f1e:	56                   	push   %esi
  102f1f:	e8 bc 03 00 00       	call   1032e0 <GetPidCall>
  102f24:	89 c0                	mov    %eax,%eax
  102f26:	89 45 fc             	mov    %eax,-0x4(%ebp)
  102f29:	8d 45 e4             	lea    -0x1c(%ebp),%eax
  102f2c:	b8 73 6b 10 00       	mov    $0x106b73,%eax
  102f31:	8b 10                	mov    (%eax),%edx
  102f33:	89 55 e4             	mov    %edx,-0x1c(%ebp)
  102f36:	8b 50 04             	mov    0x4(%eax),%edx
  102f39:	89 55 e8             	mov    %edx,-0x18(%ebp)
  102f3c:	8b 50 08             	mov    0x8(%eax),%edx
  102f3f:	89 55 ec             	mov    %edx,-0x14(%ebp)
  102f42:	8b 40 0c             	mov    0xc(%eax),%eax
  102f45:	89 45 f0             	mov    %eax,-0x10(%ebp)
  102f48:	8d 45 d4             	lea    -0x2c(%ebp),%eax
  102f4b:	8d 7d d4             	lea    -0x2c(%ebp),%edi
  102f4e:	be 83 6b 10 00       	mov    $0x106b83,%esi
  102f53:	fc                   	cld    
  102f54:	b9 03 00 00 00       	mov    $0x3,%ecx
  102f59:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
  102f5b:	66 a5                	movsw  %ds:(%esi),%es:(%edi)
  102f5d:	a4                   	movsb  %ds:(%esi),%es:(%edi)
  102f5e:	b8 92 6b 10 00       	mov    $0x106b92,%eax
  102f63:	8b 10                	mov    (%eax),%edx
  102f65:	89 95 6c ff ff ff    	mov    %edx,-0x94(%ebp)
  102f6b:	8b 50 04             	mov    0x4(%eax),%edx
  102f6e:	89 95 70 ff ff ff    	mov    %edx,-0x90(%ebp)
  102f74:	66 8b 40 08          	mov    0x8(%eax),%ax
  102f78:	66 89 85 74 ff ff ff 	mov    %ax,-0x8c(%ebp)
  102f7f:	8d 85 76 ff ff ff    	lea    -0x8a(%ebp),%eax
  102f85:	6a 5b                	push   $0x5b
  102f87:	6a 00                	push   $0x0
  102f89:	50                   	push   %eax
  102f8a:	e8 91 2c 00 00       	call   105c20 <memset>
  102f8f:	83 c4 0c             	add    $0xc,%esp
  102f92:	8b 45 fc             	mov    -0x4(%ebp),%eax
  102f95:	89 c2                	mov    %eax,%edx
  102f97:	c1 fa 1f             	sar    $0x1f,%edx
  102f9a:	89 d1                	mov    %edx,%ecx
  102f9c:	c1 e9 1f             	shr    $0x1f,%ecx
  102f9f:	89 8d fc fe ff ff    	mov    %ecx,-0x104(%ebp)
  102fa5:	8b 95 fc fe ff ff    	mov    -0x104(%ebp),%edx
  102fab:	01 c2                	add    %eax,%edx
  102fad:	89 d1                	mov    %edx,%ecx
  102faf:	c1 f9 01             	sar    $0x1,%ecx
  102fb2:	89 8d fc fe ff ff    	mov    %ecx,-0x104(%ebp)
  102fb8:	8b 95 fc fe ff ff    	mov    -0x104(%ebp),%edx
  102fbe:	8b 8d fc fe ff ff    	mov    -0x104(%ebp),%ecx
  102fc4:	01 d1                	add    %edx,%ecx
  102fc6:	89 8d fc fe ff ff    	mov    %ecx,-0x104(%ebp)
  102fcc:	2b 85 fc fe ff ff    	sub    -0x104(%ebp),%eax
  102fd2:	83 f8 01             	cmp    $0x1,%eax
  102fd5:	75 09                	jne    102fe0 <UserProc+0xcc>
  102fd7:	b8 23 00 00 00       	mov    $0x23,%eax
  102fdc:	eb 07                	jmp    102fe5 <UserProc+0xd1>
  102fde:	8d 36                	lea    (%esi),%esi
  102fe0:	b8 24 00 00 00       	mov    $0x24,%eax
  102fe5:	89 85 00 ff ff ff    	mov    %eax,-0x100(%ebp)
  102feb:	8b 4d fc             	mov    -0x4(%ebp),%ecx
  102fee:	89 8d fc fe ff ff    	mov    %ecx,-0x104(%ebp)
  102ff4:	8b 85 fc fe ff ff    	mov    -0x104(%ebp),%eax
  102ffa:	b9 0a 00 00 00       	mov    $0xa,%ecx
  102fff:	99                   	cltd   
  103000:	f7 f9                	idiv   %ecx
  103002:	88 c1                	mov    %al,%cl
  103004:	80 c1 30             	add    $0x30,%cl
  103007:	88 8d 70 ff ff ff    	mov    %cl,-0x90(%ebp)
  10300d:	8b 4d fc             	mov    -0x4(%ebp),%ecx
  103010:	89 8d fc fe ff ff    	mov    %ecx,-0x104(%ebp)
  103016:	8b 85 fc fe ff ff    	mov    -0x104(%ebp),%eax
  10301c:	b9 0a 00 00 00       	mov    $0xa,%ecx
  103021:	99                   	cltd   
  103022:	f7 f9                	idiv   %ecx
  103024:	88 d1                	mov    %dl,%cl
  103026:	80 c1 30             	add    $0x30,%cl
  103029:	88 8d 71 ff ff ff    	mov    %cl,-0x8f(%ebp)
  10302f:	68 a0 32 10 00       	push   $0x1032a0
  103034:	6a 03                	push   $0x3
  103036:	e8 f9 04 00 00       	call   103534 <SignalCall>
  10303b:	83 c4 08             	add    $0x8,%esp
  10303e:	eb 08                	jmp    103048 <UserProc+0x134>
  103040:	e9 4b 01 00 00       	jmp    103190 <UserProc+0x27c>
  103045:	8d 76 00             	lea    0x0(%esi),%esi
  103048:	8d 85 6c ff ff ff    	lea    -0x94(%ebp),%eax
  10304e:	50                   	push   %eax
  10304f:	8b 85 00 ff ff ff    	mov    -0x100(%ebp),%eax
  103055:	50                   	push   %eax
  103056:	e8 f1 02 00 00       	call   10334c <WriteCall>
  10305b:	83 c4 08             	add    $0x8,%esp
  10305e:	8d 85 04 ff ff ff    	lea    -0xfc(%ebp),%eax
  103064:	50                   	push   %eax
  103065:	8b 85 00 ff ff ff    	mov    -0x100(%ebp),%eax
  10306b:	50                   	push   %eax
  10306c:	e8 bf 03 00 00       	call   103430 <ReadCall>
  103071:	83 c4 08             	add    $0x8,%esp
  103074:	68 9c 6b 10 00       	push   $0x106b9c
  103079:	8d 85 04 ff ff ff    	lea    -0xfc(%ebp),%eax
  10307f:	50                   	push   %eax
  103080:	e8 3f 06 00 00       	call   1036c4 <StrCmp>
  103085:	83 c4 08             	add    $0x8,%esp
  103088:	89 c0                	mov    %eax,%eax
  10308a:	85 c0                	test   %eax,%eax
  10308c:	75 02                	jne    103090 <UserProc+0x17c>
  10308e:	eb ae                	jmp    10303e <UserProc+0x12a>
  103090:	e8 57 04 00 00       	call   1034ec <ForkCall>
  103095:	89 c0                	mov    %eax,%eax
  103097:	89 45 f8             	mov    %eax,-0x8(%ebp)
  10309a:	83 7d f8 ff          	cmpl   $0xffffffff,-0x8(%ebp)
  10309e:	75 18                	jne    1030b8 <UserProc+0x1a4>
  1030a0:	68 a1 6b 10 00       	push   $0x106ba1
  1030a5:	8b 85 00 ff ff ff    	mov    -0x100(%ebp),%eax
  1030ab:	50                   	push   %eax
  1030ac:	e8 9b 02 00 00       	call   10334c <WriteCall>
  1030b1:	83 c4 08             	add    $0x8,%esp
  1030b4:	eb 88                	jmp    10303e <UserProc+0x12a>
  1030b6:	8d 36                	lea    (%esi),%esi
  1030b8:	83 7d f8 00          	cmpl   $0x0,-0x8(%ebp)
  1030bc:	75 21                	jne    1030df <UserProc+0x1cb>
  1030be:	68 b0 6b 10 00       	push   $0x106bb0
  1030c3:	e8 80 25 00 00       	call   105648 <cons_printf>
  1030c8:	83 c4 04             	add    $0x4,%esp
  1030cb:	8b 85 00 ff ff ff    	mov    -0x100(%ebp),%eax
  1030d1:	50                   	push   %eax
  1030d2:	68 9c 31 10 00       	push   $0x10319c
  1030d7:	e8 44 04 00 00       	call   103520 <ExecCall>
  1030dc:	83 c4 08             	add    $0x8,%esp
  1030df:	8b 4d f8             	mov    -0x8(%ebp),%ecx
  1030e2:	89 8d fc fe ff ff    	mov    %ecx,-0x104(%ebp)
  1030e8:	8b 85 fc fe ff ff    	mov    -0x104(%ebp),%eax
  1030ee:	b9 0a 00 00 00       	mov    $0xa,%ecx
  1030f3:	99                   	cltd   
  1030f4:	f7 f9                	idiv   %ecx
  1030f6:	88 c1                	mov    %al,%cl
  1030f8:	80 c1 30             	add    $0x30,%cl
  1030fb:	88 4d ef             	mov    %cl,-0x11(%ebp)
  1030fe:	8b 4d f8             	mov    -0x8(%ebp),%ecx
  103101:	89 8d fc fe ff ff    	mov    %ecx,-0x104(%ebp)
  103107:	8b 85 fc fe ff ff    	mov    -0x104(%ebp),%eax
  10310d:	b9 0a 00 00 00       	mov    $0xa,%ecx
  103112:	99                   	cltd   
  103113:	f7 f9                	idiv   %ecx
  103115:	88 d1                	mov    %dl,%cl
  103117:	80 c1 30             	add    $0x30,%cl
  10311a:	88 4d f0             	mov    %cl,-0x10(%ebp)
  10311d:	8d 45 e4             	lea    -0x1c(%ebp),%eax
  103120:	50                   	push   %eax
  103121:	8b 85 00 ff ff ff    	mov    -0x100(%ebp),%eax
  103127:	50                   	push   %eax
  103128:	e8 1f 02 00 00       	call   10334c <WriteCall>
  10312d:	83 c4 08             	add    $0x8,%esp
  103130:	68 c3 6b 10 00       	push   $0x106bc3
  103135:	8b 85 00 ff ff ff    	mov    -0x100(%ebp),%eax
  10313b:	50                   	push   %eax
  10313c:	e8 0b 02 00 00       	call   10334c <WriteCall>
  103141:	83 c4 08             	add    $0x8,%esp
  103144:	e8 b7 03 00 00       	call   103500 <WaitCall>
  103149:	89 c0                	mov    %eax,%eax
  10314b:	89 45 f4             	mov    %eax,-0xc(%ebp)
  10314e:	8b 45 f4             	mov    -0xc(%ebp),%eax
  103151:	50                   	push   %eax
  103152:	8d 45 d4             	lea    -0x2c(%ebp),%eax
  103155:	8d 50 0b             	lea    0xb(%eax),%edx
  103158:	52                   	push   %edx
  103159:	e8 be 05 00 00       	call   10371c <Itoa>
  10315e:	83 c4 08             	add    $0x8,%esp
  103161:	8d 45 d4             	lea    -0x2c(%ebp),%eax
  103164:	50                   	push   %eax
  103165:	8b 85 00 ff ff ff    	mov    -0x100(%ebp),%eax
  10316b:	50                   	push   %eax
  10316c:	e8 db 01 00 00       	call   10334c <WriteCall>
  103171:	83 c4 08             	add    $0x8,%esp
  103174:	68 c3 6b 10 00       	push   $0x106bc3
  103179:	8b 85 00 ff ff ff    	mov    -0x100(%ebp),%eax
  10317f:	50                   	push   %eax
  103180:	e8 c7 01 00 00       	call   10334c <WriteCall>
  103185:	83 c4 08             	add    $0x8,%esp
  103188:	e9 b1 fe ff ff       	jmp    10303e <UserProc+0x12a>
  10318d:	8d 76 00             	lea    0x0(%esi),%esi
  103190:	8d a5 f4 fe ff ff    	lea    -0x10c(%ebp),%esp
  103196:	5e                   	pop    %esi
  103197:	5f                   	pop    %edi
  103198:	c9                   	leave  
  103199:	c3                   	ret    
  10319a:	8d 36                	lea    (%esi),%esi

0010319c <Aout>:
  10319c:	55                   	push   %ebp
  10319d:	89 e5                	mov    %esp,%ebp
  10319f:	83 ec 2c             	sub    $0x2c,%esp
  1031a2:	57                   	push   %edi
  1031a3:	56                   	push   %esi
  1031a4:	e8 37 01 00 00       	call   1032e0 <GetPidCall>
  1031a9:	89 c0                	mov    %eax,%eax
  1031ab:	89 45 fc             	mov    %eax,-0x4(%ebp)
  1031ae:	8d 45 e4             	lea    -0x1c(%ebp),%eax
  1031b1:	8d 7d e4             	lea    -0x1c(%ebp),%edi
  1031b4:	be c6 6b 10 00       	mov    $0x106bc6,%esi
  1031b9:	fc                   	cld    
  1031ba:	b9 05 00 00 00       	mov    $0x5,%ecx
  1031bf:	f3 a5                	rep movsl %ds:(%esi),%es:(%edi)
  1031c1:	a4                   	movsb  %ds:(%esi),%es:(%edi)
  1031c2:	8a 4d fc             	mov    -0x4(%ebp),%cl
  1031c5:	80 c1 40             	add    $0x40,%cl
  1031c8:	88 4d e3             	mov    %cl,-0x1d(%ebp)
  1031cb:	8b 55 fc             	mov    -0x4(%ebp),%edx
  1031ce:	89 d0                	mov    %edx,%eax
  1031d0:	c1 e0 02             	shl    $0x2,%eax
  1031d3:	01 d0                	add    %edx,%eax
  1031d5:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
  1031dc:	01 d0                	add    %edx,%eax
  1031de:	8d 14 85 00 00 00 00 	lea    0x0(,%eax,4),%edx
  1031e5:	89 55 dc             	mov    %edx,-0x24(%ebp)
  1031e8:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
  1031ef:	68 db 6b 10 00       	push   $0x106bdb
  1031f4:	e8 4f 24 00 00       	call   105648 <cons_printf>
  1031f9:	83 c4 04             	add    $0x4,%esp
  1031fc:	8b 4d fc             	mov    -0x4(%ebp),%ecx
  1031ff:	89 4d d4             	mov    %ecx,-0x2c(%ebp)
  103202:	8b 45 d4             	mov    -0x2c(%ebp),%eax
  103205:	b9 0a 00 00 00       	mov    $0xa,%ecx
  10320a:	99                   	cltd   
  10320b:	f7 f9                	idiv   %ecx
  10320d:	88 c1                	mov    %al,%cl
  10320f:	80 c1 30             	add    $0x30,%cl
  103212:	88 4d e4             	mov    %cl,-0x1c(%ebp)
  103215:	8b 4d fc             	mov    -0x4(%ebp),%ecx
  103218:	89 4d d4             	mov    %ecx,-0x2c(%ebp)
  10321b:	8b 45 d4             	mov    -0x2c(%ebp),%eax
  10321e:	b9 0a 00 00 00       	mov    $0xa,%ecx
  103223:	99                   	cltd   
  103224:	f7 f9                	idiv   %ecx
  103226:	88 d1                	mov    %dl,%cl
  103228:	80 c1 30             	add    $0x30,%cl
  10322b:	88 4d e5             	mov    %cl,-0x1b(%ebp)
  10322e:	8a 45 e3             	mov    -0x1d(%ebp),%al
  103231:	88 45 e8             	mov    %al,-0x18(%ebp)
  103234:	8d 45 e4             	lea    -0x1c(%ebp),%eax
  103237:	50                   	push   %eax
  103238:	8b 45 08             	mov    0x8(%ebp),%eax
  10323b:	50                   	push   %eax
  10323c:	e8 0b 01 00 00       	call   10334c <WriteCall>
  103241:	83 c4 08             	add    $0x8,%esp
  103244:	c7 45 d8 00 00 00 00 	movl   $0x0,-0x28(%ebp)
  10324b:	83 7d d8 45          	cmpl   $0x45,-0x28(%ebp)
  10324f:	7e 03                	jle    103254 <Aout+0xb8>
  103251:	eb 39                	jmp    10328c <Aout+0xf0>
  103253:	90                   	nop
  103254:	0f be 45 e3          	movsbl -0x1d(%ebp),%eax
  103258:	50                   	push   %eax
  103259:	8b 45 d8             	mov    -0x28(%ebp),%eax
  10325c:	50                   	push   %eax
  10325d:	8b 45 fc             	mov    -0x4(%ebp),%eax
  103260:	50                   	push   %eax
  103261:	e8 8e 00 00 00       	call   1032f4 <ShowCharCall>
  103266:	83 c4 0c             	add    $0xc,%esp
  103269:	6a 0a                	push   $0xa
  10326b:	e8 a4 00 00 00       	call   103314 <SleepCall>
  103270:	83 c4 04             	add    $0x4,%esp
  103273:	6a 20                	push   $0x20
  103275:	8b 45 d8             	mov    -0x28(%ebp),%eax
  103278:	50                   	push   %eax
  103279:	8b 45 fc             	mov    -0x4(%ebp),%eax
  10327c:	50                   	push   %eax
  10327d:	e8 72 00 00 00       	call   1032f4 <ShowCharCall>
  103282:	83 c4 0c             	add    $0xc,%esp
  103285:	ff 45 d8             	incl   -0x28(%ebp)
  103288:	eb c1                	jmp    10324b <Aout+0xaf>
  10328a:	8d 36                	lea    (%esi),%esi
  10328c:	8b 45 dc             	mov    -0x24(%ebp),%eax
  10328f:	50                   	push   %eax
  103290:	e8 7f 02 00 00       	call   103514 <ExitCall>
  103295:	83 c4 04             	add    $0x4,%esp
  103298:	8d 65 cc             	lea    -0x34(%ebp),%esp
  10329b:	5e                   	pop    %esi
  10329c:	5f                   	pop    %edi
  10329d:	c9                   	leave  
  10329e:	c3                   	ret    
  10329f:	90                   	nop

001032a0 <Ouch>:
  1032a0:	55                   	push   %ebp
  1032a1:	89 e5                	mov    %esp,%ebp
  1032a3:	68 ea 6b 10 00       	push   $0x106bea
  1032a8:	8b 45 08             	mov    0x8(%ebp),%eax
  1032ab:	50                   	push   %eax
  1032ac:	e8 9b 00 00 00       	call   10334c <WriteCall>
  1032b1:	83 c4 08             	add    $0x8,%esp
  1032b4:	c9                   	leave  
  1032b5:	c3                   	ret    
  1032b6:	8d 36                	lea    (%esi),%esi

001032b8 <Wrapper>:
  1032b8:	55                   	push   %ebp
  1032b9:	89 e5                	mov    %esp,%ebp
  1032bb:	83 ec 04             	sub    $0x4,%esp
  1032be:	53                   	push   %ebx
  1032bf:	8b 45 08             	mov    0x8(%ebp),%eax
  1032c2:	89 45 fc             	mov    %eax,-0x4(%ebp)
  1032c5:	60                   	pusha  
  1032c6:	8b 45 0c             	mov    0xc(%ebp),%eax
  1032c9:	50                   	push   %eax
  1032ca:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  1032cd:	ff d3                	call   *%ebx
  1032cf:	83 c4 04             	add    $0x4,%esp
  1032d2:	61                   	popa   
  1032d3:	89 ec                	mov    %ebp,%esp
  1032d5:	5d                   	pop    %ebp
  1032d6:	c2 08 00             	ret    $0x8
  1032d9:	8b 5d f8             	mov    -0x8(%ebp),%ebx
  1032dc:	c9                   	leave  
  1032dd:	c3                   	ret    
  1032de:	90                   	nop
  1032df:	90                   	nop

001032e0 <GetPidCall>:
  1032e0:	55                   	push   %ebp
  1032e1:	89 e5                	mov    %esp,%ebp
  1032e3:	83 ec 04             	sub    $0x4,%esp
  1032e6:	cd 30                	int    $0x30
  1032e8:	89 45 fc             	mov    %eax,-0x4(%ebp)
  1032eb:	8b 45 fc             	mov    -0x4(%ebp),%eax
  1032ee:	eb 00                	jmp    1032f0 <GetPidCall+0x10>
  1032f0:	c9                   	leave  
  1032f1:	c3                   	ret    
  1032f2:	8d 36                	lea    (%esi),%esi

001032f4 <ShowCharCall>:
  1032f4:	55                   	push   %ebp
  1032f5:	89 e5                	mov    %esp,%ebp
  1032f7:	83 ec 04             	sub    $0x4,%esp
  1032fa:	53                   	push   %ebx
  1032fb:	8b 55 10             	mov    0x10(%ebp),%edx
  1032fe:	88 55 ff             	mov    %dl,-0x1(%ebp)
  103301:	8b 45 08             	mov    0x8(%ebp),%eax
  103304:	8b 5d 0c             	mov    0xc(%ebp),%ebx
  103307:	8b 4d ff             	mov    -0x1(%ebp),%ecx
  10330a:	cd 31                	int    $0x31
  10330c:	8b 5d f8             	mov    -0x8(%ebp),%ebx
  10330f:	c9                   	leave  
  103310:	c3                   	ret    
  103311:	8d 76 00             	lea    0x0(%esi),%esi

00103314 <SleepCall>:
  103314:	55                   	push   %ebp
  103315:	89 e5                	mov    %esp,%ebp
  103317:	8b 45 08             	mov    0x8(%ebp),%eax
  10331a:	cd 32                	int    $0x32
  10331c:	c9                   	leave  
  10331d:	c3                   	ret    
  10331e:	8d 36                	lea    (%esi),%esi

00103320 <MuxCreateCall>:
  103320:	55                   	push   %ebp
  103321:	89 e5                	mov    %esp,%ebp
  103323:	83 ec 04             	sub    $0x4,%esp
  103326:	8b 45 08             	mov    0x8(%ebp),%eax
  103329:	cd 33                	int    $0x33
  10332b:	89 45 fc             	mov    %eax,-0x4(%ebp)
  10332e:	8b 45 fc             	mov    -0x4(%ebp),%eax
  103331:	eb 01                	jmp    103334 <MuxCreateCall+0x14>
  103333:	90                   	nop
  103334:	c9                   	leave  
  103335:	c3                   	ret    
  103336:	8d 36                	lea    (%esi),%esi

00103338 <MuxOpCall>:
  103338:	55                   	push   %ebp
  103339:	89 e5                	mov    %esp,%ebp
  10333b:	53                   	push   %ebx
  10333c:	8b 45 08             	mov    0x8(%ebp),%eax
  10333f:	8b 5d 0c             	mov    0xc(%ebp),%ebx
  103342:	cd 34                	int    $0x34
  103344:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  103347:	c9                   	leave  
  103348:	c3                   	ret    
  103349:	8d 76 00             	lea    0x0(%esi),%esi

0010334c <WriteCall>:
  10334c:	55                   	push   %ebp
  10334d:	89 e5                	mov    %esp,%ebp
  10334f:	83 ec 0c             	sub    $0xc,%esp
  103352:	e8 89 ff ff ff       	call   1032e0 <GetPidCall>
  103357:	89 c0                	mov    %eax,%eax
  103359:	89 45 fc             	mov    %eax,-0x4(%ebp)
  10335c:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)
  103363:	83 7d 08 01          	cmpl   $0x1,0x8(%ebp)
  103367:	75 33                	jne    10339c <WriteCall+0x50>
  103369:	8b 45 0c             	mov    0xc(%ebp),%eax
  10336c:	80 38 00             	cmpb   $0x0,(%eax)
  10336f:	75 03                	jne    103374 <WriteCall+0x28>
  103371:	eb 21                	jmp    103394 <WriteCall+0x48>
  103373:	90                   	nop
  103374:	8b 45 0c             	mov    0xc(%ebp),%eax
  103377:	0f be 10             	movsbl (%eax),%edx
  10337a:	52                   	push   %edx
  10337b:	8b 45 f8             	mov    -0x8(%ebp),%eax
  10337e:	50                   	push   %eax
  10337f:	8b 45 fc             	mov    -0x4(%ebp),%eax
  103382:	50                   	push   %eax
  103383:	e8 6c ff ff ff       	call   1032f4 <ShowCharCall>
  103388:	83 c4 0c             	add    $0xc,%esp
  10338b:	ff 45 f8             	incl   -0x8(%ebp)
  10338e:	ff 45 0c             	incl   0xc(%ebp)
  103391:	eb d6                	jmp    103369 <WriteCall+0x1d>
  103393:	90                   	nop
  103394:	e9 93 00 00 00       	jmp    10342c <WriteCall+0xe0>
  103399:	8d 76 00             	lea    0x0(%esi),%esi
  10339c:	83 7d 08 23          	cmpl   $0x23,0x8(%ebp)
  1033a0:	75 0a                	jne    1033ac <WriteCall+0x60>
  1033a2:	c7 45 f4 00 00 00 00 	movl   $0x0,-0xc(%ebp)
  1033a9:	eb 08                	jmp    1033b3 <WriteCall+0x67>
  1033ab:	90                   	nop
  1033ac:	c7 45 f4 01 00 00 00 	movl   $0x1,-0xc(%ebp)
  1033b3:	8b 45 0c             	mov    0xc(%ebp),%eax
  1033b6:	80 38 00             	cmpb   $0x0,(%eax)
  1033b9:	75 05                	jne    1033c0 <WriteCall+0x74>
  1033bb:	eb 6f                	jmp    10342c <WriteCall+0xe0>
  1033bd:	8d 76 00             	lea    0x0(%esi),%esi
  1033c0:	6a 01                	push   $0x1
  1033c2:	8b 45 f4             	mov    -0xc(%ebp),%eax
  1033c5:	89 c1                	mov    %eax,%ecx
  1033c7:	89 ca                	mov    %ecx,%edx
  1033c9:	c1 e2 05             	shl    $0x5,%edx
  1033cc:	01 c2                	add    %eax,%edx
  1033ce:	01 d2                	add    %edx,%edx
  1033d0:	01 c2                	add    %eax,%edx
  1033d2:	8d 04 95 00 00 00 00 	lea    0x0(,%edx,4),%eax
  1033d9:	ba 6c 6f 10 00       	mov    $0x106f6c,%edx
  1033de:	8b 44 10 08          	mov    0x8(%eax,%edx,1),%eax
  1033e2:	50                   	push   %eax
  1033e3:	e8 50 ff ff ff       	call   103338 <MuxOpCall>
  1033e8:	83 c4 08             	add    $0x8,%esp
  1033eb:	8b 45 f4             	mov    -0xc(%ebp),%eax
  1033ee:	89 c1                	mov    %eax,%ecx
  1033f0:	89 ca                	mov    %ecx,%edx
  1033f2:	c1 e2 05             	shl    $0x5,%edx
  1033f5:	01 c2                	add    %eax,%edx
  1033f7:	01 d2                	add    %edx,%edx
  1033f9:	01 c2                	add    %eax,%edx
  1033fb:	8d 04 95 00 00 00 00 	lea    0x0(,%edx,4),%eax
  103402:	8d 90 78 6f 10 00    	lea    0x106f78(%eax),%edx
  103408:	52                   	push   %edx
  103409:	8b 45 0c             	mov    0xc(%ebp),%eax
  10340c:	0f be 10             	movsbl (%eax),%edx
  10340f:	52                   	push   %edx
  103410:	e8 3f 02 00 00       	call   103654 <EnQ>
  103415:	83 c4 08             	add    $0x8,%esp
  103418:	83 7d 08 23          	cmpl   $0x23,0x8(%ebp)
  10341c:	75 06                	jne    103424 <WriteCall+0xd8>
  10341e:	cd 23                	int    $0x23
  103420:	eb 04                	jmp    103426 <WriteCall+0xda>
  103422:	8d 36                	lea    (%esi),%esi
  103424:	cd 24                	int    $0x24
  103426:	ff 45 0c             	incl   0xc(%ebp)
  103429:	eb 88                	jmp    1033b3 <WriteCall+0x67>
  10342b:	90                   	nop
  10342c:	c9                   	leave  
  10342d:	c3                   	ret    
  10342e:	8d 36                	lea    (%esi),%esi

00103430 <ReadCall>:
  103430:	55                   	push   %ebp
  103431:	89 e5                	mov    %esp,%ebp
  103433:	83 ec 0c             	sub    $0xc,%esp
  103436:	83 7d 08 23          	cmpl   $0x23,0x8(%ebp)
  10343a:	75 0c                	jne    103448 <ReadCall+0x18>
  10343c:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
  103443:	eb 0a                	jmp    10344f <ReadCall+0x1f>
  103445:	8d 76 00             	lea    0x0(%esi),%esi
  103448:	c7 45 fc 01 00 00 00 	movl   $0x1,-0x4(%ebp)
  10344f:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)
  103456:	eb 08                	jmp    103460 <ReadCall+0x30>
  103458:	e9 8b 00 00 00       	jmp    1034e8 <ReadCall+0xb8>
  10345d:	8d 76 00             	lea    0x0(%esi),%esi
  103460:	6a 01                	push   $0x1
  103462:	8b 45 fc             	mov    -0x4(%ebp),%eax
  103465:	89 c1                	mov    %eax,%ecx
  103467:	89 ca                	mov    %ecx,%edx
  103469:	c1 e2 05             	shl    $0x5,%edx
  10346c:	01 c2                	add    %eax,%edx
  10346e:	01 d2                	add    %edx,%edx
  103470:	01 c2                	add    %eax,%edx
  103472:	8d 04 95 00 00 00 00 	lea    0x0(,%edx,4),%eax
  103479:	ba 6c 6f 10 00       	mov    $0x106f6c,%edx
  10347e:	8b 84 10 08 01 00 00 	mov    0x108(%eax,%edx,1),%eax
  103485:	50                   	push   %eax
  103486:	e8 ad fe ff ff       	call   103338 <MuxOpCall>
  10348b:	83 c4 08             	add    $0x8,%esp
  10348e:	8b 45 fc             	mov    -0x4(%ebp),%eax
  103491:	89 c1                	mov    %eax,%ecx
  103493:	89 ca                	mov    %ecx,%edx
  103495:	c1 e2 05             	shl    $0x5,%edx
  103498:	01 c2                	add    %eax,%edx
  10349a:	01 d2                	add    %edx,%edx
  10349c:	01 c2                	add    %eax,%edx
  10349e:	8d 04 95 00 00 00 00 	lea    0x0(,%edx,4),%eax
  1034a5:	8d 90 cc 6f 10 00    	lea    0x106fcc(%eax),%edx
  1034ab:	52                   	push   %edx
  1034ac:	e8 e7 00 00 00       	call   103598 <DeQ>
  1034b1:	83 c4 04             	add    $0x4,%esp
  1034b4:	89 c0                	mov    %eax,%eax
  1034b6:	88 45 f7             	mov    %al,-0x9(%ebp)
  1034b9:	8b 45 0c             	mov    0xc(%ebp),%eax
  1034bc:	8a 55 f7             	mov    -0x9(%ebp),%dl
  1034bf:	88 10                	mov    %dl,(%eax)
  1034c1:	80 7d f7 00          	cmpb   $0x0,-0x9(%ebp)
  1034c5:	75 05                	jne    1034cc <ReadCall+0x9c>
  1034c7:	eb 1f                	jmp    1034e8 <ReadCall+0xb8>
  1034c9:	8d 76 00             	lea    0x0(%esi),%esi
  1034cc:	ff 45 0c             	incl   0xc(%ebp)
  1034cf:	ff 45 f8             	incl   -0x8(%ebp)
  1034d2:	83 7d f8 65          	cmpl   $0x65,-0x8(%ebp)
  1034d6:	75 08                	jne    1034e0 <ReadCall+0xb0>
  1034d8:	8b 45 0c             	mov    0xc(%ebp),%eax
  1034db:	c6 00 00             	movb   $0x0,(%eax)
  1034de:	eb 08                	jmp    1034e8 <ReadCall+0xb8>
  1034e0:	e9 71 ff ff ff       	jmp    103456 <ReadCall+0x26>
  1034e5:	8d 76 00             	lea    0x0(%esi),%esi
  1034e8:	c9                   	leave  
  1034e9:	c3                   	ret    
  1034ea:	8d 36                	lea    (%esi),%esi

001034ec <ForkCall>:
  1034ec:	55                   	push   %ebp
  1034ed:	89 e5                	mov    %esp,%ebp
  1034ef:	83 ec 04             	sub    $0x4,%esp
  1034f2:	cd 35                	int    $0x35
  1034f4:	89 45 fc             	mov    %eax,-0x4(%ebp)
  1034f7:	8b 45 fc             	mov    -0x4(%ebp),%eax
  1034fa:	eb 00                	jmp    1034fc <ForkCall+0x10>
  1034fc:	c9                   	leave  
  1034fd:	c3                   	ret    
  1034fe:	8d 36                	lea    (%esi),%esi

00103500 <WaitCall>:
  103500:	55                   	push   %ebp
  103501:	89 e5                	mov    %esp,%ebp
  103503:	83 ec 04             	sub    $0x4,%esp
  103506:	cd 36                	int    $0x36
  103508:	89 45 fc             	mov    %eax,-0x4(%ebp)
  10350b:	8b 45 fc             	mov    -0x4(%ebp),%eax
  10350e:	eb 00                	jmp    103510 <WaitCall+0x10>
  103510:	c9                   	leave  
  103511:	c3                   	ret    
  103512:	8d 36                	lea    (%esi),%esi

00103514 <ExitCall>:
  103514:	55                   	push   %ebp
  103515:	89 e5                	mov    %esp,%ebp
  103517:	8b 45 08             	mov    0x8(%ebp),%eax
  10351a:	cd 37                	int    $0x37
  10351c:	c9                   	leave  
  10351d:	c3                   	ret    
  10351e:	8d 36                	lea    (%esi),%esi

00103520 <ExecCall>:
  103520:	55                   	push   %ebp
  103521:	89 e5                	mov    %esp,%ebp
  103523:	53                   	push   %ebx
  103524:	8b 45 08             	mov    0x8(%ebp),%eax
  103527:	8b 5d 0c             	mov    0xc(%ebp),%ebx
  10352a:	cd 38                	int    $0x38
  10352c:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  10352f:	c9                   	leave  
  103530:	c3                   	ret    
  103531:	8d 76 00             	lea    0x0(%esi),%esi

00103534 <SignalCall>:
  103534:	55                   	push   %ebp
  103535:	89 e5                	mov    %esp,%ebp
  103537:	53                   	push   %ebx
  103538:	8b 45 08             	mov    0x8(%ebp),%eax
  10353b:	8b 5d 0c             	mov    0xc(%ebp),%ebx
  10353e:	cd 39                	int    $0x39
  103540:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  103543:	c9                   	leave  
  103544:	c3                   	ret    
  103545:	90                   	nop
  103546:	90                   	nop
  103547:	90                   	nop

00103548 <Bzero>:
  103548:	55                   	push   %ebp
  103549:	89 e5                	mov    %esp,%ebp
  10354b:	90                   	nop
  10354c:	ff 4d 0c             	decl   0xc(%ebp)
  10354f:	83 7d 0c ff          	cmpl   $0xffffffff,0xc(%ebp)
  103553:	75 03                	jne    103558 <Bzero+0x10>
  103555:	eb 0d                	jmp    103564 <Bzero+0x1c>
  103557:	90                   	nop
  103558:	8b 45 08             	mov    0x8(%ebp),%eax
  10355b:	c6 00 00             	movb   $0x0,(%eax)
  10355e:	ff 45 08             	incl   0x8(%ebp)
  103561:	eb e9                	jmp    10354c <Bzero+0x4>
  103563:	90                   	nop
  103564:	c9                   	leave  
  103565:	c3                   	ret    
  103566:	8d 36                	lea    (%esi),%esi

00103568 <QisEmpty>:
  103568:	55                   	push   %ebp
  103569:	89 e5                	mov    %esp,%ebp
  10356b:	8b 45 08             	mov    0x8(%ebp),%eax
  10356e:	83 38 00             	cmpl   $0x0,(%eax)
  103571:	0f 94 c0             	sete   %al
  103574:	0f b6 d0             	movzbl %al,%edx
  103577:	89 d0                	mov    %edx,%eax
  103579:	eb 01                	jmp    10357c <QisEmpty+0x14>
  10357b:	90                   	nop
  10357c:	c9                   	leave  
  10357d:	c3                   	ret    
  10357e:	8d 36                	lea    (%esi),%esi

00103580 <QisFull>:
  103580:	55                   	push   %ebp
  103581:	89 e5                	mov    %esp,%ebp
  103583:	8b 45 08             	mov    0x8(%ebp),%eax
  103586:	83 38 14             	cmpl   $0x14,(%eax)
  103589:	0f 94 c0             	sete   %al
  10358c:	0f b6 d0             	movzbl %al,%edx
  10358f:	89 d0                	mov    %edx,%eax
  103591:	eb 01                	jmp    103594 <QisFull+0x14>
  103593:	90                   	nop
  103594:	c9                   	leave  
  103595:	c3                   	ret    
  103596:	8d 36                	lea    (%esi),%esi

00103598 <DeQ>:
  103598:	55                   	push   %ebp
  103599:	89 e5                	mov    %esp,%ebp
  10359b:	83 ec 08             	sub    $0x8,%esp
  10359e:	56                   	push   %esi
  10359f:	53                   	push   %ebx
  1035a0:	8b 45 08             	mov    0x8(%ebp),%eax
  1035a3:	50                   	push   %eax
  1035a4:	e8 bf ff ff ff       	call   103568 <QisEmpty>
  1035a9:	83 c4 04             	add    $0x4,%esp
  1035ac:	89 c0                	mov    %eax,%eax
  1035ae:	85 c0                	test   %eax,%eax
  1035b0:	74 1a                	je     1035cc <DeQ+0x34>
  1035b2:	68 fe 6b 10 00       	push   $0x106bfe
  1035b7:	e8 8c 20 00 00       	call   105648 <cons_printf>
  1035bc:	83 c4 04             	add    $0x4,%esp
  1035bf:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  1035c4:	e9 83 00 00 00       	jmp    10364c <DeQ+0xb4>
  1035c9:	8d 76 00             	lea    0x0(%esi),%esi
  1035cc:	8b 45 08             	mov    0x8(%ebp),%eax
  1035cf:	8b 50 04             	mov    0x4(%eax),%edx
  1035d2:	89 55 fc             	mov    %edx,-0x4(%ebp)
  1035d5:	8b 45 08             	mov    0x8(%ebp),%eax
  1035d8:	ff 08                	decl   (%eax)
  1035da:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)
  1035e1:	8b 45 08             	mov    0x8(%ebp),%eax
  1035e4:	8b 55 f8             	mov    -0x8(%ebp),%edx
  1035e7:	39 10                	cmp    %edx,(%eax)
  1035e9:	7e 09                	jle    1035f4 <DeQ+0x5c>
  1035eb:	83 7d f8 12          	cmpl   $0x12,-0x8(%ebp)
  1035ef:	7e 07                	jle    1035f8 <DeQ+0x60>
  1035f1:	eb 01                	jmp    1035f4 <DeQ+0x5c>
  1035f3:	90                   	nop
  1035f4:	eb 2a                	jmp    103620 <DeQ+0x88>
  1035f6:	8d 36                	lea    (%esi),%esi
  1035f8:	8b 45 08             	mov    0x8(%ebp),%eax
  1035fb:	8b 55 f8             	mov    -0x8(%ebp),%edx
  1035fe:	8b 4d 08             	mov    0x8(%ebp),%ecx
  103601:	8b 5d f8             	mov    -0x8(%ebp),%ebx
  103604:	89 de                	mov    %ebx,%esi
  103606:	8d 1c b5 00 00 00 00 	lea    0x0(,%esi,4),%ebx
  10360d:	01 d9                	add    %ebx,%ecx
  10360f:	8d 59 08             	lea    0x8(%ecx),%ebx
  103612:	8b 0b                	mov    (%ebx),%ecx
  103614:	89 4c 90 04          	mov    %ecx,0x4(%eax,%edx,4)
  103618:	ff 45 f8             	incl   -0x8(%ebp)
  10361b:	eb c4                	jmp    1035e1 <DeQ+0x49>
  10361d:	8d 76 00             	lea    0x0(%esi),%esi
  103620:	8b 45 08             	mov    0x8(%ebp),%eax
  103623:	8b 10                	mov    (%eax),%edx
  103625:	89 55 f8             	mov    %edx,-0x8(%ebp)
  103628:	83 7d f8 13          	cmpl   $0x13,-0x8(%ebp)
  10362c:	7e 02                	jle    103630 <DeQ+0x98>
  10362e:	eb 14                	jmp    103644 <DeQ+0xac>
  103630:	8b 45 08             	mov    0x8(%ebp),%eax
  103633:	8b 55 f8             	mov    -0x8(%ebp),%edx
  103636:	c7 44 90 04 ff ff ff 	movl   $0xffffffff,0x4(%eax,%edx,4)
  10363d:	ff 
  10363e:	ff 45 f8             	incl   -0x8(%ebp)
  103641:	eb e5                	jmp    103628 <DeQ+0x90>
  103643:	90                   	nop
  103644:	8b 45 fc             	mov    -0x4(%ebp),%eax
  103647:	eb 03                	jmp    10364c <DeQ+0xb4>
  103649:	8d 76 00             	lea    0x0(%esi),%esi
  10364c:	8d 65 f0             	lea    -0x10(%ebp),%esp
  10364f:	5b                   	pop    %ebx
  103650:	5e                   	pop    %esi
  103651:	c9                   	leave  
  103652:	c3                   	ret    
  103653:	90                   	nop

00103654 <EnQ>:
  103654:	55                   	push   %ebp
  103655:	89 e5                	mov    %esp,%ebp
  103657:	8b 45 0c             	mov    0xc(%ebp),%eax
  10365a:	50                   	push   %eax
  10365b:	e8 20 ff ff ff       	call   103580 <QisFull>
  103660:	83 c4 04             	add    $0x4,%esp
  103663:	89 c0                	mov    %eax,%eax
  103665:	85 c0                	test   %eax,%eax
  103667:	74 0f                	je     103678 <EnQ+0x24>
  103669:	68 22 6c 10 00       	push   $0x106c22
  10366e:	e8 d5 1f 00 00       	call   105648 <cons_printf>
  103673:	83 c4 04             	add    $0x4,%esp
  103676:	eb 14                	jmp    10368c <EnQ+0x38>
  103678:	8b 45 0c             	mov    0xc(%ebp),%eax
  10367b:	8b 55 0c             	mov    0xc(%ebp),%edx
  10367e:	8b 0a                	mov    (%edx),%ecx
  103680:	8b 55 08             	mov    0x8(%ebp),%edx
  103683:	89 54 88 04          	mov    %edx,0x4(%eax,%ecx,4)
  103687:	8b 45 0c             	mov    0xc(%ebp),%eax
  10368a:	ff 00                	incl   (%eax)
  10368c:	c9                   	leave  
  10368d:	c3                   	ret    
  10368e:	8d 36                	lea    (%esi),%esi

00103690 <MemCpy>:
  103690:	55                   	push   %ebp
  103691:	89 e5                	mov    %esp,%ebp
  103693:	83 ec 04             	sub    $0x4,%esp
  103696:	90                   	nop
  103697:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
  10369e:	8b 45 fc             	mov    -0x4(%ebp),%eax
  1036a1:	39 45 10             	cmp    %eax,0x10(%ebp)
  1036a4:	7f 02                	jg     1036a8 <MemCpy+0x18>
  1036a6:	eb 18                	jmp    1036c0 <MemCpy+0x30>
  1036a8:	8b 45 08             	mov    0x8(%ebp),%eax
  1036ab:	03 45 fc             	add    -0x4(%ebp),%eax
  1036ae:	8b 55 0c             	mov    0xc(%ebp),%edx
  1036b1:	03 55 fc             	add    -0x4(%ebp),%edx
  1036b4:	8a 0a                	mov    (%edx),%cl
  1036b6:	88 08                	mov    %cl,(%eax)
  1036b8:	ff 45 fc             	incl   -0x4(%ebp)
  1036bb:	eb e1                	jmp    10369e <MemCpy+0xe>
  1036bd:	8d 76 00             	lea    0x0(%esi),%esi
  1036c0:	c9                   	leave  
  1036c1:	c3                   	ret    
  1036c2:	8d 36                	lea    (%esi),%esi

001036c4 <StrCmp>:
  1036c4:	55                   	push   %ebp
  1036c5:	89 e5                	mov    %esp,%ebp
  1036c7:	90                   	nop
  1036c8:	8b 45 08             	mov    0x8(%ebp),%eax
  1036cb:	80 38 00             	cmpb   $0x0,(%eax)
  1036ce:	74 0c                	je     1036dc <StrCmp+0x18>
  1036d0:	8b 45 0c             	mov    0xc(%ebp),%eax
  1036d3:	80 38 00             	cmpb   $0x0,(%eax)
  1036d6:	75 08                	jne    1036e0 <StrCmp+0x1c>
  1036d8:	eb 02                	jmp    1036dc <StrCmp+0x18>
  1036da:	8d 36                	lea    (%esi),%esi
  1036dc:	eb 1a                	jmp    1036f8 <StrCmp+0x34>
  1036de:	8d 36                	lea    (%esi),%esi
  1036e0:	8b 45 08             	mov    0x8(%ebp),%eax
  1036e3:	8b 55 0c             	mov    0xc(%ebp),%edx
  1036e6:	8a 00                	mov    (%eax),%al
  1036e8:	38 02                	cmp    %al,(%edx)
  1036ea:	74 04                	je     1036f0 <StrCmp+0x2c>
  1036ec:	31 c0                	xor    %eax,%eax
  1036ee:	eb 28                	jmp    103718 <StrCmp+0x54>
  1036f0:	ff 45 08             	incl   0x8(%ebp)
  1036f3:	ff 45 0c             	incl   0xc(%ebp)
  1036f6:	eb d0                	jmp    1036c8 <StrCmp+0x4>
  1036f8:	8b 45 08             	mov    0x8(%ebp),%eax
  1036fb:	80 38 00             	cmpb   $0x0,(%eax)
  1036fe:	75 0c                	jne    10370c <StrCmp+0x48>
  103700:	8b 45 0c             	mov    0xc(%ebp),%eax
  103703:	80 38 00             	cmpb   $0x0,(%eax)
  103706:	75 04                	jne    10370c <StrCmp+0x48>
  103708:	eb 06                	jmp    103710 <StrCmp+0x4c>
  10370a:	8d 36                	lea    (%esi),%esi
  10370c:	31 c0                	xor    %eax,%eax
  10370e:	eb 08                	jmp    103718 <StrCmp+0x54>
  103710:	b8 01 00 00 00       	mov    $0x1,%eax
  103715:	eb 01                	jmp    103718 <StrCmp+0x54>
  103717:	90                   	nop
  103718:	c9                   	leave  
  103719:	c3                   	ret    
  10371a:	8d 36                	lea    (%esi),%esi

0010371c <Itoa>:
  10371c:	55                   	push   %ebp
  10371d:	89 e5                	mov    %esp,%ebp
  10371f:	83 ec 14             	sub    $0x14,%esp
  103722:	56                   	push   %esi
  103723:	53                   	push   %ebx
  103724:	8b 45 0c             	mov    0xc(%ebp),%eax
  103727:	89 45 f0             	mov    %eax,-0x10(%ebp)
  10372a:	8b 55 f0             	mov    -0x10(%ebp),%edx
  10372d:	89 55 fc             	mov    %edx,-0x4(%ebp)
  103730:	c7 45 f8 a0 86 01 00 	movl   $0x186a0,-0x8(%ebp)
  103737:	81 7d 0c a0 86 01 00 	cmpl   $0x186a0,0xc(%ebp)
  10373e:	7e 08                	jle    103748 <Itoa+0x2c>
  103740:	e9 c8 00 00 00       	jmp    10380d <Itoa+0xf1>
  103745:	8d 76 00             	lea    0x0(%esi),%esi
  103748:	8b 4d fc             	mov    -0x4(%ebp),%ecx
  10374b:	89 c8                	mov    %ecx,%eax
  10374d:	99                   	cltd   
  10374e:	f7 7d f8             	idivl  -0x8(%ebp)
  103751:	89 55 ec             	mov    %edx,-0x14(%ebp)
  103754:	89 45 f0             	mov    %eax,-0x10(%ebp)
  103757:	83 7d f0 00          	cmpl   $0x0,-0x10(%ebp)
  10375b:	74 03                	je     103760 <Itoa+0x44>
  10375d:	eb 29                	jmp    103788 <Itoa+0x6c>
  10375f:	90                   	nop
  103760:	8b 4d f8             	mov    -0x8(%ebp),%ecx
  103763:	89 c8                	mov    %ecx,%eax
  103765:	be 0a 00 00 00       	mov    $0xa,%esi
  10376a:	99                   	cltd   
  10376b:	f7 fe                	idiv   %esi
  10376d:	89 55 ec             	mov    %edx,-0x14(%ebp)
  103770:	89 45 f0             	mov    %eax,-0x10(%ebp)
  103773:	8b 45 f0             	mov    -0x10(%ebp),%eax
  103776:	89 45 f8             	mov    %eax,-0x8(%ebp)
  103779:	8b 55 0c             	mov    0xc(%ebp),%edx
  10377c:	89 55 f0             	mov    %edx,-0x10(%ebp)
  10377f:	8b 75 f0             	mov    -0x10(%ebp),%esi
  103782:	89 75 fc             	mov    %esi,-0x4(%ebp)
  103785:	eb c1                	jmp    103748 <Itoa+0x2c>
  103787:	90                   	nop
  103788:	8b 45 f8             	mov    -0x8(%ebp),%eax
  10378b:	89 45 f0             	mov    %eax,-0x10(%ebp)
  10378e:	8b 55 f0             	mov    -0x10(%ebp),%edx
  103791:	89 55 f4             	mov    %edx,-0xc(%ebp)
  103794:	83 7d f4 09          	cmpl   $0x9,-0xc(%ebp)
  103798:	7f 02                	jg     10379c <Itoa+0x80>
  10379a:	eb 50                	jmp    1037ec <Itoa+0xd0>
  10379c:	8b 75 08             	mov    0x8(%ebp),%esi
  10379f:	89 75 f0             	mov    %esi,-0x10(%ebp)
  1037a2:	8b 5d 0c             	mov    0xc(%ebp),%ebx
  1037a5:	89 d8                	mov    %ebx,%eax
  1037a7:	99                   	cltd   
  1037a8:	f7 7d f4             	idivl  -0xc(%ebp)
  1037ab:	89 55 ec             	mov    %edx,-0x14(%ebp)
  1037ae:	89 c1                	mov    %eax,%ecx
  1037b0:	88 c8                	mov    %cl,%al
  1037b2:	04 30                	add    $0x30,%al
  1037b4:	8b 55 f0             	mov    -0x10(%ebp),%edx
  1037b7:	88 02                	mov    %al,(%edx)
  1037b9:	ff 45 08             	incl   0x8(%ebp)
  1037bc:	8b 4d 0c             	mov    0xc(%ebp),%ecx
  1037bf:	89 c8                	mov    %ecx,%eax
  1037c1:	99                   	cltd   
  1037c2:	f7 7d f4             	idivl  -0xc(%ebp)
  1037c5:	89 55 ec             	mov    %edx,-0x14(%ebp)
  1037c8:	89 45 f0             	mov    %eax,-0x10(%ebp)
  1037cb:	8b 75 f0             	mov    -0x10(%ebp),%esi
  1037ce:	89 75 0c             	mov    %esi,0xc(%ebp)
  1037d1:	8b 4d f4             	mov    -0xc(%ebp),%ecx
  1037d4:	89 c8                	mov    %ecx,%eax
  1037d6:	be 0a 00 00 00       	mov    $0xa,%esi
  1037db:	99                   	cltd   
  1037dc:	f7 fe                	idiv   %esi
  1037de:	89 55 ec             	mov    %edx,-0x14(%ebp)
  1037e1:	89 45 f0             	mov    %eax,-0x10(%ebp)
  1037e4:	8b 45 f0             	mov    -0x10(%ebp),%eax
  1037e7:	89 45 f4             	mov    %eax,-0xc(%ebp)
  1037ea:	eb a8                	jmp    103794 <Itoa+0x78>
  1037ec:	8b 55 08             	mov    0x8(%ebp),%edx
  1037ef:	89 55 f0             	mov    %edx,-0x10(%ebp)
  1037f2:	8b 5d 0c             	mov    0xc(%ebp),%ebx
  1037f5:	89 d8                	mov    %ebx,%eax
  1037f7:	be 0a 00 00 00       	mov    $0xa,%esi
  1037fc:	99                   	cltd   
  1037fd:	f7 fe                	idiv   %esi
  1037ff:	89 d1                	mov    %edx,%ecx
  103801:	89 45 ec             	mov    %eax,-0x14(%ebp)
  103804:	88 c8                	mov    %cl,%al
  103806:	04 30                	add    $0x30,%al
  103808:	8b 55 f0             	mov    -0x10(%ebp),%edx
  10380b:	88 02                	mov    %al,(%edx)
  10380d:	8d 65 e4             	lea    -0x1c(%ebp),%esp
  103810:	5b                   	pop    %ebx
  103811:	5e                   	pop    %esi
  103812:	c9                   	leave  
  103813:	c3                   	ret    

00103814 <_return_to_prog>:
  103814:	66                   	data16
  103815:	8e 15 a0 3d 12 00    	mov    0x123da0,%ss
  10381b:	8b 25 84 3d 12 00    	mov    0x123d84,%esp
  103821:	8b 0d 78 3d 12 00    	mov    0x123d78,%ecx
  103827:	8b 15 7c 3d 12 00    	mov    0x123d7c,%edx
  10382d:	8b 1d 80 3d 12 00    	mov    0x123d80,%ebx
  103833:	8b 2d 88 3d 12 00    	mov    0x123d88,%ebp
  103839:	8b 35 8c 3d 12 00    	mov    0x123d8c,%esi
  10383f:	8b 3d 90 3d 12 00    	mov    0x123d90,%edi
  103845:	66                   	data16
  103846:	8e 1d a4 3d 12 00    	mov    0x123da4,%ds
  10384c:	66                   	data16
  10384d:	8e 05 a8 3d 12 00    	mov    0x123da8,%es
  103853:	66                   	data16
  103854:	8e 25 ac 3d 12 00    	mov    0x123dac,%fs
  10385a:	66                   	data16
  10385b:	8e 2d b0 3d 12 00    	mov    0x123db0,%gs
  103861:	a1 98 3d 12 00       	mov    0x123d98,%eax
  103866:	50                   	push   %eax
  103867:	a1 9c 3d 12 00       	mov    0x123d9c,%eax
  10386c:	50                   	push   %eax
  10386d:	a1 94 3d 12 00       	mov    0x123d94,%eax
  103872:	50                   	push   %eax
  103873:	a1 74 3d 12 00       	mov    0x123d74,%eax
  103878:	cf                   	iret   
  103879:	8d 76 00             	lea    0x0(%esi),%esi

0010387c <gdb_i386vector>:
  10387c:	ff ff ff ff                                         ....

00103880 <mem_fault>:
  103880:	58                   	pop    %eax
  103881:	a3 4c 3f 12 00       	mov    %eax,0x123f4c
  103886:	58                   	pop    %eax
  103887:	a1 88 71 10 00       	mov    0x107188,%eax
  10388c:	59                   	pop    %ecx
  10388d:	5a                   	pop    %edx
  10388e:	c9                   	leave  
  10388f:	52                   	push   %edx
  103890:	51                   	push   %ecx
  103891:	50                   	push   %eax
  103892:	b8 00 00 00 00       	mov    $0x0,%eax
  103897:	a3 88 71 10 00       	mov    %eax,0x107188
  10389c:	cf                   	iret   

0010389d <_catchException3>:
  10389d:	a3 74 3d 12 00       	mov    %eax,0x123d74
  1038a2:	89 0d 78 3d 12 00    	mov    %ecx,0x123d78
  1038a8:	89 15 7c 3d 12 00    	mov    %edx,0x123d7c
  1038ae:	89 1d 80 3d 12 00    	mov    %ebx,0x123d80
  1038b4:	89 2d 88 3d 12 00    	mov    %ebp,0x123d88
  1038ba:	89 35 8c 3d 12 00    	mov    %esi,0x123d8c
  1038c0:	89 3d 90 3d 12 00    	mov    %edi,0x123d90
  1038c6:	66 b8 00 00          	mov    $0x0,%ax
  1038ca:	66                   	data16
  1038cb:	8c 1d a4 3d 12 00    	mov    %ds,0x123da4
  1038d1:	66 a3 a6 3d 12 00    	mov    %ax,0x123da6
  1038d7:	66                   	data16
  1038d8:	8c 05 a8 3d 12 00    	mov    %es,0x123da8
  1038de:	66 a3 aa 3d 12 00    	mov    %ax,0x123daa
  1038e4:	66                   	data16
  1038e5:	8c 25 ac 3d 12 00    	mov    %fs,0x123dac
  1038eb:	66 a3 ae 3d 12 00    	mov    %ax,0x123dae
  1038f1:	66                   	data16
  1038f2:	8c 2d b0 3d 12 00    	mov    %gs,0x123db0
  1038f8:	66 a3 b2 3d 12 00    	mov    %ax,0x123db2
  1038fe:	5b                   	pop    %ebx
  1038ff:	89 1d 94 3d 12 00    	mov    %ebx,0x123d94
  103905:	5b                   	pop    %ebx
  103906:	89 1d 9c 3d 12 00    	mov    %ebx,0x123d9c
  10390c:	66 a3 9e 3d 12 00    	mov    %ax,0x123d9e
  103912:	5b                   	pop    %ebx
  103913:	89 1d 98 3d 12 00    	mov    %ebx,0x123d98
  103919:	66                   	data16
  10391a:	8c 15 a0 3d 12 00    	mov    %ss,0x123da0
  103920:	66 a3 a2 3d 12 00    	mov    %ax,0x123da2
  103926:	89 25 84 3d 12 00    	mov    %esp,0x123d84
  10392c:	6a 03                	push   $0x3
  10392e:	e8 85 08 00 00       	call   1041b8 <_remcomHandler>

00103933 <_catchException1>:
  103933:	a3 74 3d 12 00       	mov    %eax,0x123d74
  103938:	89 0d 78 3d 12 00    	mov    %ecx,0x123d78
  10393e:	89 15 7c 3d 12 00    	mov    %edx,0x123d7c
  103944:	89 1d 80 3d 12 00    	mov    %ebx,0x123d80
  10394a:	89 2d 88 3d 12 00    	mov    %ebp,0x123d88
  103950:	89 35 8c 3d 12 00    	mov    %esi,0x123d8c
  103956:	89 3d 90 3d 12 00    	mov    %edi,0x123d90
  10395c:	66 b8 00 00          	mov    $0x0,%ax
  103960:	66                   	data16
  103961:	8c 1d a4 3d 12 00    	mov    %ds,0x123da4
  103967:	66 a3 a6 3d 12 00    	mov    %ax,0x123da6
  10396d:	66                   	data16
  10396e:	8c 05 a8 3d 12 00    	mov    %es,0x123da8
  103974:	66 a3 aa 3d 12 00    	mov    %ax,0x123daa
  10397a:	66                   	data16
  10397b:	8c 25 ac 3d 12 00    	mov    %fs,0x123dac
  103981:	66 a3 ae 3d 12 00    	mov    %ax,0x123dae
  103987:	66                   	data16
  103988:	8c 2d b0 3d 12 00    	mov    %gs,0x123db0
  10398e:	66 a3 b2 3d 12 00    	mov    %ax,0x123db2
  103994:	5b                   	pop    %ebx
  103995:	89 1d 94 3d 12 00    	mov    %ebx,0x123d94
  10399b:	5b                   	pop    %ebx
  10399c:	89 1d 9c 3d 12 00    	mov    %ebx,0x123d9c
  1039a2:	66 a3 9e 3d 12 00    	mov    %ax,0x123d9e
  1039a8:	5b                   	pop    %ebx
  1039a9:	89 1d 98 3d 12 00    	mov    %ebx,0x123d98
  1039af:	66                   	data16
  1039b0:	8c 15 a0 3d 12 00    	mov    %ss,0x123da0
  1039b6:	66 a3 a2 3d 12 00    	mov    %ax,0x123da2
  1039bc:	89 25 84 3d 12 00    	mov    %esp,0x123d84
  1039c2:	6a 01                	push   $0x1
  1039c4:	e8 ef 07 00 00       	call   1041b8 <_remcomHandler>

001039c9 <_catchException0>:
  1039c9:	a3 74 3d 12 00       	mov    %eax,0x123d74
  1039ce:	89 0d 78 3d 12 00    	mov    %ecx,0x123d78
  1039d4:	89 15 7c 3d 12 00    	mov    %edx,0x123d7c
  1039da:	89 1d 80 3d 12 00    	mov    %ebx,0x123d80
  1039e0:	89 2d 88 3d 12 00    	mov    %ebp,0x123d88
  1039e6:	89 35 8c 3d 12 00    	mov    %esi,0x123d8c
  1039ec:	89 3d 90 3d 12 00    	mov    %edi,0x123d90
  1039f2:	66 b8 00 00          	mov    $0x0,%ax
  1039f6:	66                   	data16
  1039f7:	8c 1d a4 3d 12 00    	mov    %ds,0x123da4
  1039fd:	66 a3 a6 3d 12 00    	mov    %ax,0x123da6
  103a03:	66                   	data16
  103a04:	8c 05 a8 3d 12 00    	mov    %es,0x123da8
  103a0a:	66 a3 aa 3d 12 00    	mov    %ax,0x123daa
  103a10:	66                   	data16
  103a11:	8c 25 ac 3d 12 00    	mov    %fs,0x123dac
  103a17:	66 a3 ae 3d 12 00    	mov    %ax,0x123dae
  103a1d:	66                   	data16
  103a1e:	8c 2d b0 3d 12 00    	mov    %gs,0x123db0
  103a24:	66 a3 b2 3d 12 00    	mov    %ax,0x123db2
  103a2a:	5b                   	pop    %ebx
  103a2b:	89 1d 94 3d 12 00    	mov    %ebx,0x123d94
  103a31:	5b                   	pop    %ebx
  103a32:	89 1d 9c 3d 12 00    	mov    %ebx,0x123d9c
  103a38:	66 a3 9e 3d 12 00    	mov    %ax,0x123d9e
  103a3e:	5b                   	pop    %ebx
  103a3f:	89 1d 98 3d 12 00    	mov    %ebx,0x123d98
  103a45:	66                   	data16
  103a46:	8c 15 a0 3d 12 00    	mov    %ss,0x123da0
  103a4c:	66 a3 a2 3d 12 00    	mov    %ax,0x123da2
  103a52:	89 25 84 3d 12 00    	mov    %esp,0x123d84
  103a58:	6a 00                	push   $0x0
  103a5a:	e8 59 07 00 00       	call   1041b8 <_remcomHandler>

00103a5f <_catchException4>:
  103a5f:	a3 74 3d 12 00       	mov    %eax,0x123d74
  103a64:	89 0d 78 3d 12 00    	mov    %ecx,0x123d78
  103a6a:	89 15 7c 3d 12 00    	mov    %edx,0x123d7c
  103a70:	89 1d 80 3d 12 00    	mov    %ebx,0x123d80
  103a76:	89 2d 88 3d 12 00    	mov    %ebp,0x123d88
  103a7c:	89 35 8c 3d 12 00    	mov    %esi,0x123d8c
  103a82:	89 3d 90 3d 12 00    	mov    %edi,0x123d90
  103a88:	66 b8 00 00          	mov    $0x0,%ax
  103a8c:	66                   	data16
  103a8d:	8c 1d a4 3d 12 00    	mov    %ds,0x123da4
  103a93:	66 a3 a6 3d 12 00    	mov    %ax,0x123da6
  103a99:	66                   	data16
  103a9a:	8c 05 a8 3d 12 00    	mov    %es,0x123da8
  103aa0:	66 a3 aa 3d 12 00    	mov    %ax,0x123daa
  103aa6:	66                   	data16
  103aa7:	8c 25 ac 3d 12 00    	mov    %fs,0x123dac
  103aad:	66 a3 ae 3d 12 00    	mov    %ax,0x123dae
  103ab3:	66                   	data16
  103ab4:	8c 2d b0 3d 12 00    	mov    %gs,0x123db0
  103aba:	66 a3 b2 3d 12 00    	mov    %ax,0x123db2
  103ac0:	5b                   	pop    %ebx
  103ac1:	89 1d 94 3d 12 00    	mov    %ebx,0x123d94
  103ac7:	5b                   	pop    %ebx
  103ac8:	89 1d 9c 3d 12 00    	mov    %ebx,0x123d9c
  103ace:	66 a3 9e 3d 12 00    	mov    %ax,0x123d9e
  103ad4:	5b                   	pop    %ebx
  103ad5:	89 1d 98 3d 12 00    	mov    %ebx,0x123d98
  103adb:	66                   	data16
  103adc:	8c 15 a0 3d 12 00    	mov    %ss,0x123da0
  103ae2:	66 a3 a2 3d 12 00    	mov    %ax,0x123da2
  103ae8:	89 25 84 3d 12 00    	mov    %esp,0x123d84
  103aee:	6a 04                	push   $0x4
  103af0:	e8 c3 06 00 00       	call   1041b8 <_remcomHandler>

00103af5 <_catchException5>:
  103af5:	a3 74 3d 12 00       	mov    %eax,0x123d74
  103afa:	89 0d 78 3d 12 00    	mov    %ecx,0x123d78
  103b00:	89 15 7c 3d 12 00    	mov    %edx,0x123d7c
  103b06:	89 1d 80 3d 12 00    	mov    %ebx,0x123d80
  103b0c:	89 2d 88 3d 12 00    	mov    %ebp,0x123d88
  103b12:	89 35 8c 3d 12 00    	mov    %esi,0x123d8c
  103b18:	89 3d 90 3d 12 00    	mov    %edi,0x123d90
  103b1e:	66 b8 00 00          	mov    $0x0,%ax
  103b22:	66                   	data16
  103b23:	8c 1d a4 3d 12 00    	mov    %ds,0x123da4
  103b29:	66 a3 a6 3d 12 00    	mov    %ax,0x123da6
  103b2f:	66                   	data16
  103b30:	8c 05 a8 3d 12 00    	mov    %es,0x123da8
  103b36:	66 a3 aa 3d 12 00    	mov    %ax,0x123daa
  103b3c:	66                   	data16
  103b3d:	8c 25 ac 3d 12 00    	mov    %fs,0x123dac
  103b43:	66 a3 ae 3d 12 00    	mov    %ax,0x123dae
  103b49:	66                   	data16
  103b4a:	8c 2d b0 3d 12 00    	mov    %gs,0x123db0
  103b50:	66 a3 b2 3d 12 00    	mov    %ax,0x123db2
  103b56:	5b                   	pop    %ebx
  103b57:	89 1d 94 3d 12 00    	mov    %ebx,0x123d94
  103b5d:	5b                   	pop    %ebx
  103b5e:	89 1d 9c 3d 12 00    	mov    %ebx,0x123d9c
  103b64:	66 a3 9e 3d 12 00    	mov    %ax,0x123d9e
  103b6a:	5b                   	pop    %ebx
  103b6b:	89 1d 98 3d 12 00    	mov    %ebx,0x123d98
  103b71:	66                   	data16
  103b72:	8c 15 a0 3d 12 00    	mov    %ss,0x123da0
  103b78:	66 a3 a2 3d 12 00    	mov    %ax,0x123da2
  103b7e:	89 25 84 3d 12 00    	mov    %esp,0x123d84
  103b84:	6a 05                	push   $0x5
  103b86:	e8 2d 06 00 00       	call   1041b8 <_remcomHandler>

00103b8b <_catchException6>:
  103b8b:	a3 74 3d 12 00       	mov    %eax,0x123d74
  103b90:	89 0d 78 3d 12 00    	mov    %ecx,0x123d78
  103b96:	89 15 7c 3d 12 00    	mov    %edx,0x123d7c
  103b9c:	89 1d 80 3d 12 00    	mov    %ebx,0x123d80
  103ba2:	89 2d 88 3d 12 00    	mov    %ebp,0x123d88
  103ba8:	89 35 8c 3d 12 00    	mov    %esi,0x123d8c
  103bae:	89 3d 90 3d 12 00    	mov    %edi,0x123d90
  103bb4:	66 b8 00 00          	mov    $0x0,%ax
  103bb8:	66                   	data16
  103bb9:	8c 1d a4 3d 12 00    	mov    %ds,0x123da4
  103bbf:	66 a3 a6 3d 12 00    	mov    %ax,0x123da6
  103bc5:	66                   	data16
  103bc6:	8c 05 a8 3d 12 00    	mov    %es,0x123da8
  103bcc:	66 a3 aa 3d 12 00    	mov    %ax,0x123daa
  103bd2:	66                   	data16
  103bd3:	8c 25 ac 3d 12 00    	mov    %fs,0x123dac
  103bd9:	66 a3 ae 3d 12 00    	mov    %ax,0x123dae
  103bdf:	66                   	data16
  103be0:	8c 2d b0 3d 12 00    	mov    %gs,0x123db0
  103be6:	66 a3 b2 3d 12 00    	mov    %ax,0x123db2
  103bec:	5b                   	pop    %ebx
  103bed:	89 1d 94 3d 12 00    	mov    %ebx,0x123d94
  103bf3:	5b                   	pop    %ebx
  103bf4:	89 1d 9c 3d 12 00    	mov    %ebx,0x123d9c
  103bfa:	66 a3 9e 3d 12 00    	mov    %ax,0x123d9e
  103c00:	5b                   	pop    %ebx
  103c01:	89 1d 98 3d 12 00    	mov    %ebx,0x123d98
  103c07:	66                   	data16
  103c08:	8c 15 a0 3d 12 00    	mov    %ss,0x123da0
  103c0e:	66 a3 a2 3d 12 00    	mov    %ax,0x123da2
  103c14:	89 25 84 3d 12 00    	mov    %esp,0x123d84
  103c1a:	6a 06                	push   $0x6
  103c1c:	e8 97 05 00 00       	call   1041b8 <_remcomHandler>

00103c21 <_catchException7>:
  103c21:	a3 74 3d 12 00       	mov    %eax,0x123d74
  103c26:	89 0d 78 3d 12 00    	mov    %ecx,0x123d78
  103c2c:	89 15 7c 3d 12 00    	mov    %edx,0x123d7c
  103c32:	89 1d 80 3d 12 00    	mov    %ebx,0x123d80
  103c38:	89 2d 88 3d 12 00    	mov    %ebp,0x123d88
  103c3e:	89 35 8c 3d 12 00    	mov    %esi,0x123d8c
  103c44:	89 3d 90 3d 12 00    	mov    %edi,0x123d90
  103c4a:	66 b8 00 00          	mov    $0x0,%ax
  103c4e:	66                   	data16
  103c4f:	8c 1d a4 3d 12 00    	mov    %ds,0x123da4
  103c55:	66 a3 a6 3d 12 00    	mov    %ax,0x123da6
  103c5b:	66                   	data16
  103c5c:	8c 05 a8 3d 12 00    	mov    %es,0x123da8
  103c62:	66 a3 aa 3d 12 00    	mov    %ax,0x123daa
  103c68:	66                   	data16
  103c69:	8c 25 ac 3d 12 00    	mov    %fs,0x123dac
  103c6f:	66 a3 ae 3d 12 00    	mov    %ax,0x123dae
  103c75:	66                   	data16
  103c76:	8c 2d b0 3d 12 00    	mov    %gs,0x123db0
  103c7c:	66 a3 b2 3d 12 00    	mov    %ax,0x123db2
  103c82:	5b                   	pop    %ebx
  103c83:	89 1d 94 3d 12 00    	mov    %ebx,0x123d94
  103c89:	5b                   	pop    %ebx
  103c8a:	89 1d 9c 3d 12 00    	mov    %ebx,0x123d9c
  103c90:	66 a3 9e 3d 12 00    	mov    %ax,0x123d9e
  103c96:	5b                   	pop    %ebx
  103c97:	89 1d 98 3d 12 00    	mov    %ebx,0x123d98
  103c9d:	66                   	data16
  103c9e:	8c 15 a0 3d 12 00    	mov    %ss,0x123da0
  103ca4:	66 a3 a2 3d 12 00    	mov    %ax,0x123da2
  103caa:	89 25 84 3d 12 00    	mov    %esp,0x123d84
  103cb0:	6a 07                	push   $0x7
  103cb2:	e8 01 05 00 00       	call   1041b8 <_remcomHandler>

00103cb7 <_catchException8>:
  103cb7:	a3 74 3d 12 00       	mov    %eax,0x123d74
  103cbc:	89 0d 78 3d 12 00    	mov    %ecx,0x123d78
  103cc2:	89 15 7c 3d 12 00    	mov    %edx,0x123d7c
  103cc8:	89 1d 80 3d 12 00    	mov    %ebx,0x123d80
  103cce:	89 2d 88 3d 12 00    	mov    %ebp,0x123d88
  103cd4:	89 35 8c 3d 12 00    	mov    %esi,0x123d8c
  103cda:	89 3d 90 3d 12 00    	mov    %edi,0x123d90
  103ce0:	66 b8 00 00          	mov    $0x0,%ax
  103ce4:	66                   	data16
  103ce5:	8c 1d a4 3d 12 00    	mov    %ds,0x123da4
  103ceb:	66 a3 a6 3d 12 00    	mov    %ax,0x123da6
  103cf1:	66                   	data16
  103cf2:	8c 05 a8 3d 12 00    	mov    %es,0x123da8
  103cf8:	66 a3 aa 3d 12 00    	mov    %ax,0x123daa
  103cfe:	66                   	data16
  103cff:	8c 25 ac 3d 12 00    	mov    %fs,0x123dac
  103d05:	66 a3 ae 3d 12 00    	mov    %ax,0x123dae
  103d0b:	66                   	data16
  103d0c:	8c 2d b0 3d 12 00    	mov    %gs,0x123db0
  103d12:	66 a3 b2 3d 12 00    	mov    %ax,0x123db2
  103d18:	5b                   	pop    %ebx
  103d19:	89 1d 4c 3f 12 00    	mov    %ebx,0x123f4c
  103d1f:	5b                   	pop    %ebx
  103d20:	89 1d 94 3d 12 00    	mov    %ebx,0x123d94
  103d26:	5b                   	pop    %ebx
  103d27:	89 1d 9c 3d 12 00    	mov    %ebx,0x123d9c
  103d2d:	66 a3 9e 3d 12 00    	mov    %ax,0x123d9e
  103d33:	5b                   	pop    %ebx
  103d34:	89 1d 98 3d 12 00    	mov    %ebx,0x123d98
  103d3a:	66                   	data16
  103d3b:	8c 15 a0 3d 12 00    	mov    %ss,0x123da0
  103d41:	66 a3 a2 3d 12 00    	mov    %ax,0x123da2
  103d47:	89 25 84 3d 12 00    	mov    %esp,0x123d84
  103d4d:	6a 08                	push   $0x8
  103d4f:	e8 64 04 00 00       	call   1041b8 <_remcomHandler>

00103d54 <_catchException9>:
  103d54:	a3 74 3d 12 00       	mov    %eax,0x123d74
  103d59:	89 0d 78 3d 12 00    	mov    %ecx,0x123d78
  103d5f:	89 15 7c 3d 12 00    	mov    %edx,0x123d7c
  103d65:	89 1d 80 3d 12 00    	mov    %ebx,0x123d80
  103d6b:	89 2d 88 3d 12 00    	mov    %ebp,0x123d88
  103d71:	89 35 8c 3d 12 00    	mov    %esi,0x123d8c
  103d77:	89 3d 90 3d 12 00    	mov    %edi,0x123d90
  103d7d:	66 b8 00 00          	mov    $0x0,%ax
  103d81:	66                   	data16
  103d82:	8c 1d a4 3d 12 00    	mov    %ds,0x123da4
  103d88:	66 a3 a6 3d 12 00    	mov    %ax,0x123da6
  103d8e:	66                   	data16
  103d8f:	8c 05 a8 3d 12 00    	mov    %es,0x123da8
  103d95:	66 a3 aa 3d 12 00    	mov    %ax,0x123daa
  103d9b:	66                   	data16
  103d9c:	8c 25 ac 3d 12 00    	mov    %fs,0x123dac
  103da2:	66 a3 ae 3d 12 00    	mov    %ax,0x123dae
  103da8:	66                   	data16
  103da9:	8c 2d b0 3d 12 00    	mov    %gs,0x123db0
  103daf:	66 a3 b2 3d 12 00    	mov    %ax,0x123db2
  103db5:	5b                   	pop    %ebx
  103db6:	89 1d 94 3d 12 00    	mov    %ebx,0x123d94
  103dbc:	5b                   	pop    %ebx
  103dbd:	89 1d 9c 3d 12 00    	mov    %ebx,0x123d9c
  103dc3:	66 a3 9e 3d 12 00    	mov    %ax,0x123d9e
  103dc9:	5b                   	pop    %ebx
  103dca:	89 1d 98 3d 12 00    	mov    %ebx,0x123d98
  103dd0:	66                   	data16
  103dd1:	8c 15 a0 3d 12 00    	mov    %ss,0x123da0
  103dd7:	66 a3 a2 3d 12 00    	mov    %ax,0x123da2
  103ddd:	89 25 84 3d 12 00    	mov    %esp,0x123d84
  103de3:	6a 09                	push   $0x9
  103de5:	e8 ce 03 00 00       	call   1041b8 <_remcomHandler>

00103dea <_catchException10>:
  103dea:	a3 74 3d 12 00       	mov    %eax,0x123d74
  103def:	89 0d 78 3d 12 00    	mov    %ecx,0x123d78
  103df5:	89 15 7c 3d 12 00    	mov    %edx,0x123d7c
  103dfb:	89 1d 80 3d 12 00    	mov    %ebx,0x123d80
  103e01:	89 2d 88 3d 12 00    	mov    %ebp,0x123d88
  103e07:	89 35 8c 3d 12 00    	mov    %esi,0x123d8c
  103e0d:	89 3d 90 3d 12 00    	mov    %edi,0x123d90
  103e13:	66 b8 00 00          	mov    $0x0,%ax
  103e17:	66                   	data16
  103e18:	8c 1d a4 3d 12 00    	mov    %ds,0x123da4
  103e1e:	66 a3 a6 3d 12 00    	mov    %ax,0x123da6
  103e24:	66                   	data16
  103e25:	8c 05 a8 3d 12 00    	mov    %es,0x123da8
  103e2b:	66 a3 aa 3d 12 00    	mov    %ax,0x123daa
  103e31:	66                   	data16
  103e32:	8c 25 ac 3d 12 00    	mov    %fs,0x123dac
  103e38:	66 a3 ae 3d 12 00    	mov    %ax,0x123dae
  103e3e:	66                   	data16
  103e3f:	8c 2d b0 3d 12 00    	mov    %gs,0x123db0
  103e45:	66 a3 b2 3d 12 00    	mov    %ax,0x123db2
  103e4b:	5b                   	pop    %ebx
  103e4c:	89 1d 4c 3f 12 00    	mov    %ebx,0x123f4c
  103e52:	5b                   	pop    %ebx
  103e53:	89 1d 94 3d 12 00    	mov    %ebx,0x123d94
  103e59:	5b                   	pop    %ebx
  103e5a:	89 1d 9c 3d 12 00    	mov    %ebx,0x123d9c
  103e60:	66 a3 9e 3d 12 00    	mov    %ax,0x123d9e
  103e66:	5b                   	pop    %ebx
  103e67:	89 1d 98 3d 12 00    	mov    %ebx,0x123d98
  103e6d:	66                   	data16
  103e6e:	8c 15 a0 3d 12 00    	mov    %ss,0x123da0
  103e74:	66 a3 a2 3d 12 00    	mov    %ax,0x123da2
  103e7a:	89 25 84 3d 12 00    	mov    %esp,0x123d84
  103e80:	6a 0a                	push   $0xa
  103e82:	e8 31 03 00 00       	call   1041b8 <_remcomHandler>

00103e87 <_catchException12>:
  103e87:	a3 74 3d 12 00       	mov    %eax,0x123d74
  103e8c:	89 0d 78 3d 12 00    	mov    %ecx,0x123d78
  103e92:	89 15 7c 3d 12 00    	mov    %edx,0x123d7c
  103e98:	89 1d 80 3d 12 00    	mov    %ebx,0x123d80
  103e9e:	89 2d 88 3d 12 00    	mov    %ebp,0x123d88
  103ea4:	89 35 8c 3d 12 00    	mov    %esi,0x123d8c
  103eaa:	89 3d 90 3d 12 00    	mov    %edi,0x123d90
  103eb0:	66 b8 00 00          	mov    $0x0,%ax
  103eb4:	66                   	data16
  103eb5:	8c 1d a4 3d 12 00    	mov    %ds,0x123da4
  103ebb:	66 a3 a6 3d 12 00    	mov    %ax,0x123da6
  103ec1:	66                   	data16
  103ec2:	8c 05 a8 3d 12 00    	mov    %es,0x123da8
  103ec8:	66 a3 aa 3d 12 00    	mov    %ax,0x123daa
  103ece:	66                   	data16
  103ecf:	8c 25 ac 3d 12 00    	mov    %fs,0x123dac
  103ed5:	66 a3 ae 3d 12 00    	mov    %ax,0x123dae
  103edb:	66                   	data16
  103edc:	8c 2d b0 3d 12 00    	mov    %gs,0x123db0
  103ee2:	66 a3 b2 3d 12 00    	mov    %ax,0x123db2
  103ee8:	5b                   	pop    %ebx
  103ee9:	89 1d 4c 3f 12 00    	mov    %ebx,0x123f4c
  103eef:	5b                   	pop    %ebx
  103ef0:	89 1d 94 3d 12 00    	mov    %ebx,0x123d94
  103ef6:	5b                   	pop    %ebx
  103ef7:	89 1d 9c 3d 12 00    	mov    %ebx,0x123d9c
  103efd:	66 a3 9e 3d 12 00    	mov    %ax,0x123d9e
  103f03:	5b                   	pop    %ebx
  103f04:	89 1d 98 3d 12 00    	mov    %ebx,0x123d98
  103f0a:	66                   	data16
  103f0b:	8c 15 a0 3d 12 00    	mov    %ss,0x123da0
  103f11:	66 a3 a2 3d 12 00    	mov    %ax,0x123da2
  103f17:	89 25 84 3d 12 00    	mov    %esp,0x123d84
  103f1d:	6a 0c                	push   $0xc
  103f1f:	e8 94 02 00 00       	call   1041b8 <_remcomHandler>

00103f24 <_catchException16>:
  103f24:	a3 74 3d 12 00       	mov    %eax,0x123d74
  103f29:	89 0d 78 3d 12 00    	mov    %ecx,0x123d78
  103f2f:	89 15 7c 3d 12 00    	mov    %edx,0x123d7c
  103f35:	89 1d 80 3d 12 00    	mov    %ebx,0x123d80
  103f3b:	89 2d 88 3d 12 00    	mov    %ebp,0x123d88
  103f41:	89 35 8c 3d 12 00    	mov    %esi,0x123d8c
  103f47:	89 3d 90 3d 12 00    	mov    %edi,0x123d90
  103f4d:	66 b8 00 00          	mov    $0x0,%ax
  103f51:	66                   	data16
  103f52:	8c 1d a4 3d 12 00    	mov    %ds,0x123da4
  103f58:	66 a3 a6 3d 12 00    	mov    %ax,0x123da6
  103f5e:	66                   	data16
  103f5f:	8c 05 a8 3d 12 00    	mov    %es,0x123da8
  103f65:	66 a3 aa 3d 12 00    	mov    %ax,0x123daa
  103f6b:	66                   	data16
  103f6c:	8c 25 ac 3d 12 00    	mov    %fs,0x123dac
  103f72:	66 a3 ae 3d 12 00    	mov    %ax,0x123dae
  103f78:	66                   	data16
  103f79:	8c 2d b0 3d 12 00    	mov    %gs,0x123db0
  103f7f:	66 a3 b2 3d 12 00    	mov    %ax,0x123db2
  103f85:	5b                   	pop    %ebx
  103f86:	89 1d 94 3d 12 00    	mov    %ebx,0x123d94
  103f8c:	5b                   	pop    %ebx
  103f8d:	89 1d 9c 3d 12 00    	mov    %ebx,0x123d9c
  103f93:	66 a3 9e 3d 12 00    	mov    %ax,0x123d9e
  103f99:	5b                   	pop    %ebx
  103f9a:	89 1d 98 3d 12 00    	mov    %ebx,0x123d98
  103fa0:	66                   	data16
  103fa1:	8c 15 a0 3d 12 00    	mov    %ss,0x123da0
  103fa7:	66 a3 a2 3d 12 00    	mov    %ax,0x123da2
  103fad:	89 25 84 3d 12 00    	mov    %esp,0x123d84
  103fb3:	6a 10                	push   $0x10
  103fb5:	e8 fe 01 00 00       	call   1041b8 <_remcomHandler>

00103fba <_catchException13>:
  103fba:	83 3d 88 71 10 00 00 	cmpl   $0x0,0x107188
  103fc1:	0f 85 b9 f8 ff ff    	jne    103880 <mem_fault>
  103fc7:	a3 74 3d 12 00       	mov    %eax,0x123d74
  103fcc:	89 0d 78 3d 12 00    	mov    %ecx,0x123d78
  103fd2:	89 15 7c 3d 12 00    	mov    %edx,0x123d7c
  103fd8:	89 1d 80 3d 12 00    	mov    %ebx,0x123d80
  103fde:	89 2d 88 3d 12 00    	mov    %ebp,0x123d88
  103fe4:	89 35 8c 3d 12 00    	mov    %esi,0x123d8c
  103fea:	89 3d 90 3d 12 00    	mov    %edi,0x123d90
  103ff0:	66 b8 00 00          	mov    $0x0,%ax
  103ff4:	66                   	data16
  103ff5:	8c 1d a4 3d 12 00    	mov    %ds,0x123da4
  103ffb:	66 a3 a6 3d 12 00    	mov    %ax,0x123da6
  104001:	66                   	data16
  104002:	8c 05 a8 3d 12 00    	mov    %es,0x123da8
  104008:	66 a3 aa 3d 12 00    	mov    %ax,0x123daa
  10400e:	66                   	data16
  10400f:	8c 25 ac 3d 12 00    	mov    %fs,0x123dac
  104015:	66 a3 ae 3d 12 00    	mov    %ax,0x123dae
  10401b:	66                   	data16
  10401c:	8c 2d b0 3d 12 00    	mov    %gs,0x123db0
  104022:	66 a3 b2 3d 12 00    	mov    %ax,0x123db2
  104028:	5b                   	pop    %ebx
  104029:	89 1d 4c 3f 12 00    	mov    %ebx,0x123f4c
  10402f:	5b                   	pop    %ebx
  104030:	89 1d 94 3d 12 00    	mov    %ebx,0x123d94
  104036:	5b                   	pop    %ebx
  104037:	89 1d 9c 3d 12 00    	mov    %ebx,0x123d9c
  10403d:	66 a3 9e 3d 12 00    	mov    %ax,0x123d9e
  104043:	5b                   	pop    %ebx
  104044:	89 1d 98 3d 12 00    	mov    %ebx,0x123d98
  10404a:	66                   	data16
  10404b:	8c 15 a0 3d 12 00    	mov    %ss,0x123da0
  104051:	66 a3 a2 3d 12 00    	mov    %ax,0x123da2
  104057:	89 25 84 3d 12 00    	mov    %esp,0x123d84
  10405d:	6a 0d                	push   $0xd
  10405f:	e8 54 01 00 00       	call   1041b8 <_remcomHandler>

00104064 <_catchException11>:
  104064:	83 3d 88 71 10 00 00 	cmpl   $0x0,0x107188
  10406b:	0f 85 0f f8 ff ff    	jne    103880 <mem_fault>
  104071:	a3 74 3d 12 00       	mov    %eax,0x123d74
  104076:	89 0d 78 3d 12 00    	mov    %ecx,0x123d78
  10407c:	89 15 7c 3d 12 00    	mov    %edx,0x123d7c
  104082:	89 1d 80 3d 12 00    	mov    %ebx,0x123d80
  104088:	89 2d 88 3d 12 00    	mov    %ebp,0x123d88
  10408e:	89 35 8c 3d 12 00    	mov    %esi,0x123d8c
  104094:	89 3d 90 3d 12 00    	mov    %edi,0x123d90
  10409a:	66 b8 00 00          	mov    $0x0,%ax
  10409e:	66                   	data16
  10409f:	8c 1d a4 3d 12 00    	mov    %ds,0x123da4
  1040a5:	66 a3 a6 3d 12 00    	mov    %ax,0x123da6
  1040ab:	66                   	data16
  1040ac:	8c 05 a8 3d 12 00    	mov    %es,0x123da8
  1040b2:	66 a3 aa 3d 12 00    	mov    %ax,0x123daa
  1040b8:	66                   	data16
  1040b9:	8c 25 ac 3d 12 00    	mov    %fs,0x123dac
  1040bf:	66 a3 ae 3d 12 00    	mov    %ax,0x123dae
  1040c5:	66                   	data16
  1040c6:	8c 2d b0 3d 12 00    	mov    %gs,0x123db0
  1040cc:	66 a3 b2 3d 12 00    	mov    %ax,0x123db2
  1040d2:	5b                   	pop    %ebx
  1040d3:	89 1d 4c 3f 12 00    	mov    %ebx,0x123f4c
  1040d9:	5b                   	pop    %ebx
  1040da:	89 1d 94 3d 12 00    	mov    %ebx,0x123d94
  1040e0:	5b                   	pop    %ebx
  1040e1:	89 1d 9c 3d 12 00    	mov    %ebx,0x123d9c
  1040e7:	66 a3 9e 3d 12 00    	mov    %ax,0x123d9e
  1040ed:	5b                   	pop    %ebx
  1040ee:	89 1d 98 3d 12 00    	mov    %ebx,0x123d98
  1040f4:	66                   	data16
  1040f5:	8c 15 a0 3d 12 00    	mov    %ss,0x123da0
  1040fb:	66 a3 a2 3d 12 00    	mov    %ax,0x123da2
  104101:	89 25 84 3d 12 00    	mov    %esp,0x123d84
  104107:	6a 0b                	push   $0xb
  104109:	e8 aa 00 00 00       	call   1041b8 <_remcomHandler>

0010410e <_catchException14>:
  10410e:	83 3d 88 71 10 00 00 	cmpl   $0x0,0x107188
  104115:	0f 85 65 f7 ff ff    	jne    103880 <mem_fault>
  10411b:	a3 74 3d 12 00       	mov    %eax,0x123d74
  104120:	89 0d 78 3d 12 00    	mov    %ecx,0x123d78
  104126:	89 15 7c 3d 12 00    	mov    %edx,0x123d7c
  10412c:	89 1d 80 3d 12 00    	mov    %ebx,0x123d80
  104132:	89 2d 88 3d 12 00    	mov    %ebp,0x123d88
  104138:	89 35 8c 3d 12 00    	mov    %esi,0x123d8c
  10413e:	89 3d 90 3d 12 00    	mov    %edi,0x123d90
  104144:	66 b8 00 00          	mov    $0x0,%ax
  104148:	66                   	data16
  104149:	8c 1d a4 3d 12 00    	mov    %ds,0x123da4
  10414f:	66 a3 a6 3d 12 00    	mov    %ax,0x123da6
  104155:	66                   	data16
  104156:	8c 05 a8 3d 12 00    	mov    %es,0x123da8
  10415c:	66 a3 aa 3d 12 00    	mov    %ax,0x123daa
  104162:	66                   	data16
  104163:	8c 25 ac 3d 12 00    	mov    %fs,0x123dac
  104169:	66 a3 ae 3d 12 00    	mov    %ax,0x123dae
  10416f:	66                   	data16
  104170:	8c 2d b0 3d 12 00    	mov    %gs,0x123db0
  104176:	66 a3 b2 3d 12 00    	mov    %ax,0x123db2
  10417c:	5b                   	pop    %ebx
  10417d:	89 1d 4c 3f 12 00    	mov    %ebx,0x123f4c
  104183:	5b                   	pop    %ebx
  104184:	89 1d 94 3d 12 00    	mov    %ebx,0x123d94
  10418a:	5b                   	pop    %ebx
  10418b:	89 1d 9c 3d 12 00    	mov    %ebx,0x123d9c
  104191:	66 a3 9e 3d 12 00    	mov    %ax,0x123d9e
  104197:	5b                   	pop    %ebx
  104198:	89 1d 98 3d 12 00    	mov    %ebx,0x123d98
  10419e:	66                   	data16
  10419f:	8c 15 a0 3d 12 00    	mov    %ss,0x123da0
  1041a5:	66 a3 a2 3d 12 00    	mov    %ax,0x123da2
  1041ab:	89 25 84 3d 12 00    	mov    %esp,0x123d84
  1041b1:	6a 0e                	push   $0xe
  1041b3:	e8 00 00 00 00       	call   1041b8 <_remcomHandler>

001041b8 <_remcomHandler>:
  1041b8:	58                   	pop    %eax
  1041b9:	58                   	pop    %eax
  1041ba:	8b 25 84 71 10 00    	mov    0x107184,%esp
  1041c0:	50                   	push   %eax
  1041c1:	e8 0a 04 00 00       	call   1045d0 <handle_exception>
  1041c6:	8d 36                	lea    (%esi),%esi

001041c8 <_returnFromException>:
  1041c8:	55                   	push   %ebp
  1041c9:	89 e5                	mov    %esp,%ebp
  1041cb:	e8 44 f6 ff ff       	call   103814 <_return_to_prog>
  1041d0:	c9                   	leave  
  1041d1:	c3                   	ret    
  1041d2:	8d 36                	lea    (%esi),%esi

001041d4 <hex>:
  1041d4:	55                   	push   %ebp
  1041d5:	89 e5                	mov    %esp,%ebp
  1041d7:	8a 55 08             	mov    0x8(%ebp),%dl
  1041da:	88 d0                	mov    %dl,%al
  1041dc:	04 9f                	add    $0x9f,%al
  1041de:	3c 05                	cmp    $0x5,%al
  1041e0:	77 0a                	ja     1041ec <hex+0x18>
  1041e2:	0f be c2             	movsbl %dl,%eax
  1041e5:	83 c0 a9             	add    $0xffffffa9,%eax
  1041e8:	c9                   	leave  
  1041e9:	c3                   	ret    
  1041ea:	8d 36                	lea    (%esi),%esi
  1041ec:	88 d0                	mov    %dl,%al
  1041ee:	04 d0                	add    $0xd0,%al
  1041f0:	3c 09                	cmp    $0x9,%al
  1041f2:	77 08                	ja     1041fc <hex+0x28>
  1041f4:	0f be c2             	movsbl %dl,%eax
  1041f7:	83 c0 d0             	add    $0xffffffd0,%eax
  1041fa:	c9                   	leave  
  1041fb:	c3                   	ret    
  1041fc:	88 d0                	mov    %dl,%al
  1041fe:	04 bf                	add    $0xbf,%al
  104200:	3c 05                	cmp    $0x5,%al
  104202:	76 08                	jbe    10420c <hex+0x38>
  104204:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  104209:	c9                   	leave  
  10420a:	c3                   	ret    
  10420b:	90                   	nop
  10420c:	0f be c2             	movsbl %dl,%eax
  10420f:	83 c0 c9             	add    $0xffffffc9,%eax
  104212:	c9                   	leave  
  104213:	c3                   	ret    

00104214 <getpacket>:
  104214:	55                   	push   %ebp
  104215:	89 e5                	mov    %esp,%ebp
  104217:	83 ec 08             	sub    $0x8,%esp
  10421a:	57                   	push   %edi
  10421b:	56                   	push   %esi
  10421c:	53                   	push   %ebx
  10421d:	8b 75 08             	mov    0x8(%ebp),%esi
  104220:	e8 03 25 00 00       	call   106728 <getDebugChar>
  104225:	24 7f                	and    $0x7f,%al
  104227:	3c 24                	cmp    $0x24,%al
  104229:	75 f5                	jne    104220 <getpacket+0xc>
  10422b:	c6 45 fc 00          	movb   $0x0,-0x4(%ebp)
  10422f:	c6 45 f8 ff          	movb   $0xff,-0x8(%ebp)
  104233:	31 db                	xor    %ebx,%ebx
  104235:	8d 76 00             	lea    0x0(%esi),%esi
  104238:	e8 eb 24 00 00       	call   106728 <getDebugChar>
  10423d:	24 7f                	and    $0x7f,%al
  10423f:	3c 23                	cmp    $0x23,%al
  104241:	74 0f                	je     104252 <getpacket+0x3e>
  104243:	00 45 fc             	add    %al,-0x4(%ebp)
  104246:	88 04 33             	mov    %al,(%ebx,%esi,1)
  104249:	43                   	inc    %ebx
  10424a:	81 fb 8f 01 00 00    	cmp    $0x18f,%ebx
  104250:	7e e6                	jle    104238 <getpacket+0x24>
  104252:	c6 04 33 00          	movb   $0x0,(%ebx,%esi,1)
  104256:	3c 23                	cmp    $0x23,%al
  104258:	0f 85 b6 00 00 00    	jne    104314 <getpacket+0x100>
  10425e:	e8 c5 24 00 00       	call   106728 <getDebugChar>
  104263:	83 e0 7f             	and    $0x7f,%eax
  104266:	50                   	push   %eax
  104267:	e8 68 ff ff ff       	call   1041d4 <hex>
  10426c:	88 45 f8             	mov    %al,-0x8(%ebp)
  10426f:	c0 65 f8 04          	shlb   $0x4,-0x8(%ebp)
  104273:	e8 b0 24 00 00       	call   106728 <getDebugChar>
  104278:	83 e0 7f             	and    $0x7f,%eax
  10427b:	50                   	push   %eax
  10427c:	e8 53 ff ff ff       	call   1041d4 <hex>
  104281:	00 45 f8             	add    %al,-0x8(%ebp)
  104284:	83 c4 08             	add    $0x8,%esp
  104287:	83 3d b4 3d 12 00 00 	cmpl   $0x0,0x123db4
  10428e:	74 1f                	je     1042af <getpacket+0x9b>
  104290:	8a 4d fc             	mov    -0x4(%ebp),%cl
  104293:	38 4d f8             	cmp    %cl,-0x8(%ebp)
  104296:	74 2c                	je     1042c4 <getpacket+0xb0>
  104298:	56                   	push   %esi
  104299:	0f b6 45 f8          	movzbl -0x8(%ebp),%eax
  10429d:	50                   	push   %eax
  10429e:	0f b6 c1             	movzbl %cl,%eax
  1042a1:	50                   	push   %eax
  1042a2:	68 56 6c 10 00       	push   $0x106c56
  1042a7:	e8 a8 19 00 00       	call   105c54 <printf>
  1042ac:	83 c4 10             	add    $0x10,%esp
  1042af:	8a 4d fc             	mov    -0x4(%ebp),%cl
  1042b2:	38 4d f8             	cmp    %cl,-0x8(%ebp)
  1042b5:	74 0d                	je     1042c4 <getpacket+0xb0>
  1042b7:	6a 2d                	push   $0x2d
  1042b9:	e8 92 24 00 00       	call   106750 <putDebugChar>
  1042be:	83 c4 04             	add    $0x4,%esp
  1042c1:	eb 51                	jmp    104314 <getpacket+0x100>
  1042c3:	90                   	nop
  1042c4:	6a 2b                	push   $0x2b
  1042c6:	e8 85 24 00 00       	call   106750 <putDebugChar>
  1042cb:	83 c4 04             	add    $0x4,%esp
  1042ce:	80 7e 02 3a          	cmpb   $0x3a,0x2(%esi)
  1042d2:	75 40                	jne    104314 <getpacket+0x100>
  1042d4:	0f be 06             	movsbl (%esi),%eax
  1042d7:	50                   	push   %eax
  1042d8:	e8 73 24 00 00       	call   106750 <putDebugChar>
  1042dd:	0f be 46 01          	movsbl 0x1(%esi),%eax
  1042e1:	50                   	push   %eax
  1042e2:	e8 69 24 00 00       	call   106750 <putDebugChar>
  1042e7:	30 c0                	xor    %al,%al
  1042e9:	89 f7                	mov    %esi,%edi
  1042eb:	fc                   	cld    
  1042ec:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
  1042f1:	f2 ae                	repnz scas %es:(%edi),%al
  1042f3:	89 c8                	mov    %ecx,%eax
  1042f5:	f7 d0                	not    %eax
  1042f7:	8d 58 ff             	lea    -0x1(%eax),%ebx
  1042fa:	ba 03 00 00 00       	mov    $0x3,%edx
  1042ff:	83 c4 08             	add    $0x8,%esp
  104302:	39 da                	cmp    %ebx,%edx
  104304:	7f 0e                	jg     104314 <getpacket+0x100>
  104306:	8d 36                	lea    (%esi),%esi
  104308:	8a 04 32             	mov    (%edx,%esi,1),%al
  10430b:	88 44 16 fd          	mov    %al,-0x3(%esi,%edx,1)
  10430f:	42                   	inc    %edx
  104310:	39 da                	cmp    %ebx,%edx
  104312:	7e f4                	jle    104308 <getpacket+0xf4>
  104314:	8a 4d fc             	mov    -0x4(%ebp),%cl
  104317:	38 4d f8             	cmp    %cl,-0x8(%ebp)
  10431a:	0f 85 00 ff ff ff    	jne    104220 <getpacket+0xc>
  104320:	8d 65 ec             	lea    -0x14(%ebp),%esp
  104323:	5b                   	pop    %ebx
  104324:	5e                   	pop    %esi
  104325:	5f                   	pop    %edi
  104326:	c9                   	leave  
  104327:	c3                   	ret    

00104328 <putpacket>:
  104328:	55                   	push   %ebp
  104329:	89 e5                	mov    %esp,%ebp
  10432b:	83 ec 04             	sub    $0x4,%esp
  10432e:	57                   	push   %edi
  10432f:	56                   	push   %esi
  104330:	53                   	push   %ebx
  104331:	8b 7d 08             	mov    0x8(%ebp),%edi
  104334:	6a 24                	push   $0x24
  104336:	e8 15 24 00 00       	call   106750 <putDebugChar>
  10433b:	c6 45 fc 00          	movb   $0x0,-0x4(%ebp)
  10433f:	31 f6                	xor    %esi,%esi
  104341:	83 c4 04             	add    $0x4,%esp
  104344:	8a 1f                	mov    (%edi),%bl
  104346:	84 db                	test   %bl,%bl
  104348:	74 19                	je     104363 <putpacket+0x3b>
  10434a:	8d 36                	lea    (%esi),%esi
  10434c:	0f be c3             	movsbl %bl,%eax
  10434f:	50                   	push   %eax
  104350:	e8 fb 23 00 00       	call   106750 <putDebugChar>
  104355:	00 5d fc             	add    %bl,-0x4(%ebp)
  104358:	46                   	inc    %esi
  104359:	83 c4 04             	add    $0x4,%esp
  10435c:	8a 1c 3e             	mov    (%esi,%edi,1),%bl
  10435f:	84 db                	test   %bl,%bl
  104361:	75 e9                	jne    10434c <putpacket+0x24>
  104363:	6a 23                	push   $0x23
  104365:	e8 e6 23 00 00       	call   106750 <putDebugChar>
  10436a:	8a 45 fc             	mov    -0x4(%ebp),%al
  10436d:	c0 e8 04             	shr    $0x4,%al
  104370:	25 ff 00 00 00       	and    $0xff,%eax
  104375:	0f be 80 45 6c 10 00 	movsbl 0x106c45(%eax),%eax
  10437c:	50                   	push   %eax
  10437d:	e8 ce 23 00 00       	call   106750 <putDebugChar>
  104382:	8a 45 fc             	mov    -0x4(%ebp),%al
  104385:	83 e0 0f             	and    $0xf,%eax
  104388:	0f be 80 45 6c 10 00 	movsbl 0x106c45(%eax),%eax
  10438f:	50                   	push   %eax
  104390:	e8 bb 23 00 00       	call   106750 <putDebugChar>
  104395:	83 c4 0c             	add    $0xc,%esp
  104398:	e8 8b 23 00 00       	call   106728 <getDebugChar>
  10439d:	83 e0 7f             	and    $0x7f,%eax
  1043a0:	83 f8 2b             	cmp    $0x2b,%eax
  1043a3:	75 8f                	jne    104334 <putpacket+0xc>
  1043a5:	8d 65 f0             	lea    -0x10(%ebp),%esp
  1043a8:	5b                   	pop    %ebx
  1043a9:	5e                   	pop    %esi
  1043aa:	5f                   	pop    %edi
  1043ab:	c9                   	leave  
  1043ac:	c3                   	ret    
  1043ad:	8d 76 00             	lea    0x0(%esi),%esi

001043b0 <debug_error>:
  1043b0:	55                   	push   %ebp
  1043b1:	89 e5                	mov    %esp,%ebp
  1043b3:	83 3d b4 3d 12 00 00 	cmpl   $0x0,0x123db4
  1043ba:	74 0b                	je     1043c7 <debug_error+0x17>
  1043bc:	ff 75 0c             	pushl  0xc(%ebp)
  1043bf:	ff 75 08             	pushl  0x8(%ebp)
  1043c2:	e8 8d 18 00 00       	call   105c54 <printf>
  1043c7:	c9                   	leave  
  1043c8:	c3                   	ret    
  1043c9:	8d 76 00             	lea    0x0(%esi),%esi

001043cc <set_mem_err>:
  1043cc:	55                   	push   %ebp
  1043cd:	89 e5                	mov    %esp,%ebp
  1043cf:	c7 05 8c 71 10 00 01 	movl   $0x1,0x10718c
  1043d6:	00 00 00 
  1043d9:	c9                   	leave  
  1043da:	c3                   	ret    
  1043db:	90                   	nop

001043dc <get_char>:
  1043dc:	55                   	push   %ebp
  1043dd:	89 e5                	mov    %esp,%ebp
  1043df:	8b 45 08             	mov    0x8(%ebp),%eax
  1043e2:	0f be 00             	movsbl (%eax),%eax
  1043e5:	c9                   	leave  
  1043e6:	c3                   	ret    
  1043e7:	90                   	nop

001043e8 <set_char>:
  1043e8:	55                   	push   %ebp
  1043e9:	89 e5                	mov    %esp,%ebp
  1043eb:	8b 55 08             	mov    0x8(%ebp),%edx
  1043ee:	8b 45 0c             	mov    0xc(%ebp),%eax
  1043f1:	88 02                	mov    %al,(%edx)
  1043f3:	c9                   	leave  
  1043f4:	c3                   	ret    
  1043f5:	8d 76 00             	lea    0x0(%esi),%esi

001043f8 <mem2hex>:
  1043f8:	55                   	push   %ebp
  1043f9:	89 e5                	mov    %esp,%ebp
  1043fb:	57                   	push   %edi
  1043fc:	56                   	push   %esi
  1043fd:	53                   	push   %ebx
  1043fe:	8b 7d 08             	mov    0x8(%ebp),%edi
  104401:	8b 5d 0c             	mov    0xc(%ebp),%ebx
  104404:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
  104408:	74 0a                	je     104414 <mem2hex+0x1c>
  10440a:	c7 05 88 71 10 00 cc 	movl   $0x1043cc,0x107188
  104411:	43 10 00 
  104414:	31 f6                	xor    %esi,%esi
  104416:	39 75 10             	cmp    %esi,0x10(%ebp)
  104419:	7e 43                	jle    10445e <mem2hex+0x66>
  10441b:	90                   	nop
  10441c:	57                   	push   %edi
  10441d:	47                   	inc    %edi
  10441e:	e8 b9 ff ff ff       	call   1043dc <get_char>
  104423:	88 c2                	mov    %al,%dl
  104425:	83 c4 04             	add    $0x4,%esp
  104428:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
  10442c:	74 09                	je     104437 <mem2hex+0x3f>
  10442e:	a1 8c 71 10 00       	mov    0x10718c,%eax
  104433:	85 c0                	test   %eax,%eax
  104435:	75 34                	jne    10446b <mem2hex+0x73>
  104437:	88 d0                	mov    %dl,%al
  104439:	c0 e8 04             	shr    $0x4,%al
  10443c:	25 ff 00 00 00       	and    $0xff,%eax
  104441:	8a 80 45 6c 10 00    	mov    0x106c45(%eax),%al
  104447:	88 03                	mov    %al,(%ebx)
  104449:	43                   	inc    %ebx
  10444a:	89 d0                	mov    %edx,%eax
  10444c:	83 e0 0f             	and    $0xf,%eax
  10444f:	8a 80 45 6c 10 00    	mov    0x106c45(%eax),%al
  104455:	88 03                	mov    %al,(%ebx)
  104457:	43                   	inc    %ebx
  104458:	46                   	inc    %esi
  104459:	39 75 10             	cmp    %esi,0x10(%ebp)
  10445c:	7f be                	jg     10441c <mem2hex+0x24>
  10445e:	c6 03 00             	movb   $0x0,(%ebx)
  104461:	c7 05 88 71 10 00 00 	movl   $0x0,0x107188
  104468:	00 00 00 
  10446b:	89 d8                	mov    %ebx,%eax
  10446d:	8d 65 f4             	lea    -0xc(%ebp),%esp
  104470:	5b                   	pop    %ebx
  104471:	5e                   	pop    %esi
  104472:	5f                   	pop    %edi
  104473:	c9                   	leave  
  104474:	c3                   	ret    
  104475:	8d 76 00             	lea    0x0(%esi),%esi

00104478 <hex2mem>:
  104478:	55                   	push   %ebp
  104479:	89 e5                	mov    %esp,%ebp
  10447b:	57                   	push   %edi
  10447c:	56                   	push   %esi
  10447d:	53                   	push   %ebx
  10447e:	8b 75 08             	mov    0x8(%ebp),%esi
  104481:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
  104485:	74 0a                	je     104491 <hex2mem+0x19>
  104487:	c7 05 88 71 10 00 cc 	movl   $0x1043cc,0x107188
  10448e:	43 10 00 
  104491:	31 ff                	xor    %edi,%edi
  104493:	39 7d 10             	cmp    %edi,0x10(%ebp)
  104496:	7e 42                	jle    1044da <hex2mem+0x62>
  104498:	0f be 06             	movsbl (%esi),%eax
  10449b:	50                   	push   %eax
  10449c:	46                   	inc    %esi
  10449d:	e8 32 fd ff ff       	call   1041d4 <hex>
  1044a2:	88 c3                	mov    %al,%bl
  1044a4:	c0 e3 04             	shl    $0x4,%bl
  1044a7:	0f be 06             	movsbl (%esi),%eax
  1044aa:	50                   	push   %eax
  1044ab:	46                   	inc    %esi
  1044ac:	e8 23 fd ff ff       	call   1041d4 <hex>
  1044b1:	00 c3                	add    %al,%bl
  1044b3:	0f b6 c3             	movzbl %bl,%eax
  1044b6:	50                   	push   %eax
  1044b7:	ff 75 0c             	pushl  0xc(%ebp)
  1044ba:	ff 45 0c             	incl   0xc(%ebp)
  1044bd:	e8 26 ff ff ff       	call   1043e8 <set_char>
  1044c2:	83 c4 10             	add    $0x10,%esp
  1044c5:	83 7d 14 00          	cmpl   $0x0,0x14(%ebp)
  1044c9:	74 09                	je     1044d4 <hex2mem+0x5c>
  1044cb:	a1 8c 71 10 00       	mov    0x10718c,%eax
  1044d0:	85 c0                	test   %eax,%eax
  1044d2:	75 10                	jne    1044e4 <hex2mem+0x6c>
  1044d4:	47                   	inc    %edi
  1044d5:	39 7d 10             	cmp    %edi,0x10(%ebp)
  1044d8:	7f be                	jg     104498 <hex2mem+0x20>
  1044da:	c7 05 88 71 10 00 00 	movl   $0x0,0x107188
  1044e1:	00 00 00 
  1044e4:	8b 45 0c             	mov    0xc(%ebp),%eax
  1044e7:	8d 65 f4             	lea    -0xc(%ebp),%esp
  1044ea:	5b                   	pop    %ebx
  1044eb:	5e                   	pop    %esi
  1044ec:	5f                   	pop    %edi
  1044ed:	c9                   	leave  
  1044ee:	c3                   	ret    
  1044ef:	90                   	nop

001044f0 <computeSignal>:
  1044f0:	55                   	push   %ebp
  1044f1:	89 e5                	mov    %esp,%ebp
  1044f3:	8b 45 08             	mov    0x8(%ebp),%eax
  1044f6:	83 f8 10             	cmp    $0x10,%eax
  1044f9:	77 7d                	ja     104578 <computeSignal+0x88>
  1044fb:	ff 24 85 04 45 10 00 	jmp    *0x104504(,%eax,4)
  104502:	8d 36                	lea    (%esi),%esi
  104504:	48                   	dec    %eax
  104505:	45                   	inc    %ebp
  104506:	10 00                	adc    %al,(%eax)
  104508:	50                   	push   %eax
  104509:	45                   	inc    %ebp
  10450a:	10 00                	adc    %al,(%eax)
  10450c:	78 45                	js     104553 <computeSignal+0x63>
  10450e:	10 00                	adc    %al,(%eax)
  104510:	50                   	push   %eax
  104511:	45                   	inc    %ebp
  104512:	10 00                	adc    %al,(%eax)
  104514:	58                   	pop    %eax
  104515:	45                   	inc    %ebp
  104516:	10 00                	adc    %al,(%eax)
  104518:	58                   	pop    %eax
  104519:	45                   	inc    %ebp
  10451a:	10 00                	adc    %al,(%eax)
  10451c:	60                   	pusha  
  10451d:	45                   	inc    %ebp
  10451e:	10 00                	adc    %al,(%eax)
  104520:	48                   	dec    %eax
  104521:	45                   	inc    %ebp
  104522:	10 00                	adc    %al,(%eax)
  104524:	68 45 10 00 70       	push   $0x70001045
  104529:	45                   	inc    %ebp
  10452a:	10 00                	adc    %al,(%eax)
  10452c:	70 45                	jo     104573 <computeSignal+0x83>
  10452e:	10 00                	adc    %al,(%eax)
  104530:	70 45                	jo     104577 <computeSignal+0x87>
  104532:	10 00                	adc    %al,(%eax)
  104534:	70 45                	jo     10457b <computeSignal+0x8b>
  104536:	10 00                	adc    %al,(%eax)
  104538:	70 45                	jo     10457f <computeSignal+0x8f>
  10453a:	10 00                	adc    %al,(%eax)
  10453c:	70 45                	jo     104583 <hexToInt+0x3>
  10453e:	10 00                	adc    %al,(%eax)
  104540:	78 45                	js     104587 <hexToInt+0x7>
  104542:	10 00                	adc    %al,(%eax)
  104544:	68 45 10 00 b8       	push   $0xb8001045
  104549:	08 00                	or     %al,(%eax)
  10454b:	00 00                	add    %al,(%eax)
  10454d:	c9                   	leave  
  10454e:	c3                   	ret    
  10454f:	90                   	nop
  104550:	b8 05 00 00 00       	mov    $0x5,%eax
  104555:	c9                   	leave  
  104556:	c3                   	ret    
  104557:	90                   	nop
  104558:	b8 10 00 00 00       	mov    $0x10,%eax
  10455d:	c9                   	leave  
  10455e:	c3                   	ret    
  10455f:	90                   	nop
  104560:	b8 04 00 00 00       	mov    $0x4,%eax
  104565:	c9                   	leave  
  104566:	c3                   	ret    
  104567:	90                   	nop
  104568:	b8 07 00 00 00       	mov    $0x7,%eax
  10456d:	c9                   	leave  
  10456e:	c3                   	ret    
  10456f:	90                   	nop
  104570:	b8 0b 00 00 00       	mov    $0xb,%eax
  104575:	c9                   	leave  
  104576:	c3                   	ret    
  104577:	90                   	nop
  104578:	b8 07 00 00 00       	mov    $0x7,%eax
  10457d:	c9                   	leave  
  10457e:	c3                   	ret    
  10457f:	90                   	nop

00104580 <hexToInt>:
  104580:	55                   	push   %ebp
  104581:	89 e5                	mov    %esp,%ebp
  104583:	57                   	push   %edi
  104584:	56                   	push   %esi
  104585:	53                   	push   %ebx
  104586:	8b 5d 08             	mov    0x8(%ebp),%ebx
  104589:	8b 7d 0c             	mov    0xc(%ebp),%edi
  10458c:	31 f6                	xor    %esi,%esi
  10458e:	c7 07 00 00 00 00    	movl   $0x0,(%edi)
  104594:	8b 03                	mov    (%ebx),%eax
  104596:	89 c2                	mov    %eax,%edx
  104598:	80 38 00             	cmpb   $0x0,(%eax)
  10459b:	74 28                	je     1045c5 <hexToInt+0x45>
  10459d:	8d 76 00             	lea    0x0(%esi),%esi
  1045a0:	0f be 02             	movsbl (%edx),%eax
  1045a3:	50                   	push   %eax
  1045a4:	e8 2b fc ff ff       	call   1041d4 <hex>
  1045a9:	89 c2                	mov    %eax,%edx
  1045ab:	83 c4 04             	add    $0x4,%esp
  1045ae:	85 d2                	test   %edx,%edx
  1045b0:	7c 13                	jl     1045c5 <hexToInt+0x45>
  1045b2:	8b 07                	mov    (%edi),%eax
  1045b4:	c1 e0 04             	shl    $0x4,%eax
  1045b7:	09 d0                	or     %edx,%eax
  1045b9:	89 07                	mov    %eax,(%edi)
  1045bb:	46                   	inc    %esi
  1045bc:	ff 03                	incl   (%ebx)
  1045be:	8b 13                	mov    (%ebx),%edx
  1045c0:	80 3a 00             	cmpb   $0x0,(%edx)
  1045c3:	75 db                	jne    1045a0 <hexToInt+0x20>
  1045c5:	89 f0                	mov    %esi,%eax
  1045c7:	8d 65 f4             	lea    -0xc(%ebp),%esp
  1045ca:	5b                   	pop    %ebx
  1045cb:	5e                   	pop    %esi
  1045cc:	5f                   	pop    %edi
  1045cd:	c9                   	leave  
  1045ce:	c3                   	ret    
  1045cf:	90                   	nop

001045d0 <handle_exception>:
  1045d0:	55                   	push   %ebp
  1045d1:	89 e5                	mov    %esp,%ebp
  1045d3:	83 ec 0c             	sub    $0xc,%esp
  1045d6:	56                   	push   %esi
  1045d7:	53                   	push   %ebx
  1045d8:	8b 5d 08             	mov    0x8(%ebp),%ebx
  1045db:	89 1d 7c 38 10 00    	mov    %ebx,0x10387c
  1045e1:	83 3d b4 3d 12 00 00 	cmpl   $0x0,0x123db4
  1045e8:	74 1a                	je     104604 <handle_exception+0x34>
  1045ea:	ff 35 94 3d 12 00    	pushl  0x123d94
  1045f0:	ff 35 98 3d 12 00    	pushl  0x123d98
  1045f6:	53                   	push   %ebx
  1045f7:	68 89 6c 10 00       	push   $0x106c89
  1045fc:	e8 53 16 00 00       	call   105c54 <printf>
  104601:	83 c4 10             	add    $0x10,%esp
  104604:	83 fb fe             	cmp    $0xfffffffe,%ebx
  104607:	75 23                	jne    10462c <handle_exception+0x5c>
  104609:	a1 a6 6c 10 00       	mov    0x106ca6,%eax
  10460e:	a3 60 66 12 00       	mov    %eax,0x126660
  104613:	68 60 66 12 00       	push   $0x126660
  104618:	e8 0b fd ff ff       	call   104328 <putpacket>
  10461d:	c6 05 88 72 10 00 00 	movb   $0x0,0x107288
  104624:	e8 9b 10 00 00       	call   1056c4 <FlamingExit>
  104629:	83 c4 04             	add    $0x4,%esp
  10462c:	53                   	push   %ebx
  10462d:	e8 be fe ff ff       	call   1044f0 <computeSignal>
  104632:	89 c3                	mov    %eax,%ebx
  104634:	c6 05 60 66 12 00 53 	movb   $0x53,0x126660
  10463b:	c1 f8 04             	sar    $0x4,%eax
  10463e:	8a 80 45 6c 10 00    	mov    0x106c45(%eax),%al
  104644:	88 05 61 66 12 00    	mov    %al,0x126661
  10464a:	89 d8                	mov    %ebx,%eax
  10464c:	85 db                	test   %ebx,%ebx
  10464e:	7d 03                	jge    104653 <handle_exception+0x83>
  104650:	8d 43 0f             	lea    0xf(%ebx),%eax
  104653:	24 f0                	and    $0xf0,%al
  104655:	89 d9                	mov    %ebx,%ecx
  104657:	29 c1                	sub    %eax,%ecx
  104659:	89 c8                	mov    %ecx,%eax
  10465b:	8a 80 45 6c 10 00    	mov    0x106c45(%eax),%al
  104661:	88 05 62 66 12 00    	mov    %al,0x126662
  104667:	c6 05 63 66 12 00 00 	movb   $0x0,0x126663
  10466e:	68 60 66 12 00       	push   $0x126660
  104673:	e8 b0 fc ff ff       	call   104328 <putpacket>
  104678:	83 c4 08             	add    $0x8,%esp
  10467b:	8d 75 fc             	lea    -0x4(%ebp),%esi
  10467e:	8d 36                	lea    (%esi),%esi
  104680:	66 c7 05 90 72 10 00 	movw   $0x0,0x107290
  104687:	00 00 
  104689:	c6 05 60 66 12 00 00 	movb   $0x0,0x126660
  104690:	68 b8 3d 12 00       	push   $0x123db8
  104695:	e8 7a fb ff ff       	call   104214 <getpacket>
  10469a:	83 c4 04             	add    $0x4,%esp
  10469d:	8a 05 b8 3d 12 00    	mov    0x123db8,%al
  1046a3:	04 c1                	add    $0xc1,%al
  1046a5:	0f be c0             	movsbl %al,%eax
  1046a8:	83 f8 34             	cmp    $0x34,%eax
  1046ab:	0f 87 43 03 00 00    	ja     1049f4 <handle_exception+0x424>
  1046b1:	ff 24 85 b8 46 10 00 	jmp    *0x1046b8(,%eax,4)
  1046b8:	8c 47 10             	mov    %es,0x10(%edi)
  1046bb:	00 f4                	add    %dh,%ah
  1046bd:	49                   	dec    %ecx
  1046be:	10 00                	adc    %al,(%eax)
  1046c0:	f4                   	hlt    
  1046c1:	49                   	dec    %ecx
  1046c2:	10 00                	adc    %al,(%eax)
  1046c4:	f4                   	hlt    
  1046c5:	49                   	dec    %ecx
  1046c6:	10 00                	adc    %al,(%eax)
  1046c8:	f4                   	hlt    
  1046c9:	49                   	dec    %ecx
  1046ca:	10 00                	adc    %al,(%eax)
  1046cc:	f4                   	hlt    
  1046cd:	49                   	dec    %ecx
  1046ce:	10 00                	adc    %al,(%eax)
  1046d0:	f4                   	hlt    
  1046d1:	49                   	dec    %ecx
  1046d2:	10 00                	adc    %al,(%eax)
  1046d4:	f4                   	hlt    
  1046d5:	49                   	dec    %ecx
  1046d6:	10 00                	adc    %al,(%eax)
  1046d8:	08 48 10             	or     %cl,0x10(%eax)
  1046db:	00 f4                	add    %dh,%ah
  1046dd:	49                   	dec    %ecx
  1046de:	10 00                	adc    %al,(%eax)
  1046e0:	f4                   	hlt    
  1046e1:	49                   	dec    %ecx
  1046e2:	10 00                	adc    %al,(%eax)
  1046e4:	f4                   	hlt    
  1046e5:	49                   	dec    %ecx
  1046e6:	10 00                	adc    %al,(%eax)
  1046e8:	f4                   	hlt    
  1046e9:	49                   	dec    %ecx
  1046ea:	10 00                	adc    %al,(%eax)
  1046ec:	f4                   	hlt    
  1046ed:	49                   	dec    %ecx
  1046ee:	10 00                	adc    %al,(%eax)
  1046f0:	dc 48 10             	fmull  0x10(%eax)
  1046f3:	00 f4                	add    %dh,%ah
  1046f5:	49                   	dec    %ecx
  1046f6:	10 00                	adc    %al,(%eax)
  1046f8:	f4                   	hlt    
  1046f9:	49                   	dec    %ecx
  1046fa:	10 00                	adc    %al,(%eax)
  1046fc:	f4                   	hlt    
  1046fd:	49                   	dec    %ecx
  1046fe:	10 00                	adc    %al,(%eax)
  104700:	f4                   	hlt    
  104701:	49                   	dec    %ecx
  104702:	10 00                	adc    %al,(%eax)
  104704:	f4                   	hlt    
  104705:	49                   	dec    %ecx
  104706:	10 00                	adc    %al,(%eax)
  104708:	f4                   	hlt    
  104709:	49                   	dec    %ecx
  10470a:	10 00                	adc    %al,(%eax)
  10470c:	f4                   	hlt    
  10470d:	49                   	dec    %ecx
  10470e:	10 00                	adc    %al,(%eax)
  104710:	f4                   	hlt    
  104711:	49                   	dec    %ecx
  104712:	10 00                	adc    %al,(%eax)
  104714:	f4                   	hlt    
  104715:	49                   	dec    %ecx
  104716:	10 00                	adc    %al,(%eax)
  104718:	f4                   	hlt    
  104719:	49                   	dec    %ecx
  10471a:	10 00                	adc    %al,(%eax)
  10471c:	f4                   	hlt    
  10471d:	49                   	dec    %ecx
  10471e:	10 00                	adc    %al,(%eax)
  104720:	f4                   	hlt    
  104721:	49                   	dec    %ecx
  104722:	10 00                	adc    %al,(%eax)
  104724:	f4                   	hlt    
  104725:	49                   	dec    %ecx
  104726:	10 00                	adc    %al,(%eax)
  104728:	f4                   	hlt    
  104729:	49                   	dec    %ecx
  10472a:	10 00                	adc    %al,(%eax)
  10472c:	f4                   	hlt    
  10472d:	49                   	dec    %ecx
  10472e:	10 00                	adc    %al,(%eax)
  104730:	f4                   	hlt    
  104731:	49                   	dec    %ecx
  104732:	10 00                	adc    %al,(%eax)
  104734:	f4                   	hlt    
  104735:	49                   	dec    %ecx
  104736:	10 00                	adc    %al,(%eax)
  104738:	f4                   	hlt    
  104739:	49                   	dec    %ecx
  10473a:	10 00                	adc    %al,(%eax)
  10473c:	f4                   	hlt    
  10473d:	49                   	dec    %ecx
  10473e:	10 00                	adc    %al,(%eax)
  104740:	f4                   	hlt    
  104741:	49                   	dec    %ecx
  104742:	10 00                	adc    %al,(%eax)
  104744:	f4                   	hlt    
  104745:	49                   	dec    %ecx
  104746:	10 00                	adc    %al,(%eax)
  104748:	a4                   	movsb  %ds:(%esi),%es:(%edi)
  104749:	49                   	dec    %ecx
  10474a:	10 00                	adc    %al,(%eax)
  10474c:	d0 47 10             	rolb   0x10(%edi)
  10474f:	00 f4                	add    %dh,%ah
  104751:	49                   	dec    %ecx
  104752:	10 00                	adc    %al,(%eax)
  104754:	f4                   	hlt    
  104755:	49                   	dec    %ecx
  104756:	10 00                	adc    %al,(%eax)
  104758:	ec                   	in     (%dx),%al
  104759:	47                   	inc    %edi
  10475a:	10 00                	adc    %al,(%eax)
  10475c:	f4                   	hlt    
  10475d:	49                   	dec    %ecx
  10475e:	10 00                	adc    %al,(%eax)
  104760:	f4                   	hlt    
  104761:	49                   	dec    %ecx
  104762:	10 00                	adc    %al,(%eax)
  104764:	f4                   	hlt    
  104765:	49                   	dec    %ecx
  104766:	10 00                	adc    %al,(%eax)
  104768:	e8 49 10 00 f4       	call   f41057b6 <_end+0xf3fdefb9>
  10476d:	49                   	dec    %ecx
  10476e:	10 00                	adc    %al,(%eax)
  104770:	3c 48                	cmp    $0x48,%al
  104772:	10 00                	adc    %al,(%eax)
  104774:	f4                   	hlt    
  104775:	49                   	dec    %ecx
  104776:	10 00                	adc    %al,(%eax)
  104778:	f4                   	hlt    
  104779:	49                   	dec    %ecx
  10477a:	10 00                	adc    %al,(%eax)
  10477c:	f4                   	hlt    
  10477d:	49                   	dec    %ecx
  10477e:	10 00                	adc    %al,(%eax)
  104780:	f4                   	hlt    
  104781:	49                   	dec    %ecx
  104782:	10 00                	adc    %al,(%eax)
  104784:	f4                   	hlt    
  104785:	49                   	dec    %ecx
  104786:	10 00                	adc    %al,(%eax)
  104788:	a4                   	movsb  %ds:(%esi),%es:(%edi)
  104789:	49                   	dec    %ecx
  10478a:	10 00                	adc    %al,(%eax)
  10478c:	c6 05 60 66 12 00 53 	movb   $0x53,0x126660
  104793:	89 d8                	mov    %ebx,%eax
  104795:	c1 f8 04             	sar    $0x4,%eax
  104798:	8a 80 45 6c 10 00    	mov    0x106c45(%eax),%al
  10479e:	88 05 61 66 12 00    	mov    %al,0x126661
  1047a4:	ba 62 66 12 00       	mov    $0x126662,%edx
  1047a9:	89 d8                	mov    %ebx,%eax
  1047ab:	85 db                	test   %ebx,%ebx
  1047ad:	7d 03                	jge    1047b2 <handle_exception+0x1e2>
  1047af:	8d 43 0f             	lea    0xf(%ebx),%eax
  1047b2:	24 f0                	and    $0xf0,%al
  1047b4:	89 d9                	mov    %ebx,%ecx
  1047b6:	29 c1                	sub    %eax,%ecx
  1047b8:	89 c8                	mov    %ecx,%eax
  1047ba:	8a 80 45 6c 10 00    	mov    0x106c45(%eax),%al
  1047c0:	88 02                	mov    %al,(%edx)
  1047c2:	c6 05 63 66 12 00 00 	movb   $0x0,0x126663
  1047c9:	e9 26 02 00 00       	jmp    1049f4 <handle_exception+0x424>
  1047ce:	8d 36                	lea    (%esi),%esi
  1047d0:	83 3d b4 3d 12 00 00 	cmpl   $0x0,0x123db4
  1047d7:	0f 94 c0             	sete   %al
  1047da:	25 ff 00 00 00       	and    $0xff,%eax
  1047df:	a3 b4 3d 12 00       	mov    %eax,0x123db4
  1047e4:	e9 0b 02 00 00       	jmp    1049f4 <handle_exception+0x424>
  1047e9:	8d 76 00             	lea    0x0(%esi),%esi
  1047ec:	6a 00                	push   $0x0
  1047ee:	6a 40                	push   $0x40
  1047f0:	68 60 66 12 00       	push   $0x126660
  1047f5:	68 74 3d 12 00       	push   $0x123d74
  1047fa:	e8 f9 fb ff ff       	call   1043f8 <mem2hex>
  1047ff:	83 c4 10             	add    $0x10,%esp
  104802:	e9 ed 01 00 00       	jmp    1049f4 <handle_exception+0x424>
  104807:	90                   	nop
  104808:	6a 00                	push   $0x0
  10480a:	6a 40                	push   $0x40
  10480c:	68 74 3d 12 00       	push   $0x123d74
  104811:	68 b9 3d 12 00       	push   $0x123db9
  104816:	e8 5d fc ff ff       	call   104478 <hex2mem>
  10481b:	66 a1 aa 6c 10 00    	mov    0x106caa,%ax
  104821:	66 a3 60 66 12 00    	mov    %ax,0x126660
  104827:	8a 05 ac 6c 10 00    	mov    0x106cac,%al
  10482d:	88 05 62 66 12 00    	mov    %al,0x126662
  104833:	83 c4 10             	add    $0x10,%esp
  104836:	e9 b9 01 00 00       	jmp    1049f4 <handle_exception+0x424>
  10483b:	90                   	nop
  10483c:	c7 45 fc b9 3d 12 00 	movl   $0x123db9,-0x4(%ebp)
  104843:	8d 45 f8             	lea    -0x8(%ebp),%eax
  104846:	50                   	push   %eax
  104847:	56                   	push   %esi
  104848:	e8 33 fd ff ff       	call   104580 <hexToInt>
  10484d:	83 c4 08             	add    $0x8,%esp
  104850:	85 c0                	test   %eax,%eax
  104852:	74 62                	je     1048b6 <handle_exception+0x2e6>
  104854:	8b 45 fc             	mov    -0x4(%ebp),%eax
  104857:	ff 45 fc             	incl   -0x4(%ebp)
  10485a:	80 38 2c             	cmpb   $0x2c,(%eax)
  10485d:	75 57                	jne    1048b6 <handle_exception+0x2e6>
  10485f:	8d 45 f4             	lea    -0xc(%ebp),%eax
  104862:	50                   	push   %eax
  104863:	56                   	push   %esi
  104864:	e8 17 fd ff ff       	call   104580 <hexToInt>
  104869:	83 c4 08             	add    $0x8,%esp
  10486c:	85 c0                	test   %eax,%eax
  10486e:	74 46                	je     1048b6 <handle_exception+0x2e6>
  104870:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
  104877:	c7 05 8c 71 10 00 00 	movl   $0x0,0x10718c
  10487e:	00 00 00 
  104881:	6a 01                	push   $0x1
  104883:	ff 75 f4             	pushl  -0xc(%ebp)
  104886:	68 60 66 12 00       	push   $0x126660
  10488b:	ff 75 f8             	pushl  -0x8(%ebp)
  10488e:	e8 65 fb ff ff       	call   1043f8 <mem2hex>
  104893:	83 c4 10             	add    $0x10,%esp
  104896:	a1 8c 71 10 00       	mov    0x10718c,%eax
  10489b:	85 c0                	test   %eax,%eax
  10489d:	74 17                	je     1048b6 <handle_exception+0x2e6>
  10489f:	a1 ad 6c 10 00       	mov    0x106cad,%eax
  1048a4:	a3 60 66 12 00       	mov    %eax,0x126660
  1048a9:	68 b1 6c 10 00       	push   $0x106cb1
  1048ae:	e8 fd fa ff ff       	call   1043b0 <debug_error>
  1048b3:	83 c4 04             	add    $0x4,%esp
  1048b6:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)
  1048ba:	0f 84 34 01 00 00    	je     1049f4 <handle_exception+0x424>
  1048c0:	a1 be 6c 10 00       	mov    0x106cbe,%eax
  1048c5:	a3 60 66 12 00       	mov    %eax,0x126660
  1048ca:	68 b8 3d 12 00       	push   $0x123db8
  1048cf:	68 c2 6c 10 00       	push   $0x106cc2
  1048d4:	e9 c0 00 00 00       	jmp    104999 <handle_exception+0x3c9>
  1048d9:	8d 76 00             	lea    0x0(%esi),%esi
  1048dc:	c7 45 fc b9 3d 12 00 	movl   $0x123db9,-0x4(%ebp)
  1048e3:	8d 45 f8             	lea    -0x8(%ebp),%eax
  1048e6:	50                   	push   %eax
  1048e7:	56                   	push   %esi
  1048e8:	e8 93 fc ff ff       	call   104580 <hexToInt>
  1048ed:	83 c4 08             	add    $0x8,%esp
  1048f0:	85 c0                	test   %eax,%eax
  1048f2:	0f 84 87 00 00 00    	je     10497f <handle_exception+0x3af>
  1048f8:	8b 45 fc             	mov    -0x4(%ebp),%eax
  1048fb:	ff 45 fc             	incl   -0x4(%ebp)
  1048fe:	80 38 2c             	cmpb   $0x2c,(%eax)
  104901:	75 7c                	jne    10497f <handle_exception+0x3af>
  104903:	8d 45 f4             	lea    -0xc(%ebp),%eax
  104906:	50                   	push   %eax
  104907:	56                   	push   %esi
  104908:	e8 73 fc ff ff       	call   104580 <hexToInt>
  10490d:	83 c4 08             	add    $0x8,%esp
  104910:	85 c0                	test   %eax,%eax
  104912:	74 6b                	je     10497f <handle_exception+0x3af>
  104914:	8b 45 fc             	mov    -0x4(%ebp),%eax
  104917:	ff 45 fc             	incl   -0x4(%ebp)
  10491a:	80 38 3a             	cmpb   $0x3a,(%eax)
  10491d:	75 60                	jne    10497f <handle_exception+0x3af>
  10491f:	c7 05 8c 71 10 00 00 	movl   $0x0,0x10718c
  104926:	00 00 00 
  104929:	6a 01                	push   $0x1
  10492b:	ff 75 f4             	pushl  -0xc(%ebp)
  10492e:	ff 75 f8             	pushl  -0x8(%ebp)
  104931:	ff 75 fc             	pushl  -0x4(%ebp)
  104934:	e8 3f fb ff ff       	call   104478 <hex2mem>
  104939:	83 c4 10             	add    $0x10,%esp
  10493c:	a1 8c 71 10 00       	mov    0x10718c,%eax
  104941:	85 c0                	test   %eax,%eax
  104943:	74 1b                	je     104960 <handle_exception+0x390>
  104945:	a1 ad 6c 10 00       	mov    0x106cad,%eax
  10494a:	a3 60 66 12 00       	mov    %eax,0x126660
  10494f:	68 b1 6c 10 00       	push   $0x106cb1
  104954:	e8 57 fa ff ff       	call   1043b0 <debug_error>
  104959:	83 c4 04             	add    $0x4,%esp
  10495c:	eb 1a                	jmp    104978 <handle_exception+0x3a8>
  10495e:	8d 36                	lea    (%esi),%esi
  104960:	66 a1 aa 6c 10 00    	mov    0x106caa,%ax
  104966:	66 a3 60 66 12 00    	mov    %ax,0x126660
  10496c:	8a 05 ac 6c 10 00    	mov    0x106cac,%al
  104972:	88 05 62 66 12 00    	mov    %al,0x126662
  104978:	c7 45 fc 00 00 00 00 	movl   $0x0,-0x4(%ebp)
  10497f:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)
  104983:	74 6f                	je     1049f4 <handle_exception+0x424>
  104985:	a1 e4 6c 10 00       	mov    0x106ce4,%eax
  10498a:	a3 60 66 12 00       	mov    %eax,0x126660
  10498f:	68 b8 3d 12 00       	push   $0x123db8
  104994:	68 e8 6c 10 00       	push   $0x106ce8
  104999:	e8 12 fa ff ff       	call   1043b0 <debug_error>
  10499e:	83 c4 08             	add    $0x8,%esp
  1049a1:	eb 51                	jmp    1049f4 <handle_exception+0x424>
  1049a3:	90                   	nop
  1049a4:	c7 45 fc b9 3d 12 00 	movl   $0x123db9,-0x4(%ebp)
  1049ab:	8d 45 f8             	lea    -0x8(%ebp),%eax
  1049ae:	50                   	push   %eax
  1049af:	56                   	push   %esi
  1049b0:	e8 cb fb ff ff       	call   104580 <hexToInt>
  1049b5:	83 c4 08             	add    $0x8,%esp
  1049b8:	85 c0                	test   %eax,%eax
  1049ba:	74 08                	je     1049c4 <handle_exception+0x3f4>
  1049bc:	8b 45 f8             	mov    -0x8(%ebp),%eax
  1049bf:	a3 94 3d 12 00       	mov    %eax,0x123d94
  1049c4:	81 25 98 3d 12 00 ff 	andl   $0xfffffeff,0x123d98
  1049cb:	fe ff ff 
  1049ce:	80 3d b8 3d 12 00 73 	cmpb   $0x73,0x123db8
  1049d5:	75 0a                	jne    1049e1 <handle_exception+0x411>
  1049d7:	81 0d 98 3d 12 00 00 	orl    $0x100,0x123d98
  1049de:	01 00 00 
  1049e1:	e8 e2 f7 ff ff       	call   1041c8 <_returnFromException>
  1049e6:	eb 0c                	jmp    1049f4 <handle_exception+0x424>
  1049e8:	c6 05 88 72 10 00 00 	movb   $0x0,0x107288
  1049ef:	e8 d0 0c 00 00       	call   1056c4 <FlamingExit>
  1049f4:	68 60 66 12 00       	push   $0x126660
  1049f9:	e8 2a f9 ff ff       	call   104328 <putpacket>
  1049fe:	83 c4 04             	add    $0x4,%esp
  104a01:	e9 7a fc ff ff       	jmp    104680 <handle_exception+0xb0>
  104a06:	8d 36                	lea    (%esi),%esi

00104a08 <set_debug_traps>:
  104a08:	55                   	push   %ebp
  104a09:	89 e5                	mov    %esp,%ebp
  104a0b:	c7 05 84 71 10 00 5c 	movl   $0x12665c,0x107184
  104a12:	66 12 00 
  104a15:	68 c9 39 10 00       	push   $0x1039c9
  104a1a:	6a 00                	push   $0x0
  104a1c:	e8 5f 1d 00 00       	call   106780 <exceptionHandler>
  104a21:	68 33 39 10 00       	push   $0x103933
  104a26:	6a 01                	push   $0x1
  104a28:	e8 53 1d 00 00       	call   106780 <exceptionHandler>
  104a2d:	68 9d 38 10 00       	push   $0x10389d
  104a32:	6a 03                	push   $0x3
  104a34:	e8 47 1d 00 00       	call   106780 <exceptionHandler>
  104a39:	68 5f 3a 10 00       	push   $0x103a5f
  104a3e:	6a 04                	push   $0x4
  104a40:	e8 3b 1d 00 00       	call   106780 <exceptionHandler>
  104a45:	83 c4 20             	add    $0x20,%esp
  104a48:	68 f5 3a 10 00       	push   $0x103af5
  104a4d:	6a 05                	push   $0x5
  104a4f:	e8 2c 1d 00 00       	call   106780 <exceptionHandler>
  104a54:	68 8b 3b 10 00       	push   $0x103b8b
  104a59:	6a 06                	push   $0x6
  104a5b:	e8 20 1d 00 00       	call   106780 <exceptionHandler>
  104a60:	68 21 3c 10 00       	push   $0x103c21
  104a65:	6a 07                	push   $0x7
  104a67:	e8 14 1d 00 00       	call   106780 <exceptionHandler>
  104a6c:	68 b7 3c 10 00       	push   $0x103cb7
  104a71:	6a 08                	push   $0x8
  104a73:	e8 08 1d 00 00       	call   106780 <exceptionHandler>
  104a78:	83 c4 20             	add    $0x20,%esp
  104a7b:	68 54 3d 10 00       	push   $0x103d54
  104a80:	6a 09                	push   $0x9
  104a82:	e8 f9 1c 00 00       	call   106780 <exceptionHandler>
  104a87:	68 ea 3d 10 00       	push   $0x103dea
  104a8c:	6a 0a                	push   $0xa
  104a8e:	e8 ed 1c 00 00       	call   106780 <exceptionHandler>
  104a93:	68 64 40 10 00       	push   $0x104064
  104a98:	6a 0b                	push   $0xb
  104a9a:	e8 e1 1c 00 00       	call   106780 <exceptionHandler>
  104a9f:	68 87 3e 10 00       	push   $0x103e87
  104aa4:	6a 0c                	push   $0xc
  104aa6:	e8 d5 1c 00 00       	call   106780 <exceptionHandler>
  104aab:	83 c4 20             	add    $0x20,%esp
  104aae:	68 ba 3f 10 00       	push   $0x103fba
  104ab3:	6a 0d                	push   $0xd
  104ab5:	e8 c6 1c 00 00       	call   106780 <exceptionHandler>
  104aba:	68 0e 41 10 00       	push   $0x10410e
  104abf:	6a 0e                	push   $0xe
  104ac1:	e8 ba 1c 00 00       	call   106780 <exceptionHandler>
  104ac6:	68 24 3f 10 00       	push   $0x103f24
  104acb:	6a 10                	push   $0x10
  104acd:	e8 ae 1c 00 00       	call   106780 <exceptionHandler>
  104ad2:	83 c4 18             	add    $0x18,%esp
  104ad5:	81 3d 48 3f 12 00 b8 	cmpl   $0x1041b8,0x123f48
  104adc:	41 10 00 
  104adf:	74 14                	je     104af5 <set_debug_traps+0xed>
  104ae1:	a1 48 3f 12 00       	mov    0x123f48,%eax
  104ae6:	a3 8c 72 10 00       	mov    %eax,0x10728c
  104aeb:	c7 05 48 3f 12 00 b8 	movl   $0x1041b8,0x123f48
  104af2:	41 10 00 
  104af5:	6a 2b                	push   $0x2b
  104af7:	e8 54 1c 00 00       	call   106750 <putDebugChar>
  104afc:	68 0b 6d 10 00       	push   $0x106d0b
  104b01:	e8 a2 0a 00 00       	call   1055a8 <cons_putstr>
  104b06:	c6 05 88 72 10 00 01 	movb   $0x1,0x107288
  104b0d:	c9                   	leave  
  104b0e:	c3                   	ret    

00104b0f <GDBexit>:
  104b0f:	a3 74 3d 12 00       	mov    %eax,0x123d74
  104b14:	89 0d 78 3d 12 00    	mov    %ecx,0x123d78
  104b1a:	89 15 7c 3d 12 00    	mov    %edx,0x123d7c
  104b20:	89 1d 80 3d 12 00    	mov    %ebx,0x123d80
  104b26:	89 2d 88 3d 12 00    	mov    %ebp,0x123d88
  104b2c:	89 35 8c 3d 12 00    	mov    %esi,0x123d8c
  104b32:	89 3d 90 3d 12 00    	mov    %edi,0x123d90
  104b38:	66 b8 00 00          	mov    $0x0,%ax
  104b3c:	66                   	data16
  104b3d:	8c 1d a4 3d 12 00    	mov    %ds,0x123da4
  104b43:	66 a3 a6 3d 12 00    	mov    %ax,0x123da6
  104b49:	66                   	data16
  104b4a:	8c 05 a8 3d 12 00    	mov    %es,0x123da8
  104b50:	66 a3 aa 3d 12 00    	mov    %ax,0x123daa
  104b56:	66                   	data16
  104b57:	8c 25 ac 3d 12 00    	mov    %fs,0x123dac
  104b5d:	66 a3 ae 3d 12 00    	mov    %ax,0x123dae
  104b63:	66                   	data16
  104b64:	8c 2d b0 3d 12 00    	mov    %gs,0x123db0
  104b6a:	66 a3 b2 3d 12 00    	mov    %ax,0x123db2
  104b70:	5b                   	pop    %ebx
  104b71:	89 1d 94 3d 12 00    	mov    %ebx,0x123d94
  104b77:	5b                   	pop    %ebx
  104b78:	89 1d 9c 3d 12 00    	mov    %ebx,0x123d9c
  104b7e:	66 a3 9e 3d 12 00    	mov    %ax,0x123d9e
  104b84:	5b                   	pop    %ebx
  104b85:	89 1d 98 3d 12 00    	mov    %ebx,0x123d98
  104b8b:	66                   	data16
  104b8c:	8c 15 a0 3d 12 00    	mov    %ss,0x123da0
  104b92:	66 a3 a2 3d 12 00    	mov    %ax,0x123da2
  104b98:	89 25 84 3d 12 00    	mov    %esp,0x123d84
  104b9e:	31 c0                	xor    %eax,%eax
  104ba0:	a3 4c 3f 12 00       	mov    %eax,0x123f4c
  104ba5:	6a fe                	push   $0xfffffffe
  104ba7:	e8 0c f6 ff ff       	call   1041b8 <_remcomHandler>
  104bac:	c3                   	ret    
  104bad:	8d 76 00             	lea    0x0(%esi),%esi

00104bb0 <breakpoint>:
  104bb0:	55                   	push   %ebp
  104bb1:	89 e5                	mov    %esp,%ebp
  104bb3:	80 3d 88 72 10 00 00 	cmpb   $0x0,0x107288
  104bba:	74 01                	je     104bbd <breakpoint+0xd>
  104bbc:	cc                   	int3   
  104bbd:	e8 02 00 00 00       	call   104bc4 <waitabit>
  104bc2:	c9                   	leave  
  104bc3:	c3                   	ret    

00104bc4 <waitabit>:
  104bc4:	55                   	push   %ebp
  104bc5:	89 e5                	mov    %esp,%ebp
  104bc7:	31 d2                	xor    %edx,%edx
  104bc9:	39 15 90 71 10 00    	cmp    %edx,0x107190
  104bcf:	7e 0e                	jle    104bdf <waitabit+0x1b>
  104bd1:	8d 76 00             	lea    0x0(%esi),%esi
  104bd4:	e4 80                	in     $0x80,%al
  104bd6:	42                   	inc    %edx
  104bd7:	39 15 90 71 10 00    	cmp    %edx,0x107190
  104bdd:	7f f5                	jg     104bd4 <waitabit+0x10>
  104bdf:	c9                   	leave  
  104be0:	c3                   	ret    
  104be1:	90                   	nop
  104be2:	90                   	nop
  104be3:	90                   	nop

00104be4 <brk>:
  104be4:	55                   	push   %ebp
  104be5:	89 e5                	mov    %esp,%ebp
  104be7:	8b 45 08             	mov    0x8(%ebp),%eax
  104bea:	83 c0 0f             	add    $0xf,%eax
  104bed:	24 f0                	and    $0xf0,%al
  104bef:	83 3d 94 72 10 00 00 	cmpl   $0x0,0x107294
  104bf6:	75 18                	jne    104c10 <brk+0x2c>
  104bf8:	a3 98 72 10 00       	mov    %eax,0x107298
  104bfd:	a3 94 72 10 00       	mov    %eax,0x107294
  104c02:	c7 05 f0 67 12 00 00 	movl   $0xe00000,0x1267f0
  104c09:	00 e0 00 
  104c0c:	31 c0                	xor    %eax,%eax
  104c0e:	c9                   	leave  
  104c0f:	c3                   	ret    
  104c10:	39 05 94 72 10 00    	cmp    %eax,0x107294
  104c16:	76 05                	jbe    104c1d <brk+0x39>
  104c18:	a1 94 72 10 00       	mov    0x107294,%eax
  104c1d:	a3 98 72 10 00       	mov    %eax,0x107298
  104c22:	31 c0                	xor    %eax,%eax
  104c24:	c9                   	leave  
  104c25:	c3                   	ret    
  104c26:	8d 36                	lea    (%esi),%esi

00104c28 <sbrk>:
  104c28:	55                   	push   %ebp
  104c29:	89 e5                	mov    %esp,%ebp
  104c2b:	8b 55 08             	mov    0x8(%ebp),%edx
  104c2e:	a1 98 72 10 00       	mov    0x107298,%eax
  104c33:	85 d2                	test   %edx,%edx
  104c35:	74 2f                	je     104c66 <sbrk+0x3e>
  104c37:	83 c2 0f             	add    $0xf,%edx
  104c3a:	80 e2 f0             	and    $0xf0,%dl
  104c3d:	01 c2                	add    %eax,%edx
  104c3f:	39 15 94 72 10 00    	cmp    %edx,0x107294
  104c45:	77 08                	ja     104c4f <sbrk+0x27>
  104c47:	39 15 f0 67 12 00    	cmp    %edx,0x1267f0
  104c4d:	77 11                	ja     104c60 <sbrk+0x38>
  104c4f:	68 1c 6d 10 00       	push   $0x106d1c
  104c54:	e8 97 0a 00 00       	call   1056f0 <putstr>
  104c59:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
  104c5e:	c9                   	leave  
  104c5f:	c3                   	ret    
  104c60:	89 15 98 72 10 00    	mov    %edx,0x107298
  104c66:	c9                   	leave  
  104c67:	c3                   	ret    

00104c68 <cons_update_video_cursor>:
  104c68:	55                   	push   %ebp
  104c69:	89 e5                	mov    %esp,%ebp
  104c6b:	53                   	push   %ebx
  104c6c:	0f b6 05 99 71 10 00 	movzbl 0x107199,%eax
  104c73:	8d 04 80             	lea    (%eax,%eax,4),%eax
  104c76:	89 c3                	mov    %eax,%ebx
  104c78:	66 c1 e3 04          	shl    $0x4,%bx
  104c7c:	66 0f b6 05 98 71 10 	movzbw 0x107198,%ax
  104c83:	00 
  104c84:	66 01 c3             	add    %ax,%bx
  104c87:	6a 0e                	push   $0xe
  104c89:	68 d4 03 00 00       	push   $0x3d4
  104c8e:	e8 f9 0d 00 00       	call   105a8c <outportb>
  104c93:	89 d8                	mov    %ebx,%eax
  104c95:	66 c1 e8 08          	shr    $0x8,%ax
  104c99:	25 ff ff 00 00       	and    $0xffff,%eax
  104c9e:	50                   	push   %eax
  104c9f:	68 d5 03 00 00       	push   $0x3d5
  104ca4:	e8 e3 0d 00 00       	call   105a8c <outportb>
  104ca9:	6a 0f                	push   $0xf
  104cab:	68 d4 03 00 00       	push   $0x3d4
  104cb0:	e8 d7 0d 00 00       	call   105a8c <outportb>
  104cb5:	0f b6 c3             	movzbl %bl,%eax
  104cb8:	50                   	push   %eax
  104cb9:	68 d5 03 00 00       	push   $0x3d5
  104cbe:	e8 c9 0d 00 00       	call   105a8c <outportb>
  104cc3:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  104cc6:	c9                   	leave  
  104cc7:	c3                   	ret    

00104cc8 <cons_scroll_up>:
  104cc8:	55                   	push   %ebp
  104cc9:	89 e5                	mov    %esp,%ebp
  104ccb:	31 d2                	xor    %edx,%edx
  104ccd:	8b 0d 94 71 10 00    	mov    0x107194,%ecx
  104cd3:	90                   	nop
  104cd4:	66 8b 84 51 a0 00 00 	mov    0xa0(%ecx,%edx,2),%ax
  104cdb:	00 
  104cdc:	66 89 04 51          	mov    %ax,(%ecx,%edx,2)
  104ce0:	42                   	inc    %edx
  104ce1:	81 fa 7f 07 00 00    	cmp    $0x77f,%edx
  104ce7:	76 eb                	jbe    104cd4 <cons_scroll_up+0xc>
  104ce9:	ba 80 07 00 00       	mov    $0x780,%edx
  104cee:	8b 0d 94 71 10 00    	mov    0x107194,%ecx
  104cf4:	66 a1 9c 71 10 00    	mov    0x10719c,%ax
  104cfa:	0c 20                	or     $0x20,%al
  104cfc:	66 89 04 51          	mov    %ax,(%ecx,%edx,2)
  104d00:	42                   	inc    %edx
  104d01:	81 fa cf 07 00 00    	cmp    $0x7cf,%edx
  104d07:	76 f3                	jbe    104cfc <cons_scroll_up+0x34>
  104d09:	c9                   	leave  
  104d0a:	c3                   	ret    
  104d0b:	90                   	nop

00104d0c <cons_putchar>:
  104d0c:	55                   	push   %ebp
  104d0d:	89 e5                	mov    %esp,%ebp
  104d0f:	83 ec 04             	sub    $0x4,%esp
  104d12:	53                   	push   %ebx
  104d13:	8b 5d 08             	mov    0x8(%ebp),%ebx
  104d16:	8d 45 fc             	lea    -0x4(%ebp),%eax
  104d19:	50                   	push   %eax
  104d1a:	e8 c5 0f 00 00       	call   105ce4 <splhigh>
  104d1f:	83 c4 04             	add    $0x4,%esp
  104d22:	8d 43 f8             	lea    -0x8(%ebx),%eax
  104d25:	83 f8 05             	cmp    $0x5,%eax
  104d28:	77 6a                	ja     104d94 <cons_putchar+0x88>
  104d2a:	ff 24 85 34 4d 10 00 	jmp    *0x104d34(,%eax,4)
  104d31:	8d 76 00             	lea    0x0(%esi),%esi
  104d34:	78 4d                	js     104d83 <cons_putchar+0x77>
  104d36:	10 00                	adc    %al,(%eax)
  104d38:	4c                   	dec    %esp
  104d39:	4d                   	dec    %ebp
  104d3a:	10 00                	adc    %al,(%eax)
  104d3c:	70 4d                	jo     104d8b <cons_putchar+0x7f>
  104d3e:	10 00                	adc    %al,(%eax)
  104d40:	94                   	xchg   %eax,%esp
  104d41:	4d                   	dec    %ebp
  104d42:	10 00                	adc    %al,(%eax)
  104d44:	8c 4d 10             	mov    %cs,0x10(%ebp)
  104d47:	00 64 4d 10          	add    %ah,0x10(%ebp,%ecx,2)
  104d4b:	00 6a 20             	add    %ch,0x20(%edx)
  104d4e:	e8 b9 ff ff ff       	call   104d0c <cons_putchar>
  104d53:	83 c4 04             	add    $0x4,%esp
  104d56:	f6 05 98 71 10 00 07 	testb  $0x7,0x107198
  104d5d:	75 ed                	jne    104d4c <cons_putchar+0x40>
  104d5f:	e9 8a 00 00 00       	jmp    104dee <cons_putchar+0xe2>
  104d64:	c6 05 98 71 10 00 00 	movb   $0x0,0x107198
  104d6b:	e9 7e 00 00 00       	jmp    104dee <cons_putchar+0xe2>
  104d70:	e8 8f 00 00 00       	call   104e04 <cons_println>
  104d75:	eb 77                	jmp    104dee <cons_putchar+0xe2>
  104d77:	90                   	nop
  104d78:	80 3d 98 71 10 00 00 	cmpb   $0x0,0x107198
  104d7f:	74 6d                	je     104dee <cons_putchar+0xe2>
  104d81:	fe 0d 98 71 10 00    	decb   0x107198
  104d87:	eb 65                	jmp    104dee <cons_putchar+0xe2>
  104d89:	8d 76 00             	lea    0x0(%esi),%esi
  104d8c:	e8 b3 00 00 00       	call   104e44 <cons_clear>
  104d91:	eb 5b                	jmp    104dee <cons_putchar+0xe2>
  104d93:	90                   	nop
  104d94:	0f b6 05 99 71 10 00 	movzbl 0x107199,%eax
  104d9b:	0f b6 15 98 71 10 00 	movzbl 0x107198,%edx
  104da2:	8d 04 80             	lea    (%eax,%eax,4),%eax
  104da5:	c1 e0 04             	shl    $0x4,%eax
  104da8:	01 d0                	add    %edx,%eax
  104daa:	8b 15 94 71 10 00    	mov    0x107194,%edx
  104db0:	66 8b 0d 9c 71 10 00 	mov    0x10719c,%cx
  104db7:	66 09 d9             	or     %bx,%cx
  104dba:	66 89 0c 42          	mov    %cx,(%edx,%eax,2)
  104dbe:	fe 05 98 71 10 00    	incb   0x107198
  104dc4:	80 3d 98 71 10 00 4f 	cmpb   $0x4f,0x107198
  104dcb:	76 21                	jbe    104dee <cons_putchar+0xe2>
  104dcd:	c6 05 98 71 10 00 00 	movb   $0x0,0x107198
  104dd4:	fe 05 99 71 10 00    	incb   0x107199
  104dda:	80 3d 99 71 10 00 18 	cmpb   $0x18,0x107199
  104de1:	76 0b                	jbe    104dee <cons_putchar+0xe2>
  104de3:	e8 e0 fe ff ff       	call   104cc8 <cons_scroll_up>
  104de8:	fe 0d 99 71 10 00    	decb   0x107199
  104dee:	e8 75 fe ff ff       	call   104c68 <cons_update_video_cursor>
  104df3:	8d 45 fc             	lea    -0x4(%ebp),%eax
  104df6:	50                   	push   %eax
  104df7:	e8 f4 0e 00 00       	call   105cf0 <splx>
  104dfc:	8b 5d f8             	mov    -0x8(%ebp),%ebx
  104dff:	c9                   	leave  
  104e00:	c3                   	ret    
  104e01:	8d 76 00             	lea    0x0(%esi),%esi

00104e04 <cons_println>:
  104e04:	55                   	push   %ebp
  104e05:	89 e5                	mov    %esp,%ebp
  104e07:	83 ec 04             	sub    $0x4,%esp
  104e0a:	8d 45 fc             	lea    -0x4(%ebp),%eax
  104e0d:	50                   	push   %eax
  104e0e:	e8 d1 0e 00 00       	call   105ce4 <splhigh>
  104e13:	c6 05 98 71 10 00 00 	movb   $0x0,0x107198
  104e1a:	fe 05 99 71 10 00    	incb   0x107199
  104e20:	83 c4 04             	add    $0x4,%esp
  104e23:	80 3d 99 71 10 00 18 	cmpb   $0x18,0x107199
  104e2a:	76 0b                	jbe    104e37 <cons_println+0x33>
  104e2c:	e8 97 fe ff ff       	call   104cc8 <cons_scroll_up>
  104e31:	fe 0d 99 71 10 00    	decb   0x107199
  104e37:	8d 45 fc             	lea    -0x4(%ebp),%eax
  104e3a:	50                   	push   %eax
  104e3b:	e8 b0 0e 00 00       	call   105cf0 <splx>
  104e40:	c9                   	leave  
  104e41:	c3                   	ret    
  104e42:	8d 36                	lea    (%esi),%esi

00104e44 <cons_clear>:
  104e44:	55                   	push   %ebp
  104e45:	89 e5                	mov    %esp,%ebp
  104e47:	83 ec 04             	sub    $0x4,%esp
  104e4a:	57                   	push   %edi
  104e4b:	56                   	push   %esi
  104e4c:	53                   	push   %ebx
  104e4d:	8d 45 fc             	lea    -0x4(%ebp),%eax
  104e50:	50                   	push   %eax
  104e51:	e8 8e 0e 00 00       	call   105ce4 <splhigh>
  104e56:	31 c9                	xor    %ecx,%ecx
  104e58:	83 c4 04             	add    $0x4,%esp
  104e5b:	8b 3d 94 71 10 00    	mov    0x107194,%edi
  104e61:	66 8b 35 9c 71 10 00 	mov    0x10719c,%si
  104e68:	66 83 ce 20          	or     $0x20,%si
  104e6c:	88 0d 99 71 10 00    	mov    %cl,0x107199
  104e72:	31 d2                	xor    %edx,%edx
  104e74:	0f b6 c1             	movzbl %cl,%eax
  104e77:	8d 04 80             	lea    (%eax,%eax,4),%eax
  104e7a:	89 c3                	mov    %eax,%ebx
  104e7c:	c1 e3 04             	shl    $0x4,%ebx
  104e7f:	90                   	nop
  104e80:	88 15 98 71 10 00    	mov    %dl,0x107198
  104e86:	0f b6 c2             	movzbl %dl,%eax
  104e89:	01 d8                	add    %ebx,%eax
  104e8b:	66 89 34 47          	mov    %si,(%edi,%eax,2)
  104e8f:	42                   	inc    %edx
  104e90:	83 fa 4f             	cmp    $0x4f,%edx
  104e93:	7e eb                	jle    104e80 <cons_clear+0x3c>
  104e95:	41                   	inc    %ecx
  104e96:	83 f9 18             	cmp    $0x18,%ecx
  104e99:	7e d1                	jle    104e6c <cons_clear+0x28>
  104e9b:	c6 05 98 71 10 00 00 	movb   $0x0,0x107198
  104ea2:	c6 05 99 71 10 00 00 	movb   $0x0,0x107199
  104ea9:	8d 45 fc             	lea    -0x4(%ebp),%eax
  104eac:	50                   	push   %eax
  104ead:	e8 3e 0e 00 00       	call   105cf0 <splx>
  104eb2:	8d 65 f0             	lea    -0x10(%ebp),%esp
  104eb5:	5b                   	pop    %ebx
  104eb6:	5e                   	pop    %esi
  104eb7:	5f                   	pop    %edi
  104eb8:	c9                   	leave  
  104eb9:	c3                   	ret    
  104eba:	8d 36                	lea    (%esi),%esi

00104ebc <cons_gotoRC>:
  104ebc:	55                   	push   %ebp
  104ebd:	89 e5                	mov    %esp,%ebp
  104ebf:	83 ec 04             	sub    $0x4,%esp
  104ec2:	56                   	push   %esi
  104ec3:	53                   	push   %ebx
  104ec4:	8b 5d 08             	mov    0x8(%ebp),%ebx
  104ec7:	8b 75 0c             	mov    0xc(%ebp),%esi
  104eca:	8d 45 fc             	lea    -0x4(%ebp),%eax
  104ecd:	50                   	push   %eax
  104ece:	e8 11 0e 00 00       	call   105ce4 <splhigh>
  104ed3:	83 c4 04             	add    $0x4,%esp
  104ed6:	85 db                	test   %ebx,%ebx
  104ed8:	7c 17                	jl     104ef1 <cons_gotoRC+0x35>
  104eda:	85 f6                	test   %esi,%esi
  104edc:	7c 13                	jl     104ef1 <cons_gotoRC+0x35>
  104ede:	88 1d 99 71 10 00    	mov    %bl,0x107199
  104ee4:	89 f2                	mov    %esi,%edx
  104ee6:	88 15 98 71 10 00    	mov    %dl,0x107198
  104eec:	e8 77 fd ff ff       	call   104c68 <cons_update_video_cursor>
  104ef1:	8d 45 fc             	lea    -0x4(%ebp),%eax
  104ef4:	50                   	push   %eax
  104ef5:	e8 f6 0d 00 00       	call   105cf0 <splx>
  104efa:	8d 65 f4             	lea    -0xc(%ebp),%esp
  104efd:	5b                   	pop    %ebx
  104efe:	5e                   	pop    %esi
  104eff:	c9                   	leave  
  104f00:	c3                   	ret    
  104f01:	8d 76 00             	lea    0x0(%esi),%esi

00104f04 <cons_kbhit>:
  104f04:	55                   	push   %ebp
  104f05:	89 e5                	mov    %esp,%ebp
  104f07:	83 ec 04             	sub    $0x4,%esp
  104f0a:	53                   	push   %ebx
  104f0b:	8d 5d fc             	lea    -0x4(%ebp),%ebx
  104f0e:	53                   	push   %ebx
  104f0f:	e8 d0 0d 00 00       	call   105ce4 <splhigh>
  104f14:	83 c4 04             	add    $0x4,%esp
  104f17:	83 3d 9c 72 10 00 00 	cmpl   $0x0,0x10729c
  104f1e:	74 08                	je     104f28 <cons_kbhit+0x24>
  104f20:	53                   	push   %ebx
  104f21:	e9 d7 05 00 00       	jmp    1054fd <cons_kbhit+0x5f9>
  104f26:	8d 36                	lea    (%esi),%esi
  104f28:	6a 64                	push   $0x64
  104f2a:	e8 55 0b 00 00       	call   105a84 <inportb>
  104f2f:	83 c4 04             	add    $0x4,%esp
  104f32:	a8 01                	test   $0x1,%al
  104f34:	75 12                	jne    104f48 <cons_kbhit+0x44>
  104f36:	8d 45 fc             	lea    -0x4(%ebp),%eax
  104f39:	50                   	push   %eax
  104f3a:	e8 b1 0d 00 00       	call   105cf0 <splx>
  104f3f:	31 c0                	xor    %eax,%eax
  104f41:	e9 c1 05 00 00       	jmp    105507 <cons_kbhit+0x603>
  104f46:	8d 36                	lea    (%esi),%esi
  104f48:	6a 60                	push   $0x60
  104f4a:	e8 35 0b 00 00       	call   105a84 <inportb>
  104f4f:	88 c1                	mov    %al,%cl
  104f51:	83 c4 04             	add    $0x4,%esp
  104f54:	0f b6 c1             	movzbl %cl,%eax
  104f57:	3d ff 00 00 00       	cmp    $0xff,%eax
  104f5c:	0f 87 22 05 00 00    	ja     105484 <cons_kbhit+0x580>
  104f62:	ff 24 85 6c 4f 10 00 	jmp    *0x104f6c(,%eax,4)
  104f69:	8d 76 00             	lea    0x0(%esi),%esi
  104f6c:	74 54                	je     104fc2 <cons_kbhit+0xbe>
  104f6e:	10 00                	adc    %al,(%eax)
  104f70:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  104f74:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  104f78:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  104f7c:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  104f80:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  104f84:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  104f88:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  104f8c:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  104f90:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  104f94:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  104f98:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  104f9c:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  104fa0:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  104fa4:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  104fa8:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  104fac:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  104fb0:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  104fb4:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  104fb8:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  104fbc:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  104fc0:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  104fc4:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  104fc8:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  104fcc:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  104fd0:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  104fd4:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  104fd8:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  104fdc:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  104fe0:	44                   	inc    %esp
  104fe1:	54                   	push   %esp
  104fe2:	10 00                	adc    %al,(%eax)
  104fe4:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  104fe8:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  104fec:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  104ff0:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  104ff4:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  104ff8:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  104ffc:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105000:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105004:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105008:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  10500c:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105010:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105014:	6c                   	insb   (%dx),%es:(%edi)
  105015:	53                   	push   %ebx
  105016:	10 00                	adc    %al,(%eax)
  105018:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  10501c:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105020:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105024:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105028:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  10502c:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105030:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105034:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105038:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  10503c:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105040:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105044:	6c                   	insb   (%dx),%es:(%edi)
  105045:	53                   	push   %ebx
  105046:	10 00                	adc    %al,(%eax)
  105048:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  10504c:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105050:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105054:	28 4f 10             	sub    %cl,0x10(%edi)
  105057:	00 7c 53 10          	add    %bh,0x10(%ebx,%edx,2)
  10505b:	00 88 53 10 00 94    	add    %cl,-0x6bffefad(%eax)
  105061:	53                   	push   %ebx
  105062:	10 00                	adc    %al,(%eax)
  105064:	a0 53 10 00 ac       	mov    0xac001053,%al
  105069:	53                   	push   %ebx
  10506a:	10 00                	adc    %al,(%eax)
  10506c:	b8 53 10 00 c4       	mov    $0xc4001053,%eax
  105071:	53                   	push   %ebx
  105072:	10 00                	adc    %al,(%eax)
  105074:	d0 53 10             	rclb   0x10(%ebx)
  105077:	00 dc                	add    %bl,%ah
  105079:	53                   	push   %ebx
  10507a:	10 00                	adc    %al,(%eax)
  10507c:	e8 53 10 00 28       	call   281060d4 <_end+0x27fdf8d7>
  105081:	4f                   	dec    %edi
  105082:	10 00                	adc    %al,(%eax)
  105084:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105088:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  10508c:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105090:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105094:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105098:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  10509c:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  1050a0:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  1050a4:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  1050a8:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  1050ac:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  1050b0:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  1050b4:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  1050b8:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  1050bc:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  1050c0:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  1050c4:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  1050c8:	f4                   	hlt    
  1050c9:	53                   	push   %ebx
  1050ca:	10 00                	adc    %al,(%eax)
  1050cc:	00 54 10 00          	add    %dl,0x0(%eax,%edx,1)
  1050d0:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  1050d4:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  1050d8:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  1050dc:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  1050e0:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  1050e4:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  1050e8:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  1050ec:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  1050f0:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  1050f4:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  1050f8:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  1050fc:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105100:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105104:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105108:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  10510c:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105110:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105114:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105118:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  10511c:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105120:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105124:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105128:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  10512c:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105130:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105134:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105138:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  10513c:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105140:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105144:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105148:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  10514c:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105150:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105154:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105158:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  10515c:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105160:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105164:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105168:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  10516c:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105170:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105174:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105178:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  10517c:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105180:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105184:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105188:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  10518c:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105190:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105194:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105198:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  10519c:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  1051a0:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  1051a4:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  1051a8:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  1051ac:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  1051b0:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  1051b4:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  1051b8:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  1051bc:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  1051c0:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  1051c4:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  1051c8:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  1051cc:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  1051d0:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  1051d4:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  1051d8:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  1051dc:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  1051e0:	64                   	fs
  1051e1:	54                   	push   %esp
  1051e2:	10 00                	adc    %al,(%eax)
  1051e4:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  1051e8:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  1051ec:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  1051f0:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  1051f4:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  1051f8:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  1051fc:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105200:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105204:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105208:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  10520c:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105210:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105214:	54                   	push   %esp
  105215:	54                   	push   %esp
  105216:	10 00                	adc    %al,(%eax)
  105218:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  10521c:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105220:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105224:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105228:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  10522c:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105230:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105234:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105238:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  10523c:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105240:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105244:	54                   	push   %esp
  105245:	54                   	push   %esp
  105246:	10 00                	adc    %al,(%eax)
  105248:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  10524c:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105250:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105254:	0c 54                	or     $0x54,%al
  105256:	10 00                	adc    %al,(%eax)
  105258:	28 4f 10             	sub    %cl,0x10(%edi)
  10525b:	00 28                	add    %ch,(%eax)
  10525d:	4f                   	dec    %edi
  10525e:	10 00                	adc    %al,(%eax)
  105260:	28 4f 10             	sub    %cl,0x10(%edi)
  105263:	00 28                	add    %ch,(%eax)
  105265:	4f                   	dec    %edi
  105266:	10 00                	adc    %al,(%eax)
  105268:	28 4f 10             	sub    %cl,0x10(%edi)
  10526b:	00 28                	add    %ch,(%eax)
  10526d:	4f                   	dec    %edi
  10526e:	10 00                	adc    %al,(%eax)
  105270:	28 4f 10             	sub    %cl,0x10(%edi)
  105273:	00 28                	add    %ch,(%eax)
  105275:	4f                   	dec    %edi
  105276:	10 00                	adc    %al,(%eax)
  105278:	28 4f 10             	sub    %cl,0x10(%edi)
  10527b:	00 28                	add    %ch,(%eax)
  10527d:	4f                   	dec    %edi
  10527e:	10 00                	adc    %al,(%eax)
  105280:	28 54 10 00          	sub    %dl,0x0(%eax,%edx,1)
  105284:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105288:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  10528c:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105290:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105294:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105298:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  10529c:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  1052a0:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  1052a4:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  1052a8:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  1052ac:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  1052b0:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  1052b4:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  1052b8:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  1052bc:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  1052c0:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  1052c4:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  1052c8:	28 4f 10             	sub    %cl,0x10(%edi)
  1052cb:	00 28                	add    %ch,(%eax)
  1052cd:	4f                   	dec    %edi
  1052ce:	10 00                	adc    %al,(%eax)
  1052d0:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  1052d4:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  1052d8:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  1052dc:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  1052e0:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  1052e4:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  1052e8:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  1052ec:	28 4f 10             	sub    %cl,0x10(%edi)
  1052ef:	00 84 54 10 00 84 54 	add    %al,0x54840010(%esp,%edx,2)
  1052f6:	10 00                	adc    %al,(%eax)
  1052f8:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  1052fc:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105300:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105304:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105308:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  10530c:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105310:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105314:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105318:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  10531c:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105320:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105324:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105328:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  10532c:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105330:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105334:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105338:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  10533c:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105340:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105344:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105348:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  10534c:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105350:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105354:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105358:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  10535c:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105360:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105364:	84 54 10 00          	test   %dl,0x0(%eax,%edx,1)
  105368:	74 54                	je     1053be <cons_kbhit+0x4ba>
  10536a:	10 00                	adc    %al,(%eax)
  10536c:	c7 05 48 72 10 00 01 	movl   $0x1,0x107248
  105373:	00 00 00 
  105376:	e9 ad fb ff ff       	jmp    104f28 <cons_kbhit+0x24>
  10537b:	90                   	nop
  10537c:	e8 83 07 00 00       	call   105b04 <_kbd_f1>
  105381:	e9 a2 fb ff ff       	jmp    104f28 <cons_kbhit+0x24>
  105386:	8d 36                	lea    (%esi),%esi
  105388:	e8 7f 07 00 00       	call   105b0c <_kbd_f2>
  10538d:	e9 96 fb ff ff       	jmp    104f28 <cons_kbhit+0x24>
  105392:	8d 36                	lea    (%esi),%esi
  105394:	e8 7b 07 00 00       	call   105b14 <_kbd_f3>
  105399:	e9 8a fb ff ff       	jmp    104f28 <cons_kbhit+0x24>
  10539e:	8d 36                	lea    (%esi),%esi
  1053a0:	e8 77 07 00 00       	call   105b1c <_kbd_f4>
  1053a5:	e9 7e fb ff ff       	jmp    104f28 <cons_kbhit+0x24>
  1053aa:	8d 36                	lea    (%esi),%esi
  1053ac:	e8 73 07 00 00       	call   105b24 <_kbd_f5>
  1053b1:	e9 72 fb ff ff       	jmp    104f28 <cons_kbhit+0x24>
  1053b6:	8d 36                	lea    (%esi),%esi
  1053b8:	e8 6f 07 00 00       	call   105b2c <_kbd_f6>
  1053bd:	e9 66 fb ff ff       	jmp    104f28 <cons_kbhit+0x24>
  1053c2:	8d 36                	lea    (%esi),%esi
  1053c4:	e8 6b 07 00 00       	call   105b34 <_kbd_f7>
  1053c9:	e9 5a fb ff ff       	jmp    104f28 <cons_kbhit+0x24>
  1053ce:	8d 36                	lea    (%esi),%esi
  1053d0:	e8 67 07 00 00       	call   105b3c <_kbd_f8>
  1053d5:	e9 4e fb ff ff       	jmp    104f28 <cons_kbhit+0x24>
  1053da:	8d 36                	lea    (%esi),%esi
  1053dc:	e8 63 07 00 00       	call   105b44 <_kbd_f9>
  1053e1:	e9 42 fb ff ff       	jmp    104f28 <cons_kbhit+0x24>
  1053e6:	8d 36                	lea    (%esi),%esi
  1053e8:	e8 ff 06 00 00       	call   105aec <_kbd_f10>
  1053ed:	e9 36 fb ff ff       	jmp    104f28 <cons_kbhit+0x24>
  1053f2:	8d 36                	lea    (%esi),%esi
  1053f4:	e8 fb 06 00 00       	call   105af4 <_kbd_f11>
  1053f9:	e9 2a fb ff ff       	jmp    104f28 <cons_kbhit+0x24>
  1053fe:	8d 36                	lea    (%esi),%esi
  105400:	e8 f7 06 00 00       	call   105afc <_kbd_f12>
  105405:	e9 1e fb ff ff       	jmp    104f28 <cons_kbhit+0x24>
  10540a:	8d 36                	lea    (%esi),%esi
  10540c:	83 3d 54 72 10 00 00 	cmpl   $0x0,0x107254
  105413:	0f 94 c0             	sete   %al
  105416:	25 ff 00 00 00       	and    $0xff,%eax
  10541b:	a3 54 72 10 00       	mov    %eax,0x107254
  105420:	e9 03 fb ff ff       	jmp    104f28 <cons_kbhit+0x24>
  105425:	8d 76 00             	lea    0x0(%esi),%esi
  105428:	83 3d 50 72 10 00 00 	cmpl   $0x0,0x107250
  10542f:	0f 94 c0             	sete   %al
  105432:	25 ff 00 00 00       	and    $0xff,%eax
  105437:	a3 50 72 10 00       	mov    %eax,0x107250
  10543c:	e9 e7 fa ff ff       	jmp    104f28 <cons_kbhit+0x24>
  105441:	8d 76 00             	lea    0x0(%esi),%esi
  105444:	c7 05 4c 72 10 00 01 	movl   $0x1,0x10724c
  10544b:	00 00 00 
  10544e:	e9 d5 fa ff ff       	jmp    104f28 <cons_kbhit+0x24>
  105453:	90                   	nop
  105454:	c7 05 48 72 10 00 00 	movl   $0x0,0x107248
  10545b:	00 00 00 
  10545e:	e9 c5 fa ff ff       	jmp    104f28 <cons_kbhit+0x24>
  105463:	90                   	nop
  105464:	c7 05 4c 72 10 00 00 	movl   $0x0,0x10724c
  10546b:	00 00 00 
  10546e:	e9 b5 fa ff ff       	jmp    104f28 <cons_kbhit+0x24>
  105473:	90                   	nop
  105474:	6a 21                	push   $0x21
  105476:	e8 91 f8 ff ff       	call   104d0c <cons_putchar>
  10547b:	83 c4 04             	add    $0x4,%esp
  10547e:	e9 a5 fa ff ff       	jmp    104f28 <cons_kbhit+0x24>
  105483:	90                   	nop
  105484:	84 c9                	test   %cl,%cl
  105486:	0f 8c 9c fa ff ff    	jl     104f28 <cons_kbhit+0x24>
  10548c:	80 f9 39             	cmp    $0x39,%cl
  10548f:	0f 87 93 fa ff ff    	ja     104f28 <cons_kbhit+0x24>
  105495:	80 e1 7f             	and    $0x7f,%cl
  105498:	83 3d 48 72 10 00 00 	cmpl   $0x0,0x107248
  10549f:	74 0b                	je     1054ac <cons_kbhit+0x5a8>
  1054a1:	0f b6 c1             	movzbl %cl,%eax
  1054a4:	8a 90 f4 71 10 00    	mov    0x1071f4(%eax),%dl
  1054aa:	eb 09                	jmp    1054b5 <cons_kbhit+0x5b1>
  1054ac:	0f b6 c1             	movzbl %cl,%eax
  1054af:	8a 90 a0 71 10 00    	mov    0x1071a0(%eax),%dl
  1054b5:	80 fa 80             	cmp    $0x80,%dl
  1054b8:	0f 84 6a fa ff ff    	je     104f28 <cons_kbhit+0x24>
  1054be:	83 3d 54 72 10 00 00 	cmpl   $0x0,0x107254
  1054c5:	74 14                	je     1054db <cons_kbhit+0x5d7>
  1054c7:	80 fa 7f             	cmp    $0x7f,%dl
  1054ca:	77 0f                	ja     1054db <cons_kbhit+0x5d7>
  1054cc:	0f b6 c2             	movzbl %dl,%eax
  1054cf:	f6 80 44 6d 10 00 03 	testb  $0x3,0x106d44(%eax)
  1054d6:	74 03                	je     1054db <cons_kbhit+0x5d7>
  1054d8:	80 f2 20             	xor    $0x20,%dl
  1054db:	83 3d 4c 72 10 00 00 	cmpl   $0x0,0x10724c
  1054e2:	74 0c                	je     1054f0 <cons_kbhit+0x5ec>
  1054e4:	0f b6 c1             	movzbl %cl,%eax
  1054e7:	8a 90 a0 71 10 00    	mov    0x1071a0(%eax),%dl
  1054ed:	80 e2 1f             	and    $0x1f,%dl
  1054f0:	0f b6 d2             	movzbl %dl,%edx
  1054f3:	89 15 9c 72 10 00    	mov    %edx,0x10729c
  1054f9:	8d 45 fc             	lea    -0x4(%ebp),%eax
  1054fc:	50                   	push   %eax
  1054fd:	e8 ee 07 00 00       	call   105cf0 <splx>
  105502:	a1 9c 72 10 00       	mov    0x10729c,%eax
  105507:	8b 5d f8             	mov    -0x8(%ebp),%ebx
  10550a:	c9                   	leave  
  10550b:	c3                   	ret    

0010550c <cons_getchar>:
  10550c:	55                   	push   %ebp
  10550d:	89 e5                	mov    %esp,%ebp
  10550f:	90                   	nop
  105510:	e8 ef f9 ff ff       	call   104f04 <cons_kbhit>
  105515:	85 c0                	test   %eax,%eax
  105517:	75 07                	jne    105520 <cons_getchar+0x14>
  105519:	e4 80                	in     $0x80,%al
  10551b:	eb f3                	jmp    105510 <cons_getchar+0x4>
  10551d:	8d 76 00             	lea    0x0(%esi),%esi
  105520:	a1 9c 72 10 00       	mov    0x10729c,%eax
  105525:	c7 05 9c 72 10 00 00 	movl   $0x0,0x10729c
  10552c:	00 00 00 
  10552f:	c9                   	leave  
  105530:	c3                   	ret    
  105531:	8d 76 00             	lea    0x0(%esi),%esi

00105534 <init_cons>:
  105534:	55                   	push   %ebp
  105535:	89 e5                	mov    %esp,%ebp
  105537:	56                   	push   %esi
  105538:	53                   	push   %ebx
  105539:	a1 94 71 10 00       	mov    0x107194,%eax
  10553e:	a3 f8 67 12 00       	mov    %eax,0x1267f8
  105543:	83 3d ac 72 10 00 00 	cmpl   $0x0,0x1072ac
  10554a:	0f 94 c0             	sete   %al
  10554d:	88 05 fc 67 12 00    	mov    %al,0x1267fc
  105553:	c6 05 f4 67 12 00 00 	movb   $0x0,0x1267f4
  10555a:	c7 05 9c 71 10 00 00 	movl   $0x700,0x10719c
  105561:	07 00 00 
  105564:	6a 61                	push   $0x61
  105566:	e8 19 05 00 00       	call   105a84 <inportb>
  10556b:	89 c6                	mov    %eax,%esi
  10556d:	89 f3                	mov    %esi,%ebx
  10556f:	80 e3 7f             	and    $0x7f,%bl
  105572:	53                   	push   %ebx
  105573:	6a 61                	push   $0x61
  105575:	e8 12 05 00 00       	call   105a8c <outportb>
  10557a:	e4 80                	in     $0x80,%al
  10557c:	89 f0                	mov    %esi,%eax
  10557e:	0c 80                	or     $0x80,%al
  105580:	50                   	push   %eax
  105581:	6a 61                	push   $0x61
  105583:	e8 04 05 00 00       	call   105a8c <outportb>
  105588:	e4 80                	in     $0x80,%al
  10558a:	53                   	push   %ebx
  10558b:	6a 61                	push   $0x61
  10558d:	e8 fa 04 00 00       	call   105a8c <outportb>
  105592:	e4 80                	in     $0x80,%al
  105594:	c7 05 9c 72 10 00 00 	movl   $0x0,0x10729c
  10559b:	00 00 00 
  10559e:	8d 65 f8             	lea    -0x8(%ebp),%esp
  1055a1:	5b                   	pop    %ebx
  1055a2:	5e                   	pop    %esi
  1055a3:	c9                   	leave  
  1055a4:	c3                   	ret    
  1055a5:	90                   	nop
  1055a6:	90                   	nop
  1055a7:	90                   	nop

001055a8 <cons_putstr>:
  1055a8:	55                   	push   %ebp
  1055a9:	89 e5                	mov    %esp,%ebp
  1055ab:	53                   	push   %ebx
  1055ac:	8b 5d 08             	mov    0x8(%ebp),%ebx
  1055af:	80 3b 00             	cmpb   $0x0,(%ebx)
  1055b2:	74 12                	je     1055c6 <cons_putstr+0x1e>
  1055b4:	0f be 03             	movsbl (%ebx),%eax
  1055b7:	50                   	push   %eax
  1055b8:	43                   	inc    %ebx
  1055b9:	e8 4e f7 ff ff       	call   104d0c <cons_putchar>
  1055be:	83 c4 04             	add    $0x4,%esp
  1055c1:	80 3b 00             	cmpb   $0x0,(%ebx)
  1055c4:	75 ee                	jne    1055b4 <cons_putstr+0xc>
  1055c6:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  1055c9:	c9                   	leave  
  1055ca:	c3                   	ret    
  1055cb:	90                   	nop

001055cc <cons_getstr>:
  1055cc:	55                   	push   %ebp
  1055cd:	89 e5                	mov    %esp,%ebp
  1055cf:	57                   	push   %edi
  1055d0:	56                   	push   %esi
  1055d1:	53                   	push   %ebx
  1055d2:	8b 75 08             	mov    0x8(%ebp),%esi
  1055d5:	8b 7d 0c             	mov    0xc(%ebp),%edi
  1055d8:	4f                   	dec    %edi
  1055d9:	85 ff                	test   %edi,%edi
  1055db:	7e 47                	jle    105624 <cons_getstr+0x58>
  1055dd:	e8 2a ff ff ff       	call   10550c <cons_getchar>
  1055e2:	89 c3                	mov    %eax,%ebx
  1055e4:	83 fb 0d             	cmp    $0xd,%ebx
  1055e7:	74 3b                	je     105624 <cons_getstr+0x58>
  1055e9:	83 fb 0a             	cmp    $0xa,%ebx
  1055ec:	74 36                	je     105624 <cons_getstr+0x58>
  1055ee:	83 fb 08             	cmp    $0x8,%ebx
  1055f1:	75 1d                	jne    105610 <cons_getstr+0x44>
  1055f3:	39 75 08             	cmp    %esi,0x8(%ebp)
  1055f6:	74 e1                	je     1055d9 <cons_getstr+0xd>
  1055f8:	4e                   	dec    %esi
  1055f9:	47                   	inc    %edi
  1055fa:	6a 08                	push   $0x8
  1055fc:	e8 0b f7 ff ff       	call   104d0c <cons_putchar>
  105601:	6a 20                	push   $0x20
  105603:	e8 04 f7 ff ff       	call   104d0c <cons_putchar>
  105608:	83 c4 08             	add    $0x8,%esp
  10560b:	eb 09                	jmp    105616 <cons_getstr+0x4a>
  10560d:	8d 76 00             	lea    0x0(%esi),%esi
  105610:	88 d8                	mov    %bl,%al
  105612:	88 06                	mov    %al,(%esi)
  105614:	46                   	inc    %esi
  105615:	4f                   	dec    %edi
  105616:	53                   	push   %ebx
  105617:	e8 f0 f6 ff ff       	call   104d0c <cons_putchar>
  10561c:	c6 06 00             	movb   $0x0,(%esi)
  10561f:	83 c4 04             	add    $0x4,%esp
  105622:	eb b5                	jmp    1055d9 <cons_getstr+0xd>
  105624:	6a 0a                	push   $0xa
  105626:	e8 e1 f6 ff ff       	call   104d0c <cons_putchar>
  10562b:	8b 45 08             	mov    0x8(%ebp),%eax
  10562e:	8d 65 f4             	lea    -0xc(%ebp),%esp
  105631:	5b                   	pop    %ebx
  105632:	5e                   	pop    %esi
  105633:	5f                   	pop    %edi
  105634:	c9                   	leave  
  105635:	c3                   	ret    
  105636:	90                   	nop
  105637:	90                   	nop

00105638 <my_putchar>:
  105638:	55                   	push   %ebp
  105639:	89 e5                	mov    %esp,%ebp
  10563b:	ff 75 08             	pushl  0x8(%ebp)
  10563e:	e8 c9 f6 ff ff       	call   104d0c <cons_putchar>
  105643:	c9                   	leave  
  105644:	c3                   	ret    
  105645:	8d 76 00             	lea    0x0(%esi),%esi

00105648 <cons_printf>:
  105648:	55                   	push   %ebp
  105649:	89 e5                	mov    %esp,%ebp
  10564b:	83 ec 10             	sub    $0x10,%esp
  10564e:	c6 45 fd 02          	movb   $0x2,-0x3(%ebp)
  105652:	c7 45 f8 38 56 10 00 	movl   $0x105638,-0x8(%ebp)
  105659:	c7 45 f4 ff 7f 00 00 	movl   $0x7fff,-0xc(%ebp)
  105660:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
  105667:	c6 45 fc 00          	movb   $0x0,-0x4(%ebp)
  10566b:	8d 55 0c             	lea    0xc(%ebp),%edx
  10566e:	8d 45 f0             	lea    -0x10(%ebp),%eax
  105671:	50                   	push   %eax
  105672:	52                   	push   %edx
  105673:	ff 75 08             	pushl  0x8(%ebp)
  105676:	e8 91 08 00 00       	call   105f0c <_doprnt>
  10567b:	c9                   	leave  
  10567c:	c3                   	ret    
  10567d:	90                   	nop
  10567e:	90                   	nop
  10567f:	90                   	nop

00105680 <isxdigit>:
  105680:	55                   	push   %ebp
  105681:	89 e5                	mov    %esp,%ebp
  105683:	8b 55 08             	mov    0x8(%ebp),%edx
  105686:	31 c9                	xor    %ecx,%ecx
  105688:	f6 82 44 6d 10 00 04 	testb  $0x4,0x106d44(%edx)
  10568f:	75 10                	jne    1056a1 <isxdigit+0x21>
  105691:	8d 42 bf             	lea    -0x41(%edx),%eax
  105694:	83 f8 05             	cmp    $0x5,%eax
  105697:	76 08                	jbe    1056a1 <isxdigit+0x21>
  105699:	8d 42 9f             	lea    -0x61(%edx),%eax
  10569c:	83 f8 05             	cmp    $0x5,%eax
  10569f:	77 05                	ja     1056a6 <isxdigit+0x26>
  1056a1:	b9 01 00 00 00       	mov    $0x1,%ecx
  1056a6:	89 c8                	mov    %ecx,%eax
  1056a8:	c9                   	leave  
  1056a9:	c3                   	ret    
  1056aa:	90                   	nop
  1056ab:	90                   	nop

001056ac <exit>:
  1056ac:	55                   	push   %ebp
  1056ad:	89 e5                	mov    %esp,%ebp
  1056af:	53                   	push   %ebx
  1056b0:	8b 5d 08             	mov    0x8(%ebp),%ebx
  1056b3:	e8 a4 ba ff ff       	call   10115c <_run_dtors>
  1056b8:	e8 63 11 00 00       	call   106820 <_cleanup>
  1056bd:	53                   	push   %ebx
  1056be:	e8 15 00 00 00       	call   1056d8 <_exit>
  1056c3:	90                   	nop

001056c4 <FlamingExit>:
  1056c4:	8d 05 74 72 10 00    	lea    0x107274,%eax
  1056ca:	0f 01 18             	lidtl  (%eax)
  1056cd:	8b 2d a0 72 10 00    	mov    0x1072a0,%ebp
  1056d3:	c9                   	leave  
  1056d4:	c3                   	ret    
  1056d5:	90                   	nop
  1056d6:	90                   	nop
  1056d7:	90                   	nop

001056d8 <_exit>:
  1056d8:	55                   	push   %ebp
  1056d9:	89 e5                	mov    %esp,%ebp
  1056db:	83 3d ac 72 10 00 01 	cmpl   $0x1,0x1072ac
  1056e2:	75 05                	jne    1056e9 <_exit+0x11>
  1056e4:	e8 26 f4 ff ff       	call   104b0f <GDBexit>
  1056e9:	e8 d6 ff ff ff       	call   1056c4 <FlamingExit>
  1056ee:	c9                   	leave  
  1056ef:	c3                   	ret    

001056f0 <putstr>:
  1056f0:	55                   	push   %ebp
  1056f1:	89 e5                	mov    %esp,%ebp
  1056f3:	53                   	push   %ebx
  1056f4:	8b 5d 08             	mov    0x8(%ebp),%ebx
  1056f7:	80 3b 00             	cmpb   $0x0,(%ebx)
  1056fa:	74 12                	je     10570e <putstr+0x1e>
  1056fc:	0f be 03             	movsbl (%ebx),%eax
  1056ff:	50                   	push   %eax
  105700:	43                   	inc    %ebx
  105701:	e8 9e 00 00 00       	call   1057a4 <putchar>
  105706:	83 c4 04             	add    $0x4,%esp
  105709:	80 3b 00             	cmpb   $0x0,(%ebx)
  10570c:	75 ee                	jne    1056fc <putstr+0xc>
  10570e:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  105711:	c9                   	leave  
  105712:	c3                   	ret    
  105713:	90                   	nop

00105714 <println>:
  105714:	55                   	push   %ebp
  105715:	89 e5                	mov    %esp,%ebp
  105717:	6a 0a                	push   $0xa
  105719:	e8 86 00 00 00       	call   1057a4 <putchar>
  10571e:	c9                   	leave  
  10571f:	c3                   	ret    

00105720 <getstr>:
  105720:	55                   	push   %ebp
  105721:	89 e5                	mov    %esp,%ebp
  105723:	57                   	push   %edi
  105724:	56                   	push   %esi
  105725:	53                   	push   %ebx
  105726:	8b 75 08             	mov    0x8(%ebp),%esi
  105729:	8b 7d 0c             	mov    0xc(%ebp),%edi
  10572c:	4f                   	dec    %edi
  10572d:	85 ff                	test   %edi,%edi
  10572f:	7e 57                	jle    105788 <getstr+0x68>
  105731:	e8 06 01 00 00       	call   10583c <getchar>
  105736:	89 c3                	mov    %eax,%ebx
  105738:	83 fb 0d             	cmp    $0xd,%ebx
  10573b:	74 4b                	je     105788 <getstr+0x68>
  10573d:	83 fb 0a             	cmp    $0xa,%ebx
  105740:	74 46                	je     105788 <getstr+0x68>
  105742:	85 db                	test   %ebx,%ebx
  105744:	74 42                	je     105788 <getstr+0x68>
  105746:	83 fb 08             	cmp    $0x8,%ebx
  105749:	75 1d                	jne    105768 <getstr+0x48>
  10574b:	39 75 08             	cmp    %esi,0x8(%ebp)
  10574e:	74 dd                	je     10572d <getstr+0xd>
  105750:	4e                   	dec    %esi
  105751:	47                   	inc    %edi
  105752:	6a 08                	push   $0x8
  105754:	e8 4b 00 00 00       	call   1057a4 <putchar>
  105759:	6a 20                	push   $0x20
  10575b:	e8 44 00 00 00       	call   1057a4 <putchar>
  105760:	83 c4 08             	add    $0x8,%esp
  105763:	eb 09                	jmp    10576e <getstr+0x4e>
  105765:	8d 76 00             	lea    0x0(%esi),%esi
  105768:	88 d8                	mov    %bl,%al
  10576a:	88 06                	mov    %al,(%esi)
  10576c:	46                   	inc    %esi
  10576d:	4f                   	dec    %edi
  10576e:	83 3d ac 72 10 00 00 	cmpl   $0x0,0x1072ac
  105775:	7f 09                	jg     105780 <getstr+0x60>
  105777:	53                   	push   %ebx
  105778:	e8 27 00 00 00       	call   1057a4 <putchar>
  10577d:	83 c4 04             	add    $0x4,%esp
  105780:	c6 06 00             	movb   $0x0,(%esi)
  105783:	eb a8                	jmp    10572d <getstr+0xd>
  105785:	8d 76 00             	lea    0x0(%esi),%esi
  105788:	83 3d ac 72 10 00 00 	cmpl   $0x0,0x1072ac
  10578f:	7f 07                	jg     105798 <getstr+0x78>
  105791:	6a 0a                	push   $0xa
  105793:	e8 0c 00 00 00       	call   1057a4 <putchar>
  105798:	8b 45 08             	mov    0x8(%ebp),%eax
  10579b:	8d 65 f4             	lea    -0xc(%ebp),%esp
  10579e:	5b                   	pop    %ebx
  10579f:	5e                   	pop    %esi
  1057a0:	5f                   	pop    %edi
  1057a1:	c9                   	leave  
  1057a2:	c3                   	ret    
  1057a3:	90                   	nop

001057a4 <putchar>:
  1057a4:	55                   	push   %ebp
  1057a5:	89 e5                	mov    %esp,%ebp
  1057a7:	83 ec 10             	sub    $0x10,%esp
  1057aa:	53                   	push   %ebx
  1057ab:	8b 5d 08             	mov    0x8(%ebp),%ebx
  1057ae:	8d 45 fc             	lea    -0x4(%ebp),%eax
  1057b1:	50                   	push   %eax
  1057b2:	e8 2d 05 00 00       	call   105ce4 <splhigh>
  1057b7:	fa                   	cli    
  1057b8:	83 c4 04             	add    $0x4,%esp
  1057bb:	83 3d ac 72 10 00 00 	cmpl   $0x0,0x1072ac
  1057c2:	7e 50                	jle    105814 <putchar+0x70>
  1057c4:	83 fb 0a             	cmp    $0xa,%ebx
  1057c7:	75 17                	jne    1057e0 <putchar+0x3c>
  1057c9:	a1 d5 6d 10 00       	mov    0x106dd5,%eax
  1057ce:	89 45 f0             	mov    %eax,-0x10(%ebp)
  1057d1:	66 a1 d9 6d 10 00    	mov    0x106dd9,%ax
  1057d7:	66 89 45 f4          	mov    %ax,-0xc(%ebp)
  1057db:	eb 2c                	jmp    105809 <putchar+0x65>
  1057dd:	8d 76 00             	lea    0x0(%esi),%esi
  1057e0:	c6 45 f0 4f          	movb   $0x4f,-0x10(%ebp)
  1057e4:	88 d8                	mov    %bl,%al
  1057e6:	c0 e8 04             	shr    $0x4,%al
  1057e9:	25 ff 00 00 00       	and    $0xff,%eax
  1057ee:	8a 80 c4 6d 10 00    	mov    0x106dc4(%eax),%al
  1057f4:	88 45 f1             	mov    %al,-0xf(%ebp)
  1057f7:	89 d8                	mov    %ebx,%eax
  1057f9:	83 e0 0f             	and    $0xf,%eax
  1057fc:	8a 80 c4 6d 10 00    	mov    0x106dc4(%eax),%al
  105802:	88 45 f2             	mov    %al,-0xe(%ebp)
  105805:	c6 45 f3 00          	movb   $0x0,-0xd(%ebp)
  105809:	8d 45 f0             	lea    -0x10(%ebp),%eax
  10580c:	50                   	push   %eax
  10580d:	e8 16 eb ff ff       	call   104328 <putpacket>
  105812:	eb 15                	jmp    105829 <putchar+0x85>
  105814:	83 fb 0a             	cmp    $0xa,%ebx
  105817:	75 0a                	jne    105823 <putchar+0x7f>
  105819:	6a 0d                	push   $0xd
  10581b:	e8 30 0f 00 00       	call   106750 <putDebugChar>
  105820:	83 c4 04             	add    $0x4,%esp
  105823:	53                   	push   %ebx
  105824:	e8 27 0f 00 00       	call   106750 <putDebugChar>
  105829:	83 c4 04             	add    $0x4,%esp
  10582c:	8d 45 fc             	lea    -0x4(%ebp),%eax
  10582f:	50                   	push   %eax
  105830:	e8 bb 04 00 00       	call   105cf0 <splx>
  105835:	8b 5d ec             	mov    -0x14(%ebp),%ebx
  105838:	c9                   	leave  
  105839:	c3                   	ret    
  10583a:	8d 36                	lea    (%esi),%esi

0010583c <getchar>:
  10583c:	55                   	push   %ebp
  10583d:	89 e5                	mov    %esp,%ebp
  10583f:	83 ec 04             	sub    $0x4,%esp
  105842:	83 3d ac 72 10 00 00 	cmpl   $0x0,0x1072ac
  105849:	7e 29                	jle    105874 <getchar+0x38>
  10584b:	68 db 6d 10 00       	push   $0x106ddb
  105850:	e8 d3 ea ff ff       	call   104328 <putpacket>
  105855:	68 b8 3d 12 00       	push   $0x123db8
  10585a:	e8 b5 e9 ff ff       	call   104214 <getpacket>
  10585f:	6a 00                	push   $0x0
  105861:	6a 01                	push   $0x1
  105863:	8d 45 ff             	lea    -0x1(%ebp),%eax
  105866:	50                   	push   %eax
  105867:	68 b8 3d 12 00       	push   $0x123db8
  10586c:	e8 07 ec ff ff       	call   104478 <hex2mem>
  105871:	eb 09                	jmp    10587c <getchar+0x40>
  105873:	90                   	nop
  105874:	e8 af 0e 00 00       	call   106728 <getDebugChar>
  105879:	88 45 ff             	mov    %al,-0x1(%ebp)
  10587c:	0f be 45 ff          	movsbl -0x1(%ebp),%eax
  105880:	c9                   	leave  
  105881:	c3                   	ret    
  105882:	90                   	nop
  105883:	90                   	nop

00105884 <get_idt_base>:
  105884:	55                   	push   %ebp
  105885:	89 e5                	mov    %esp,%ebp
  105887:	83 ec 08             	sub    $0x8,%esp
  10588a:	8d 45 fa             	lea    -0x6(%ebp),%eax
  10588d:	0f 01 08             	sidtl  (%eax)
  105890:	8b 45 fc             	mov    -0x4(%ebp),%eax
  105893:	c9                   	leave  
  105894:	c3                   	ret    
  105895:	90                   	nop
  105896:	90                   	nop
  105897:	90                   	nop

00105898 <fill_descriptor>:
  105898:	55                   	push   %ebp
  105899:	89 e5                	mov    %esp,%ebp
  10589b:	83 ec 08             	sub    $0x8,%esp
  10589e:	56                   	push   %esi
  10589f:	53                   	push   %ebx
  1058a0:	8b 55 08             	mov    0x8(%ebp),%edx
  1058a3:	8b 75 0c             	mov    0xc(%ebp),%esi
  1058a6:	8b 4d 10             	mov    0x10(%ebp),%ecx
  1058a9:	8a 5d 14             	mov    0x14(%ebp),%bl
  1058ac:	88 5d fc             	mov    %bl,-0x4(%ebp)
  1058af:	8a 5d 18             	mov    0x18(%ebp),%bl
  1058b2:	88 5d f8             	mov    %bl,-0x8(%ebp)
  1058b5:	81 f9 ff ff 0f 00    	cmp    $0xfffff,%ecx
  1058bb:	76 09                	jbe    1058c6 <fill_descriptor+0x2e>
  1058bd:	c1 e9 0c             	shr    $0xc,%ecx
  1058c0:	80 cb 08             	or     $0x8,%bl
  1058c3:	88 5d f8             	mov    %bl,-0x8(%ebp)
  1058c6:	66 89 0a             	mov    %cx,(%edx)
  1058c9:	66 89 72 02          	mov    %si,0x2(%edx)
  1058cd:	89 f0                	mov    %esi,%eax
  1058cf:	c1 e8 10             	shr    $0x10,%eax
  1058d2:	88 42 04             	mov    %al,0x4(%edx)
  1058d5:	8a 5d fc             	mov    -0x4(%ebp),%bl
  1058d8:	80 cb 80             	or     $0x80,%bl
  1058db:	88 5a 05             	mov    %bl,0x5(%edx)
  1058de:	89 c8                	mov    %ecx,%eax
  1058e0:	c1 e8 10             	shr    $0x10,%eax
  1058e3:	24 0f                	and    $0xf,%al
  1058e5:	80 62 06 f0          	andb   $0xf0,0x6(%edx)
  1058e9:	08 42 06             	or     %al,0x6(%edx)
  1058ec:	8a 45 f8             	mov    -0x8(%ebp),%al
  1058ef:	c0 e0 04             	shl    $0x4,%al
  1058f2:	80 62 06 0f          	andb   $0xf,0x6(%edx)
  1058f6:	08 42 06             	or     %al,0x6(%edx)
  1058f9:	89 f0                	mov    %esi,%eax
  1058fb:	c1 e8 18             	shr    $0x18,%eax
  1058fe:	88 42 07             	mov    %al,0x7(%edx)
  105901:	8d 65 f0             	lea    -0x10(%ebp),%esp
  105904:	5b                   	pop    %ebx
  105905:	5e                   	pop    %esi
  105906:	c9                   	leave  
  105907:	c3                   	ret    

00105908 <fill_descriptor_base>:
  105908:	55                   	push   %ebp
  105909:	89 e5                	mov    %esp,%ebp
  10590b:	8b 45 08             	mov    0x8(%ebp),%eax
  10590e:	8b 55 0c             	mov    0xc(%ebp),%edx
  105911:	66 89 50 02          	mov    %dx,0x2(%eax)
  105915:	89 d1                	mov    %edx,%ecx
  105917:	c1 e9 10             	shr    $0x10,%ecx
  10591a:	88 48 04             	mov    %cl,0x4(%eax)
  10591d:	c1 ea 18             	shr    $0x18,%edx
  105920:	88 50 07             	mov    %dl,0x7(%eax)
  105923:	c9                   	leave  
  105924:	c3                   	ret    
  105925:	8d 76 00             	lea    0x0(%esi),%esi

00105928 <fill_descriptor_limit>:
  105928:	55                   	push   %ebp
  105929:	89 e5                	mov    %esp,%ebp
  10592b:	8b 55 08             	mov    0x8(%ebp),%edx
  10592e:	8b 4d 0c             	mov    0xc(%ebp),%ecx
  105931:	81 f9 ff ff 0f 00    	cmp    $0xfffff,%ecx
  105937:	76 17                	jbe    105950 <fill_descriptor_limit+0x28>
  105939:	c1 e9 0c             	shr    $0xc,%ecx
  10593c:	8a 42 06             	mov    0x6(%edx),%al
  10593f:	c0 e8 04             	shr    $0x4,%al
  105942:	25 ff 00 00 00       	and    $0xff,%eax
  105947:	0c 08                	or     $0x8,%al
  105949:	c0 e0 04             	shl    $0x4,%al
  10594c:	eb 07                	jmp    105955 <fill_descriptor_limit+0x2d>
  10594e:	8d 36                	lea    (%esi),%esi
  105950:	8a 42 06             	mov    0x6(%edx),%al
  105953:	24 70                	and    $0x70,%al
  105955:	80 62 06 0f          	andb   $0xf,0x6(%edx)
  105959:	08 42 06             	or     %al,0x6(%edx)
  10595c:	66 89 0a             	mov    %cx,(%edx)
  10595f:	89 c8                	mov    %ecx,%eax
  105961:	c1 e8 10             	shr    $0x10,%eax
  105964:	24 0f                	and    $0xf,%al
  105966:	80 62 06 f0          	andb   $0xf0,0x6(%edx)
  10596a:	08 42 06             	or     %al,0x6(%edx)
  10596d:	c9                   	leave  
  10596e:	c3                   	ret    
  10596f:	90                   	nop

00105970 <fill_gate>:
  105970:	55                   	push   %ebp
  105971:	89 e5                	mov    %esp,%ebp
  105973:	56                   	push   %esi
  105974:	53                   	push   %ebx
  105975:	8b 45 08             	mov    0x8(%ebp),%eax
  105978:	8b 55 0c             	mov    0xc(%ebp),%edx
  10597b:	66 8b 75 10          	mov    0x10(%ebp),%si
  10597f:	66 89 70 02          	mov    %si,0x2(%eax)
  105983:	8a 5d 14             	mov    0x14(%ebp),%bl
  105986:	8a 4d 18             	mov    0x18(%ebp),%cl
  105989:	66 89 10             	mov    %dx,(%eax)
  10598c:	88 48 04             	mov    %cl,0x4(%eax)
  10598f:	80 cb 80             	or     $0x80,%bl
  105992:	88 58 05             	mov    %bl,0x5(%eax)
  105995:	c1 ea 10             	shr    $0x10,%edx
  105998:	66 89 50 06          	mov    %dx,0x6(%eax)
  10599c:	8d 65 f8             	lea    -0x8(%ebp),%esp
  10599f:	5b                   	pop    %ebx
  1059a0:	5e                   	pop    %esi
  1059a1:	c9                   	leave  
  1059a2:	c3                   	ret    
  1059a3:	90                   	nop

001059a4 <get_eflags>:
  1059a4:	55                   	push   %ebp
  1059a5:	89 e5                	mov    %esp,%ebp
  1059a7:	eb 00                	jmp    1059a9 <get_eflags+0x5>
  1059a9:	eb 00                	jmp    1059ab <get_eflags+0x7>
  1059ab:	eb 00                	jmp    1059ad <get_eflags+0x9>
  1059ad:	9c                   	pushf  
  1059ae:	eb 00                	jmp    1059b0 <get_eflags+0xc>
  1059b0:	eb 00                	jmp    1059b2 <get_eflags+0xe>
  1059b2:	eb 00                	jmp    1059b4 <get_eflags+0x10>
  1059b4:	eb 00                	jmp    1059b6 <get_eflags+0x12>
  1059b6:	58                   	pop    %eax
  1059b7:	c9                   	leave  
  1059b8:	c3                   	ret    
  1059b9:	8d 76 00             	lea    0x0(%esi),%esi

001059bc <set_eflags>:
  1059bc:	55                   	push   %ebp
  1059bd:	89 e5                	mov    %esp,%ebp
  1059bf:	8b 45 08             	mov    0x8(%ebp),%eax
  1059c2:	50                   	push   %eax
  1059c3:	eb 00                	jmp    1059c5 <set_eflags+0x9>
  1059c5:	eb 00                	jmp    1059c7 <set_eflags+0xb>
  1059c7:	eb 00                	jmp    1059c9 <set_eflags+0xd>
  1059c9:	9d                   	popf   
  1059ca:	eb 00                	jmp    1059cc <set_eflags+0x10>
  1059cc:	eb 00                	jmp    1059ce <set_eflags+0x12>
  1059ce:	eb 00                	jmp    1059d0 <set_eflags+0x14>
  1059d0:	c9                   	leave  
  1059d1:	c3                   	ret    
  1059d2:	8d 36                	lea    (%esi),%esi

001059d4 <get_cs>:
  1059d4:	55                   	push   %ebp
  1059d5:	89 e5                	mov    %esp,%ebp
  1059d7:	66 8c c8             	mov    %cs,%ax
  1059da:	25 ff ff 00 00       	and    $0xffff,%eax
  1059df:	c9                   	leave  
  1059e0:	c3                   	ret    
  1059e1:	8d 76 00             	lea    0x0(%esi),%esi

001059e4 <get_ds>:
  1059e4:	55                   	push   %ebp
  1059e5:	89 e5                	mov    %esp,%ebp
  1059e7:	66 8c d8             	mov    %ds,%ax
  1059ea:	25 ff ff 00 00       	and    $0xffff,%eax
  1059ef:	c9                   	leave  
  1059f0:	c3                   	ret    
  1059f1:	8d 76 00             	lea    0x0(%esi),%esi

001059f4 <set_ds>:
  1059f4:	55                   	push   %ebp
  1059f5:	89 e5                	mov    %esp,%ebp
  1059f7:	66 8b 45 08          	mov    0x8(%ebp),%ax
  1059fb:	66 8e d8             	mov    %ax,%ds
  1059fe:	c9                   	leave  
  1059ff:	c3                   	ret    

00105a00 <get_es>:
  105a00:	55                   	push   %ebp
  105a01:	89 e5                	mov    %esp,%ebp
  105a03:	66 8c c0             	mov    %es,%ax
  105a06:	25 ff ff 00 00       	and    $0xffff,%eax
  105a0b:	c9                   	leave  
  105a0c:	c3                   	ret    
  105a0d:	8d 76 00             	lea    0x0(%esi),%esi

00105a10 <set_es>:
  105a10:	55                   	push   %ebp
  105a11:	89 e5                	mov    %esp,%ebp
  105a13:	66 8b 45 08          	mov    0x8(%ebp),%ax
  105a17:	66 8e c0             	mov    %ax,%es
  105a1a:	c9                   	leave  
  105a1b:	c3                   	ret    

00105a1c <get_fs>:
  105a1c:	55                   	push   %ebp
  105a1d:	89 e5                	mov    %esp,%ebp
  105a1f:	66 8c e0             	mov    %fs,%ax
  105a22:	25 ff ff 00 00       	and    $0xffff,%eax
  105a27:	c9                   	leave  
  105a28:	c3                   	ret    
  105a29:	8d 76 00             	lea    0x0(%esi),%esi

00105a2c <set_fs>:
  105a2c:	55                   	push   %ebp
  105a2d:	89 e5                	mov    %esp,%ebp
  105a2f:	66 8b 45 08          	mov    0x8(%ebp),%ax
  105a33:	66 8e e0             	mov    %ax,%fs
  105a36:	c9                   	leave  
  105a37:	c3                   	ret    

00105a38 <get_gs>:
  105a38:	55                   	push   %ebp
  105a39:	89 e5                	mov    %esp,%ebp
  105a3b:	66 8c e8             	mov    %gs,%ax
  105a3e:	25 ff ff 00 00       	and    $0xffff,%eax
  105a43:	c9                   	leave  
  105a44:	c3                   	ret    
  105a45:	8d 76 00             	lea    0x0(%esi),%esi

00105a48 <set_gs>:
  105a48:	55                   	push   %ebp
  105a49:	89 e5                	mov    %esp,%ebp
  105a4b:	66 8b 45 08          	mov    0x8(%ebp),%ax
  105a4f:	66 8e e8             	mov    %ax,%gs
  105a52:	c9                   	leave  
  105a53:	c3                   	ret    

00105a54 <get_ss>:
  105a54:	55                   	push   %ebp
  105a55:	89 e5                	mov    %esp,%ebp
  105a57:	66 8c d0             	mov    %ss,%ax
  105a5a:	25 ff ff 00 00       	and    $0xffff,%eax
  105a5f:	c9                   	leave  
  105a60:	c3                   	ret    
  105a61:	8d 76 00             	lea    0x0(%esi),%esi

00105a64 <get_msw>:
  105a64:	55                   	push   %ebp
  105a65:	89 e5                	mov    %esp,%ebp
  105a67:	66 0f 01 e0          	smsw   %ax
  105a6b:	25 ff ff 00 00       	and    $0xffff,%eax
  105a70:	c9                   	leave  
  105a71:	c3                   	ret    
  105a72:	8d 36                	lea    (%esi),%esi

00105a74 <ffs>:
  105a74:	55                   	push   %ebp
  105a75:	89 e5                	mov    %esp,%ebp
  105a77:	8b 45 08             	mov    0x8(%ebp),%eax
  105a7a:	85 c0                	test   %eax,%eax
  105a7c:	74 04                	je     105a82 <ffs+0xe>
  105a7e:	0f bc c0             	bsf    %eax,%eax
  105a81:	40                   	inc    %eax
  105a82:	c9                   	leave  
  105a83:	c3                   	ret    

00105a84 <inportb>:
  105a84:	8b 54 24 04          	mov    0x4(%esp),%edx
  105a88:	31 c0                	xor    %eax,%eax
  105a8a:	ec                   	in     (%dx),%al
  105a8b:	c3                   	ret    

00105a8c <outportb>:
  105a8c:	8b 54 24 04          	mov    0x4(%esp),%edx
  105a90:	8b 44 24 08          	mov    0x8(%esp),%eax
  105a94:	ee                   	out    %al,(%dx)
  105a95:	c3                   	ret    
  105a96:	8d 36                	lea    (%esi),%esi

00105a98 <inportw>:
  105a98:	8b 54 24 04          	mov    0x4(%esp),%edx
  105a9c:	31 c0                	xor    %eax,%eax
  105a9e:	66 ed                	in     (%dx),%ax
  105aa0:	c3                   	ret    
  105aa1:	8d 76 00             	lea    0x0(%esi),%esi

00105aa4 <outportw>:
  105aa4:	8b 54 24 04          	mov    0x4(%esp),%edx
  105aa8:	8b 44 24 08          	mov    0x8(%esp),%eax
  105aac:	66 ef                	out    %ax,(%dx)
  105aae:	c3                   	ret    
  105aaf:	90                   	nop

00105ab0 <inportl>:
  105ab0:	8b 54 24 04          	mov    0x4(%esp),%edx
  105ab4:	31 c0                	xor    %eax,%eax
  105ab6:	ed                   	in     (%dx),%eax
  105ab7:	c3                   	ret    

00105ab8 <outportl>:
  105ab8:	8b 54 24 04          	mov    0x4(%esp),%edx
  105abc:	8b 44 24 08          	mov    0x8(%esp),%eax
  105ac0:	ef                   	out    %eax,(%dx)
  105ac1:	c3                   	ret    
  105ac2:	8d 36                	lea    (%esi),%esi

00105ac4 <repinsw>:
  105ac4:	57                   	push   %edi
  105ac5:	8b 54 24 08          	mov    0x8(%esp),%edx
  105ac9:	8b 7c 24 0c          	mov    0xc(%esp),%edi
  105acd:	8b 4c 24 10          	mov    0x10(%esp),%ecx
  105ad1:	f3 66 6d             	rep insw (%dx),%es:(%edi)
  105ad4:	5f                   	pop    %edi
  105ad5:	c3                   	ret    
  105ad6:	8d 36                	lea    (%esi),%esi

00105ad8 <repoutsw>:
  105ad8:	56                   	push   %esi
  105ad9:	8b 54 24 08          	mov    0x8(%esp),%edx
  105add:	8b 74 24 0c          	mov    0xc(%esp),%esi
  105ae1:	8b 4c 24 10          	mov    0x10(%esp),%ecx
  105ae5:	f3 66 6f             	rep outsw %ds:(%esi),(%dx)
  105ae8:	5e                   	pop    %esi
  105ae9:	c3                   	ret    
  105aea:	90                   	nop
  105aeb:	90                   	nop

00105aec <_kbd_f10>:
  105aec:	55                   	push   %ebp
  105aed:	89 e5                	mov    %esp,%ebp
  105aef:	c9                   	leave  
  105af0:	c3                   	ret    
  105af1:	90                   	nop
  105af2:	90                   	nop
  105af3:	90                   	nop

00105af4 <_kbd_f11>:
  105af4:	55                   	push   %ebp
  105af5:	89 e5                	mov    %esp,%ebp
  105af7:	c9                   	leave  
  105af8:	c3                   	ret    
  105af9:	90                   	nop
  105afa:	90                   	nop
  105afb:	90                   	nop

00105afc <_kbd_f12>:
  105afc:	55                   	push   %ebp
  105afd:	89 e5                	mov    %esp,%ebp
  105aff:	c9                   	leave  
  105b00:	c3                   	ret    
  105b01:	90                   	nop
  105b02:	90                   	nop
  105b03:	90                   	nop

00105b04 <_kbd_f1>:
  105b04:	55                   	push   %ebp
  105b05:	89 e5                	mov    %esp,%ebp
  105b07:	c9                   	leave  
  105b08:	c3                   	ret    
  105b09:	90                   	nop
  105b0a:	90                   	nop
  105b0b:	90                   	nop

00105b0c <_kbd_f2>:
  105b0c:	55                   	push   %ebp
  105b0d:	89 e5                	mov    %esp,%ebp
  105b0f:	c9                   	leave  
  105b10:	c3                   	ret    
  105b11:	90                   	nop
  105b12:	90                   	nop
  105b13:	90                   	nop

00105b14 <_kbd_f3>:
  105b14:	55                   	push   %ebp
  105b15:	89 e5                	mov    %esp,%ebp
  105b17:	c9                   	leave  
  105b18:	c3                   	ret    
  105b19:	90                   	nop
  105b1a:	90                   	nop
  105b1b:	90                   	nop

00105b1c <_kbd_f4>:
  105b1c:	55                   	push   %ebp
  105b1d:	89 e5                	mov    %esp,%ebp
  105b1f:	c9                   	leave  
  105b20:	c3                   	ret    
  105b21:	90                   	nop
  105b22:	90                   	nop
  105b23:	90                   	nop

00105b24 <_kbd_f5>:
  105b24:	55                   	push   %ebp
  105b25:	89 e5                	mov    %esp,%ebp
  105b27:	c9                   	leave  
  105b28:	c3                   	ret    
  105b29:	90                   	nop
  105b2a:	90                   	nop
  105b2b:	90                   	nop

00105b2c <_kbd_f6>:
  105b2c:	55                   	push   %ebp
  105b2d:	89 e5                	mov    %esp,%ebp
  105b2f:	c9                   	leave  
  105b30:	c3                   	ret    
  105b31:	90                   	nop
  105b32:	90                   	nop
  105b33:	90                   	nop

00105b34 <_kbd_f7>:
  105b34:	55                   	push   %ebp
  105b35:	89 e5                	mov    %esp,%ebp
  105b37:	c9                   	leave  
  105b38:	c3                   	ret    
  105b39:	90                   	nop
  105b3a:	90                   	nop
  105b3b:	90                   	nop

00105b3c <_kbd_f8>:
  105b3c:	55                   	push   %ebp
  105b3d:	89 e5                	mov    %esp,%ebp
  105b3f:	c9                   	leave  
  105b40:	c3                   	ret    
  105b41:	90                   	nop
  105b42:	90                   	nop
  105b43:	90                   	nop

00105b44 <_kbd_f9>:
  105b44:	55                   	push   %ebp
  105b45:	89 e5                	mov    %esp,%ebp
  105b47:	c9                   	leave  
  105b48:	c3                   	ret    
  105b49:	90                   	nop
  105b4a:	90                   	nop
  105b4b:	90                   	nop

00105b4c <_init_machine>:
  105b4c:	55                   	push   %ebp
  105b4d:	89 e5                	mov    %esp,%ebp
  105b4f:	83 ec 08             	sub    $0x8,%esp
  105b52:	53                   	push   %ebx
  105b53:	8d 45 fa             	lea    -0x6(%ebp),%eax
  105b56:	0f 01 08             	sidtl  (%eax)
  105b59:	83 7d fc 00          	cmpl   $0x0,-0x4(%ebp)
  105b5d:	75 27                	jne    105b86 <_init_machine+0x3a>
  105b5f:	68 00 08 00 00       	push   $0x800
  105b64:	e8 bf f0 ff ff       	call   104c28 <sbrk>
  105b69:	89 c3                	mov    %eax,%ebx
  105b6b:	68 00 08 00 00       	push   $0x800
  105b70:	53                   	push   %ebx
  105b71:	e8 8e 0c 00 00       	call   106804 <bzero>
  105b76:	66 c7 45 fa ff 07    	movw   $0x7ff,-0x6(%ebp)
  105b7c:	89 5d fc             	mov    %ebx,-0x4(%ebp)
  105b7f:	83 c4 0c             	add    $0xc,%esp
  105b82:	0f 01 5d fa          	lidtl  -0x6(%ebp)
  105b86:	6a 11                	push   $0x11
  105b88:	6a 20                	push   $0x20
  105b8a:	e8 fd fe ff ff       	call   105a8c <outportb>
  105b8f:	6a 11                	push   $0x11
  105b91:	68 a0 00 00 00       	push   $0xa0
  105b96:	e8 f1 fe ff ff       	call   105a8c <outportb>
  105b9b:	6a 20                	push   $0x20
  105b9d:	6a 21                	push   $0x21
  105b9f:	e8 e8 fe ff ff       	call   105a8c <outportb>
  105ba4:	6a 28                	push   $0x28
  105ba6:	68 a1 00 00 00       	push   $0xa1
  105bab:	e8 dc fe ff ff       	call   105a8c <outportb>
  105bb0:	83 c4 20             	add    $0x20,%esp
  105bb3:	6a 04                	push   $0x4
  105bb5:	6a 21                	push   $0x21
  105bb7:	e8 d0 fe ff ff       	call   105a8c <outportb>
  105bbc:	6a 02                	push   $0x2
  105bbe:	68 a1 00 00 00       	push   $0xa1
  105bc3:	e8 c4 fe ff ff       	call   105a8c <outportb>
  105bc8:	6a 01                	push   $0x1
  105bca:	6a 21                	push   $0x21
  105bcc:	e8 bb fe ff ff       	call   105a8c <outportb>
  105bd1:	6a 01                	push   $0x1
  105bd3:	68 a1 00 00 00       	push   $0xa1
  105bd8:	e8 af fe ff ff       	call   105a8c <outportb>
  105bdd:	e4 80                	in     $0x80,%al
  105bdf:	83 c4 20             	add    $0x20,%esp
  105be2:	6a ff                	push   $0xffffffff
  105be4:	6a 21                	push   $0x21
  105be6:	e8 a1 fe ff ff       	call   105a8c <outportb>
  105beb:	6a ff                	push   $0xffffffff
  105bed:	68 a1 00 00 00       	push   $0xa1
  105bf2:	e8 95 fe ff ff       	call   105a8c <outportb>
  105bf7:	6a 34                	push   $0x34
  105bf9:	6a 43                	push   $0x43
  105bfb:	e8 8c fe ff ff       	call   105a8c <outportb>
  105c00:	68 91 00 00 00       	push   $0x91
  105c05:	6a 40                	push   $0x40
  105c07:	e8 80 fe ff ff       	call   105a8c <outportb>
  105c0c:	83 c4 20             	add    $0x20,%esp
  105c0f:	6a 2e                	push   $0x2e
  105c11:	6a 40                	push   $0x40
  105c13:	e8 74 fe ff ff       	call   105a8c <outportb>
  105c18:	8b 5d f4             	mov    -0xc(%ebp),%ebx
  105c1b:	c9                   	leave  
  105c1c:	c3                   	ret    
  105c1d:	90                   	nop
  105c1e:	90                   	nop
  105c1f:	90                   	nop

00105c20 <memset>:
  105c20:	55                   	push   %ebp
  105c21:	89 e5                	mov    %esp,%ebp
  105c23:	53                   	push   %ebx
  105c24:	8b 5d 08             	mov    0x8(%ebp),%ebx
  105c27:	89 d9                	mov    %ebx,%ecx
  105c29:	8b 55 10             	mov    0x10(%ebp),%edx
  105c2c:	4a                   	dec    %edx
  105c2d:	78 0b                	js     105c3a <memset+0x1a>
  105c2f:	8a 45 0c             	mov    0xc(%ebp),%al
  105c32:	8d 36                	lea    (%esi),%esi
  105c34:	88 01                	mov    %al,(%ecx)
  105c36:	41                   	inc    %ecx
  105c37:	4a                   	dec    %edx
  105c38:	79 fa                	jns    105c34 <memset+0x14>
  105c3a:	89 d8                	mov    %ebx,%eax
  105c3c:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  105c3f:	c9                   	leave  
  105c40:	c3                   	ret    
  105c41:	90                   	nop
  105c42:	90                   	nop
  105c43:	90                   	nop

00105c44 <my_putchar>:
  105c44:	55                   	push   %ebp
  105c45:	89 e5                	mov    %esp,%ebp
  105c47:	ff 75 08             	pushl  0x8(%ebp)
  105c4a:	e8 55 fb ff ff       	call   1057a4 <putchar>
  105c4f:	c9                   	leave  
  105c50:	c3                   	ret    
  105c51:	8d 76 00             	lea    0x0(%esi),%esi

00105c54 <printf>:
  105c54:	55                   	push   %ebp
  105c55:	89 e5                	mov    %esp,%ebp
  105c57:	83 ec 14             	sub    $0x14,%esp
  105c5a:	57                   	push   %edi
  105c5b:	56                   	push   %esi
  105c5c:	53                   	push   %ebx
  105c5d:	8b 7d 08             	mov    0x8(%ebp),%edi
  105c60:	c6 45 fd 02          	movb   $0x2,-0x3(%ebp)
  105c64:	c7 45 f8 44 5c 10 00 	movl   $0x105c44,-0x8(%ebp)
  105c6b:	c7 45 f4 ff 7f 00 00 	movl   $0x7fff,-0xc(%ebp)
  105c72:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%ebp)
  105c79:	c6 45 fc 00          	movb   $0x0,-0x4(%ebp)
  105c7d:	8d 5d ec             	lea    -0x14(%ebp),%ebx
  105c80:	53                   	push   %ebx
  105c81:	e8 5e 00 00 00       	call   105ce4 <splhigh>
  105c86:	8b 75 ec             	mov    -0x14(%ebp),%esi
  105c89:	81 e6 00 02 00 00    	and    $0x200,%esi
  105c8f:	8d 55 0c             	lea    0xc(%ebp),%edx
  105c92:	8d 45 f0             	lea    -0x10(%ebp),%eax
  105c95:	50                   	push   %eax
  105c96:	52                   	push   %edx
  105c97:	57                   	push   %edi
  105c98:	e8 6f 02 00 00       	call   105f0c <_doprnt>
  105c9d:	89 c7                	mov    %eax,%edi
  105c9f:	53                   	push   %ebx
  105ca0:	e8 4b 00 00 00       	call   105cf0 <splx>
  105ca5:	83 c4 14             	add    $0x14,%esp
  105ca8:	eb 00                	jmp    105caa <printf+0x56>
  105caa:	eb 00                	jmp    105cac <printf+0x58>
  105cac:	eb 00                	jmp    105cae <printf+0x5a>
  105cae:	9c                   	pushf  
  105caf:	eb 00                	jmp    105cb1 <printf+0x5d>
  105cb1:	eb 00                	jmp    105cb3 <printf+0x5f>
  105cb3:	eb 00                	jmp    105cb5 <printf+0x61>
  105cb5:	eb 00                	jmp    105cb7 <printf+0x63>
  105cb7:	58                   	pop    %eax
  105cb8:	25 00 02 00 00       	and    $0x200,%eax
  105cbd:	39 f0                	cmp    %esi,%eax
  105cbf:	74 16                	je     105cd7 <printf+0x83>
  105cc1:	68 df 6d 10 00       	push   $0x106ddf
  105cc6:	6a 3c                	push   $0x3c
  105cc8:	68 e8 6d 10 00       	push   $0x106de8
  105ccd:	68 07 6e 10 00       	push   $0x106e07
  105cd2:	e8 ed 0b 00 00       	call   1068c4 <__eprintf>
  105cd7:	89 f8                	mov    %edi,%eax
  105cd9:	8d 65 e0             	lea    -0x20(%ebp),%esp
  105cdc:	5b                   	pop    %ebx
  105cdd:	5e                   	pop    %esi
  105cde:	5f                   	pop    %edi
  105cdf:	c9                   	leave  
  105ce0:	c3                   	ret    
  105ce1:	90                   	nop
  105ce2:	90                   	nop
  105ce3:	90                   	nop

00105ce4 <splhigh>:
  105ce4:	55                   	push   %ebp
  105ce5:	89 e5                	mov    %esp,%ebp
  105ce7:	8b 45 08             	mov    0x8(%ebp),%eax
  105cea:	9c                   	pushf  
  105ceb:	8f 00                	popl   (%eax)
  105ced:	fa                   	cli    
  105cee:	c9                   	leave  
  105cef:	c3                   	ret    

00105cf0 <splx>:
  105cf0:	55                   	push   %ebp
  105cf1:	89 e5                	mov    %esp,%ebp
  105cf3:	8b 45 08             	mov    0x8(%ebp),%eax
  105cf6:	8b 00                	mov    (%eax),%eax
  105cf8:	50                   	push   %eax
  105cf9:	eb 00                	jmp    105cfb <splx+0xb>
  105cfb:	eb 00                	jmp    105cfd <splx+0xd>
  105cfd:	eb 00                	jmp    105cff <splx+0xf>
  105cff:	9d                   	popf   
  105d00:	eb 00                	jmp    105d02 <splx+0x12>
  105d02:	eb 00                	jmp    105d04 <splx+0x14>
  105d04:	eb 00                	jmp    105d06 <splx+0x16>
  105d06:	c9                   	leave  
  105d07:	c3                   	ret    

00105d08 <_strout>:
  105d08:	55                   	push   %ebp
  105d09:	89 e5                	mov    %esp,%ebp
  105d0b:	83 ec 0c             	sub    $0xc,%esp
  105d0e:	57                   	push   %edi
  105d0f:	56                   	push   %esi
  105d10:	53                   	push   %ebx
  105d11:	8b 7d 08             	mov    0x8(%ebp),%edi
  105d14:	8b 75 0c             	mov    0xc(%ebp),%esi
  105d17:	8b 5d 14             	mov    0x14(%ebp),%ebx
  105d1a:	8a 4d 18             	mov    0x18(%ebp),%cl
  105d1d:	88 4d fc             	mov    %cl,-0x4(%ebp)
  105d20:	c7 45 f8 00 00 00 00 	movl   $0x0,-0x8(%ebp)
  105d27:	f6 43 0d 40          	testb  $0x40,0xd(%ebx)
  105d2b:	74 7b                	je     105da8 <_strout+0xa0>
  105d2d:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
  105d31:	7d 35                	jge    105d68 <_strout+0x60>
  105d33:	90                   	nop
  105d34:	80 3f 2d             	cmpb   $0x2d,(%edi)
  105d37:	75 18                	jne    105d51 <_strout+0x49>
  105d39:	80 7d fc 30          	cmpb   $0x30,-0x4(%ebp)
  105d3d:	75 12                	jne    105d51 <_strout+0x49>
  105d3f:	ff 4b 04             	decl   0x4(%ebx)
  105d42:	78 09                	js     105d4d <_strout+0x45>
  105d44:	8b 13                	mov    (%ebx),%edx
  105d46:	8a 07                	mov    (%edi),%al
  105d48:	88 02                	mov    %al,(%edx)
  105d4a:	47                   	inc    %edi
  105d4b:	ff 03                	incl   (%ebx)
  105d4d:	ff 45 f8             	incl   -0x8(%ebp)
  105d50:	4e                   	dec    %esi
  105d51:	ff 4b 04             	decl   0x4(%ebx)
  105d54:	78 09                	js     105d5f <_strout+0x57>
  105d56:	8b 03                	mov    (%ebx),%eax
  105d58:	8a 4d fc             	mov    -0x4(%ebp),%cl
  105d5b:	88 08                	mov    %cl,(%eax)
  105d5d:	ff 03                	incl   (%ebx)
  105d5f:	ff 45 f8             	incl   -0x8(%ebp)
  105d62:	83 45 10 01          	addl   $0x1,0x10(%ebp)
  105d66:	78 cc                	js     105d34 <_strout+0x2c>
  105d68:	8b 45 10             	mov    0x10(%ebp),%eax
  105d6b:	01 f0                	add    %esi,%eax
  105d6d:	01 45 f8             	add    %eax,-0x8(%ebp)
  105d70:	4e                   	dec    %esi
  105d71:	78 12                	js     105d85 <_strout+0x7d>
  105d73:	90                   	nop
  105d74:	ff 4b 04             	decl   0x4(%ebx)
  105d77:	78 09                	js     105d82 <_strout+0x7a>
  105d79:	8b 13                	mov    (%ebx),%edx
  105d7b:	8a 07                	mov    (%edi),%al
  105d7d:	88 02                	mov    %al,(%edx)
  105d7f:	47                   	inc    %edi
  105d80:	ff 03                	incl   (%ebx)
  105d82:	4e                   	dec    %esi
  105d83:	79 ef                	jns    105d74 <_strout+0x6c>
  105d85:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
  105d89:	0f 84 94 00 00 00    	je     105e23 <_strout+0x11b>
  105d8f:	90                   	nop
  105d90:	ff 4b 04             	decl   0x4(%ebx)
  105d93:	78 09                	js     105d9e <_strout+0x96>
  105d95:	8b 03                	mov    (%ebx),%eax
  105d97:	8a 4d fc             	mov    -0x4(%ebp),%cl
  105d9a:	88 08                	mov    %cl,(%eax)
  105d9c:	ff 03                	incl   (%ebx)
  105d9e:	ff 4d 10             	decl   0x10(%ebp)
  105da1:	75 ed                	jne    105d90 <_strout+0x88>
  105da3:	eb 7e                	jmp    105e23 <_strout+0x11b>
  105da5:	8d 76 00             	lea    0x0(%esi),%esi
  105da8:	8b 4b 08             	mov    0x8(%ebx),%ecx
  105dab:	89 4d f4             	mov    %ecx,-0xc(%ebp)
  105dae:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
  105db2:	7d 32                	jge    105de6 <_strout+0xde>
  105db4:	80 3f 2d             	cmpb   $0x2d,(%edi)
  105db7:	75 16                	jne    105dcf <_strout+0xc7>
  105db9:	80 7d fc 30          	cmpb   $0x30,-0x4(%ebp)
  105dbd:	75 10                	jne    105dcf <_strout+0xc7>
  105dbf:	53                   	push   %ebx
  105dc0:	6a 2d                	push   $0x2d
  105dc2:	47                   	inc    %edi
  105dc3:	8b 4d f4             	mov    -0xc(%ebp),%ecx
  105dc6:	ff d1                	call   *%ecx
  105dc8:	ff 45 f8             	incl   -0x8(%ebp)
  105dcb:	4e                   	dec    %esi
  105dcc:	83 c4 08             	add    $0x8,%esp
  105dcf:	53                   	push   %ebx
  105dd0:	0f be 45 fc          	movsbl -0x4(%ebp),%eax
  105dd4:	50                   	push   %eax
  105dd5:	8b 4d f4             	mov    -0xc(%ebp),%ecx
  105dd8:	ff d1                	call   *%ecx
  105dda:	ff 45 f8             	incl   -0x8(%ebp)
  105ddd:	83 c4 08             	add    $0x8,%esp
  105de0:	83 45 10 01          	addl   $0x1,0x10(%ebp)
  105de4:	78 ce                	js     105db4 <_strout+0xac>
  105de6:	8b 45 10             	mov    0x10(%ebp),%eax
  105de9:	01 f0                	add    %esi,%eax
  105deb:	01 45 f8             	add    %eax,-0x8(%ebp)
  105dee:	4e                   	dec    %esi
  105def:	78 14                	js     105e05 <_strout+0xfd>
  105df1:	8d 76 00             	lea    0x0(%esi),%esi
  105df4:	53                   	push   %ebx
  105df5:	0f be 07             	movsbl (%edi),%eax
  105df8:	50                   	push   %eax
  105df9:	47                   	inc    %edi
  105dfa:	8b 4d f4             	mov    -0xc(%ebp),%ecx
  105dfd:	ff d1                	call   *%ecx
  105dff:	83 c4 08             	add    $0x8,%esp
  105e02:	4e                   	dec    %esi
  105e03:	79 ef                	jns    105df4 <_strout+0xec>
  105e05:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
  105e09:	74 18                	je     105e23 <_strout+0x11b>
  105e0b:	0f be 75 fc          	movsbl -0x4(%ebp),%esi
  105e0f:	90                   	nop
  105e10:	53                   	push   %ebx
  105e11:	56                   	push   %esi
  105e12:	8b 4d f4             	mov    -0xc(%ebp),%ecx
  105e15:	ff d1                	call   *%ecx
  105e17:	ff 4d 10             	decl   0x10(%ebp)
  105e1a:	83 c4 08             	add    $0x8,%esp
  105e1d:	83 7d 10 00          	cmpl   $0x0,0x10(%ebp)
  105e21:	75 ed                	jne    105e10 <_strout+0x108>
  105e23:	8b 45 f8             	mov    -0x8(%ebp),%eax
  105e26:	8d 65 e8             	lea    -0x18(%ebp),%esp
  105e29:	5b                   	pop    %ebx
  105e2a:	5e                   	pop    %esi
  105e2b:	5f                   	pop    %edi
  105e2c:	c9                   	leave  
  105e2d:	c3                   	ret    
  105e2e:	8d 36                	lea    (%esi),%esi

00105e30 <ultonb>:
  105e30:	55                   	push   %ebp
  105e31:	89 e5                	mov    %esp,%ebp
  105e33:	57                   	push   %edi
  105e34:	56                   	push   %esi
  105e35:	53                   	push   %ebx
  105e36:	8b 55 08             	mov    0x8(%ebp),%edx
  105e39:	8b 7d 0c             	mov    0xc(%ebp),%edi
  105e3c:	8b 75 14             	mov    0x14(%ebp),%esi
  105e3f:	8b 45 10             	mov    0x10(%ebp),%eax
  105e42:	48                   	dec    %eax
  105e43:	8d 1c 38             	lea    (%eax,%edi,1),%ebx
  105e46:	c6 03 00             	movb   $0x0,(%ebx)
  105e49:	8d 76 00             	lea    0x0(%esi),%esi
  105e4c:	4b                   	dec    %ebx
  105e4d:	89 d0                	mov    %edx,%eax
  105e4f:	31 d2                	xor    %edx,%edx
  105e51:	f7 f6                	div    %esi
  105e53:	89 c1                	mov    %eax,%ecx
  105e55:	8a 92 32 6e 10 00    	mov    0x106e32(%edx),%dl
  105e5b:	88 13                	mov    %dl,(%ebx)
  105e5d:	89 ca                	mov    %ecx,%edx
  105e5f:	85 d2                	test   %edx,%edx
  105e61:	75 e9                	jne    105e4c <ultonb+0x1c>
  105e63:	39 fb                	cmp    %edi,%ebx
  105e65:	73 16                	jae    105e7d <ultonb+0x4d>
  105e67:	68 43 6e 10 00       	push   $0x106e43
  105e6c:	6a 7e                	push   $0x7e
  105e6e:	68 4d 6e 10 00       	push   $0x106e4d
  105e73:	68 56 6e 10 00       	push   $0x106e56
  105e78:	e8 47 0a 00 00       	call   1068c4 <__eprintf>
  105e7d:	89 d8                	mov    %ebx,%eax
  105e7f:	8d 65 f4             	lea    -0xc(%ebp),%esp
  105e82:	5b                   	pop    %ebx
  105e83:	5e                   	pop    %esi
  105e84:	5f                   	pop    %edi
  105e85:	c9                   	leave  
  105e86:	c3                   	ret    
  105e87:	90                   	nop

00105e88 <ltonb>:
  105e88:	55                   	push   %ebp
  105e89:	89 e5                	mov    %esp,%ebp
  105e8b:	57                   	push   %edi
  105e8c:	56                   	push   %esi
  105e8d:	53                   	push   %ebx
  105e8e:	8b 55 08             	mov    0x8(%ebp),%edx
  105e91:	8b 7d 14             	mov    0x14(%ebp),%edi
  105e94:	89 d6                	mov    %edx,%esi
  105e96:	8b 45 10             	mov    0x10(%ebp),%eax
  105e99:	48                   	dec    %eax
  105e9a:	8b 5d 0c             	mov    0xc(%ebp),%ebx
  105e9d:	01 c3                	add    %eax,%ebx
  105e9f:	c6 03 00             	movb   $0x0,(%ebx)
  105ea2:	85 f6                	test   %esi,%esi
  105ea4:	7f 1a                	jg     105ec0 <ltonb+0x38>
  105ea6:	75 10                	jne    105eb8 <ltonb+0x30>
  105ea8:	8b 4d 0c             	mov    0xc(%ebp),%ecx
  105eab:	c6 01 30             	movb   $0x30,(%ecx)
  105eae:	c6 41 01 00          	movb   $0x0,0x1(%ecx)
  105eb2:	8b 45 0c             	mov    0xc(%ebp),%eax
  105eb5:	eb 4a                	jmp    105f01 <ltonb+0x79>
  105eb7:	90                   	nop
  105eb8:	89 d0                	mov    %edx,%eax
  105eba:	f7 d8                	neg    %eax
  105ebc:	eb 17                	jmp    105ed5 <ltonb+0x4d>
  105ebe:	8d 36                	lea    (%esi),%esi
  105ec0:	89 d0                	mov    %edx,%eax
  105ec2:	eb 11                	jmp    105ed5 <ltonb+0x4d>
  105ec4:	4b                   	dec    %ebx
  105ec5:	31 d2                	xor    %edx,%edx
  105ec7:	f7 f7                	div    %edi
  105ec9:	89 c1                	mov    %eax,%ecx
  105ecb:	8a 82 32 6e 10 00    	mov    0x106e32(%edx),%al
  105ed1:	88 03                	mov    %al,(%ebx)
  105ed3:	89 c8                	mov    %ecx,%eax
  105ed5:	85 c0                	test   %eax,%eax
  105ed7:	75 eb                	jne    105ec4 <ltonb+0x3c>
  105ed9:	85 f6                	test   %esi,%esi
  105edb:	7d 04                	jge    105ee1 <ltonb+0x59>
  105edd:	4b                   	dec    %ebx
  105ede:	c6 03 2d             	movb   $0x2d,(%ebx)
  105ee1:	39 5d 0c             	cmp    %ebx,0xc(%ebp)
  105ee4:	76 19                	jbe    105eff <ltonb+0x77>
  105ee6:	68 43 6e 10 00       	push   $0x106e43
  105eeb:	68 a7 00 00 00       	push   $0xa7
  105ef0:	68 4d 6e 10 00       	push   $0x106e4d
  105ef5:	68 56 6e 10 00       	push   $0x106e56
  105efa:	e8 c5 09 00 00       	call   1068c4 <__eprintf>
  105eff:	89 d8                	mov    %ebx,%eax
  105f01:	8d 65 f4             	lea    -0xc(%ebp),%esp
  105f04:	5b                   	pop    %ebx
  105f05:	5e                   	pop    %esi
  105f06:	5f                   	pop    %edi
  105f07:	c9                   	leave  
  105f08:	c3                   	ret    
  105f09:	8d 76 00             	lea    0x0(%esi),%esi

00105f0c <_doprnt>:
  105f0c:	55                   	push   %ebp
  105f0d:	89 e5                	mov    %esp,%ebp
  105f0f:	81 ec ec 00 00 00    	sub    $0xec,%esp
  105f15:	57                   	push   %edi
  105f16:	56                   	push   %esi
  105f17:	53                   	push   %ebx
  105f18:	c7 85 30 ff ff ff 00 	movl   $0x0,-0xd0(%ebp)
  105f1f:	00 00 00 
  105f22:	8d 45 80             	lea    -0x80(%ebp),%eax
  105f25:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%ebp)
  105f2b:	c6 45 80 00          	movb   $0x0,-0x80(%ebp)
  105f2f:	8b 7d 08             	mov    0x8(%ebp),%edi
  105f32:	8a 17                	mov    (%edi),%dl
  105f34:	47                   	inc    %edi
  105f35:	89 7d 08             	mov    %edi,0x8(%ebp)
  105f38:	84 d2                	test   %dl,%dl
  105f3a:	0f 84 fa 06 00 00    	je     10663a <_doprnt+0x72e>
  105f40:	8d 45 80             	lea    -0x80(%ebp),%eax
  105f43:	89 85 2c ff ff ff    	mov    %eax,-0xd4(%ebp)
  105f49:	8d 76 00             	lea    0x0(%esi),%esi
  105f4c:	80 fa 25             	cmp    $0x25,%dl
  105f4f:	74 4f                	je     105fa0 <_doprnt+0x94>
  105f51:	8b bd 48 ff ff ff    	mov    -0xb8(%ebp),%edi
  105f57:	88 17                	mov    %dl,(%edi)
  105f59:	47                   	inc    %edi
  105f5a:	89 bd 48 ff ff ff    	mov    %edi,-0xb8(%ebp)
  105f60:	89 fa                	mov    %edi,%edx
  105f62:	2b 95 2c ff ff ff    	sub    -0xd4(%ebp),%edx
  105f68:	83 fa 4e             	cmp    $0x4e,%edx
  105f6b:	0f 87 b8 06 00 00    	ja     106629 <_doprnt+0x71d>
  105f71:	ff 75 10             	pushl  0x10(%ebp)
  105f74:	6a 00                	push   $0x0
  105f76:	52                   	push   %edx
  105f77:	ff b5 2c ff ff ff    	pushl  -0xd4(%ebp)
  105f7d:	e8 86 fd ff ff       	call   105d08 <_strout>
  105f82:	89 c2                	mov    %eax,%edx
  105f84:	01 95 30 ff ff ff    	add    %edx,-0xd0(%ebp)
  105f8a:	8b 85 2c ff ff ff    	mov    -0xd4(%ebp),%eax
  105f90:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%ebp)
  105f96:	83 c4 10             	add    $0x10,%esp
  105f99:	e9 8b 06 00 00       	jmp    106629 <_doprnt+0x71d>
  105f9e:	8d 36                	lea    (%esi),%esi
  105fa0:	8b bd 2c ff ff ff    	mov    -0xd4(%ebp),%edi
  105fa6:	39 bd 48 ff ff ff    	cmp    %edi,-0xb8(%ebp)
  105fac:	74 25                	je     105fd3 <_doprnt+0xc7>
  105fae:	ff 75 10             	pushl  0x10(%ebp)
  105fb1:	6a 00                	push   $0x0
  105fb3:	8b 85 48 ff ff ff    	mov    -0xb8(%ebp),%eax
  105fb9:	29 f8                	sub    %edi,%eax
  105fbb:	50                   	push   %eax
  105fbc:	57                   	push   %edi
  105fbd:	e8 46 fd ff ff       	call   105d08 <_strout>
  105fc2:	89 c2                	mov    %eax,%edx
  105fc4:	01 95 30 ff ff ff    	add    %edx,-0xd0(%ebp)
  105fca:	89 bd 48 ff ff ff    	mov    %edi,-0xb8(%ebp)
  105fd0:	83 c4 10             	add    $0x10,%esp
  105fd3:	c7 85 34 ff ff ff 57 	movl   $0x57,-0xcc(%ebp)
  105fda:	00 00 00 
  105fdd:	c6 85 3c ff ff ff 00 	movb   $0x0,-0xc4(%ebp)
  105fe4:	c7 85 14 ff ff ff 00 	movl   $0x0,-0xec(%ebp)
  105feb:	00 00 00 
  105fee:	c6 85 40 ff ff ff 20 	movb   $0x20,-0xc0(%ebp)
  105ff5:	8b 7d 08             	mov    0x8(%ebp),%edi
  105ff8:	80 3f 2d             	cmpb   $0x2d,(%edi)
  105ffb:	75 0a                	jne    106007 <_doprnt+0xfb>
  105ffd:	fe 85 3c ff ff ff    	incb   -0xc4(%ebp)
  106003:	47                   	inc    %edi
  106004:	89 7d 08             	mov    %edi,0x8(%ebp)
  106007:	8b 45 08             	mov    0x8(%ebp),%eax
  10600a:	80 38 30             	cmpb   $0x30,(%eax)
  10600d:	75 0b                	jne    10601a <_doprnt+0x10e>
  10600f:	c6 85 40 ff ff ff 30 	movb   $0x30,-0xc0(%ebp)
  106016:	40                   	inc    %eax
  106017:	89 45 08             	mov    %eax,0x8(%ebp)
  10601a:	8b 7d 08             	mov    0x8(%ebp),%edi
  10601d:	80 3f 2a             	cmpb   $0x2a,(%edi)
  106020:	74 46                	je     106068 <_doprnt+0x15c>
  106022:	c7 85 44 ff ff ff 00 	movl   $0x0,-0xbc(%ebp)
  106029:	00 00 00 
  10602c:	0f be 07             	movsbl (%edi),%eax
  10602f:	89 c2                	mov    %eax,%edx
  106031:	83 c2 d0             	add    $0xffffffd0,%edx
  106034:	47                   	inc    %edi
  106035:	89 7d 08             	mov    %edi,0x8(%ebp)
  106038:	85 d2                	test   %edx,%edx
  10603a:	7c 4c                	jl     106088 <_doprnt+0x17c>
  10603c:	83 fa 09             	cmp    $0x9,%edx
  10603f:	7f 47                	jg     106088 <_doprnt+0x17c>
  106041:	8b bd 44 ff ff ff    	mov    -0xbc(%ebp),%edi
  106047:	8d 3c ff             	lea    (%edi,%edi,8),%edi
  10604a:	03 bd 44 ff ff ff    	add    -0xbc(%ebp),%edi
  106050:	01 fa                	add    %edi,%edx
  106052:	89 95 44 ff ff ff    	mov    %edx,-0xbc(%ebp)
  106058:	8b 45 08             	mov    0x8(%ebp),%eax
  10605b:	0f be 00             	movsbl (%eax),%eax
  10605e:	89 c2                	mov    %eax,%edx
  106060:	83 c2 d0             	add    $0xffffffd0,%edx
  106063:	ff 45 08             	incl   0x8(%ebp)
  106066:	eb d0                	jmp    106038 <_doprnt+0x12c>
  106068:	ff 45 08             	incl   0x8(%ebp)
  10606b:	8b 7d 08             	mov    0x8(%ebp),%edi
  10606e:	0f be 17             	movsbl (%edi),%edx
  106071:	83 c2 d0             	add    $0xffffffd0,%edx
  106074:	47                   	inc    %edi
  106075:	89 7d 08             	mov    %edi,0x8(%ebp)
  106078:	83 45 0c 04          	addl   $0x4,0xc(%ebp)
  10607c:	8b 45 0c             	mov    0xc(%ebp),%eax
  10607f:	8b 40 fc             	mov    -0x4(%eax),%eax
  106082:	89 85 44 ff ff ff    	mov    %eax,-0xbc(%ebp)
  106088:	83 c2 30             	add    $0x30,%edx
  10608b:	83 fa 2e             	cmp    $0x2e,%edx
  10608e:	75 79                	jne    106109 <_doprnt+0x1fd>
  106090:	8b 7d 08             	mov    0x8(%ebp),%edi
  106093:	80 3f 2a             	cmpb   $0x2a,(%edi)
  106096:	74 54                	je     1060ec <_doprnt+0x1e0>
  106098:	c7 85 14 ff ff ff 00 	movl   $0x0,-0xec(%ebp)
  10609f:	00 00 00 
  1060a2:	0f be 07             	movsbl (%edi),%eax
  1060a5:	89 c2                	mov    %eax,%edx
  1060a7:	83 c2 d0             	add    $0xffffffd0,%edx
  1060aa:	47                   	inc    %edi
  1060ab:	89 7d 08             	mov    %edi,0x8(%ebp)
  1060ae:	85 d2                	test   %edx,%edx
  1060b0:	7c 32                	jl     1060e4 <_doprnt+0x1d8>
  1060b2:	8d 36                	lea    (%esi),%esi
  1060b4:	83 fa 09             	cmp    $0x9,%edx
  1060b7:	7f 2b                	jg     1060e4 <_doprnt+0x1d8>
  1060b9:	8b bd 14 ff ff ff    	mov    -0xec(%ebp),%edi
  1060bf:	8d 3c ff             	lea    (%edi,%edi,8),%edi
  1060c2:	8b 85 14 ff ff ff    	mov    -0xec(%ebp),%eax
  1060c8:	01 f8                	add    %edi,%eax
  1060ca:	01 c2                	add    %eax,%edx
  1060cc:	89 95 14 ff ff ff    	mov    %edx,-0xec(%ebp)
  1060d2:	8b 7d 08             	mov    0x8(%ebp),%edi
  1060d5:	0f be 3f             	movsbl (%edi),%edi
  1060d8:	89 fa                	mov    %edi,%edx
  1060da:	83 c2 d0             	add    $0xffffffd0,%edx
  1060dd:	ff 45 08             	incl   0x8(%ebp)
  1060e0:	85 d2                	test   %edx,%edx
  1060e2:	7d d0                	jge    1060b4 <_doprnt+0x1a8>
  1060e4:	83 c2 30             	add    $0x30,%edx
  1060e7:	eb 20                	jmp    106109 <_doprnt+0x1fd>
  1060e9:	8d 76 00             	lea    0x0(%esi),%esi
  1060ec:	ff 45 08             	incl   0x8(%ebp)
  1060ef:	8b 45 08             	mov    0x8(%ebp),%eax
  1060f2:	0f be 10             	movsbl (%eax),%edx
  1060f5:	40                   	inc    %eax
  1060f6:	89 45 08             	mov    %eax,0x8(%ebp)
  1060f9:	83 45 0c 04          	addl   $0x4,0xc(%ebp)
  1060fd:	8b 7d 0c             	mov    0xc(%ebp),%edi
  106100:	8b 7f fc             	mov    -0x4(%edi),%edi
  106103:	89 bd 14 ff ff ff    	mov    %edi,-0xec(%ebp)
  106109:	8d 4a db             	lea    -0x25(%edx),%ecx
  10610c:	83 f9 53             	cmp    $0x53,%ecx
  10610f:	0f 87 fb 04 00 00    	ja     106610 <_doprnt+0x704>
  106115:	ff 24 8d 1c 61 10 00 	jmp    *0x10611c(,%ecx,4)
  10611c:	fc                   	cld    
  10611d:	65 10 00             	adc    %al,%gs:(%eax)
  106120:	10 66 10             	adc    %ah,0x10(%esi)
  106123:	00 10                	add    %dl,(%eax)
  106125:	66                   	data16
  106126:	10 00                	adc    %al,(%eax)
  106128:	10 66 10             	adc    %ah,0x10(%esi)
  10612b:	00 10                	add    %dl,(%eax)
  10612d:	66                   	data16
  10612e:	10 00                	adc    %al,(%eax)
  106130:	10 66 10             	adc    %ah,0x10(%esi)
  106133:	00 10                	add    %dl,(%eax)
  106135:	66                   	data16
  106136:	10 00                	adc    %al,(%eax)
  106138:	10 66 10             	adc    %ah,0x10(%esi)
  10613b:	00 10                	add    %dl,(%eax)
  10613d:	66                   	data16
  10613e:	10 00                	adc    %al,(%eax)
  106140:	10 66 10             	adc    %ah,0x10(%esi)
  106143:	00 10                	add    %dl,(%eax)
  106145:	66                   	data16
  106146:	10 00                	adc    %al,(%eax)
  106148:	10 66 10             	adc    %ah,0x10(%esi)
  10614b:	00 10                	add    %dl,(%eax)
  10614d:	66                   	data16
  10614e:	10 00                	adc    %al,(%eax)
  106150:	10 66 10             	adc    %ah,0x10(%esi)
  106153:	00 10                	add    %dl,(%eax)
  106155:	66                   	data16
  106156:	10 00                	adc    %al,(%eax)
  106158:	10 66 10             	adc    %ah,0x10(%esi)
  10615b:	00 10                	add    %dl,(%eax)
  10615d:	66                   	data16
  10615e:	10 00                	adc    %al,(%eax)
  106160:	10 66 10             	adc    %ah,0x10(%esi)
  106163:	00 10                	add    %dl,(%eax)
  106165:	66                   	data16
  106166:	10 00                	adc    %al,(%eax)
  106168:	10 66 10             	adc    %ah,0x10(%esi)
  10616b:	00 10                	add    %dl,(%eax)
  10616d:	66                   	data16
  10616e:	10 00                	adc    %al,(%eax)
  106170:	10 66 10             	adc    %ah,0x10(%esi)
  106173:	00 10                	add    %dl,(%eax)
  106175:	66                   	data16
  106176:	10 00                	adc    %al,(%eax)
  106178:	10 66 10             	adc    %ah,0x10(%esi)
  10617b:	00 10                	add    %dl,(%eax)
  10617d:	66                   	data16
  10617e:	10 00                	adc    %al,(%eax)
  106180:	10 66 10             	adc    %ah,0x10(%esi)
  106183:	00 10                	add    %dl,(%eax)
  106185:	66                   	data16
  106186:	10 00                	adc    %al,(%eax)
  106188:	10 66 10             	adc    %ah,0x10(%esi)
  10618b:	00 10                	add    %dl,(%eax)
  10618d:	66                   	data16
  10618e:	10 00                	adc    %al,(%eax)
  106190:	10 66 10             	adc    %ah,0x10(%esi)
  106193:	00 10                	add    %dl,(%eax)
  106195:	66                   	data16
  106196:	10 00                	adc    %al,(%eax)
  106198:	10 66 10             	adc    %ah,0x10(%esi)
  10619b:	00 10                	add    %dl,(%eax)
  10619d:	66                   	data16
  10619e:	10 00                	adc    %al,(%eax)
  1061a0:	10 66 10             	adc    %ah,0x10(%esi)
  1061a3:	00 10                	add    %dl,(%eax)
  1061a5:	66                   	data16
  1061a6:	10 00                	adc    %al,(%eax)
  1061a8:	10 66 10             	adc    %ah,0x10(%esi)
  1061ab:	00 10                	add    %dl,(%eax)
  1061ad:	66                   	data16
  1061ae:	10 00                	adc    %al,(%eax)
  1061b0:	10 66 10             	adc    %ah,0x10(%esi)
  1061b3:	00 10                	add    %dl,(%eax)
  1061b5:	66                   	data16
  1061b6:	10 00                	adc    %al,(%eax)
  1061b8:	10 66 10             	adc    %ah,0x10(%esi)
  1061bb:	00 10                	add    %dl,(%eax)
  1061bd:	66                   	data16
  1061be:	10 00                	adc    %al,(%eax)
  1061c0:	10 66 10             	adc    %ah,0x10(%esi)
  1061c3:	00 10                	add    %dl,(%eax)
  1061c5:	66                   	data16
  1061c6:	10 00                	adc    %al,(%eax)
  1061c8:	10 66 10             	adc    %ah,0x10(%esi)
  1061cb:	00 10                	add    %dl,(%eax)
  1061cd:	66                   	data16
  1061ce:	10 00                	adc    %al,(%eax)
  1061d0:	10 66 10             	adc    %ah,0x10(%esi)
  1061d3:	00 10                	add    %dl,(%eax)
  1061d5:	66                   	data16
  1061d6:	10 00                	adc    %al,(%eax)
  1061d8:	10 66 10             	adc    %ah,0x10(%esi)
  1061db:	00 10                	add    %dl,(%eax)
  1061dd:	66                   	data16
  1061de:	10 00                	adc    %al,(%eax)
  1061e0:	10 66 10             	adc    %ah,0x10(%esi)
  1061e3:	00 10                	add    %dl,(%eax)
  1061e5:	66                   	data16
  1061e6:	10 00                	adc    %al,(%eax)
  1061e8:	6c                   	insb   (%dx),%es:(%edi)
  1061e9:	64 10 00             	adc    %al,%fs:(%eax)
  1061ec:	10 66 10             	adc    %ah,0x10(%esi)
  1061ef:	00 10                	add    %dl,(%eax)
  1061f1:	66                   	data16
  1061f2:	10 00                	adc    %al,(%eax)
  1061f4:	10 66 10             	adc    %ah,0x10(%esi)
  1061f7:	00 10                	add    %dl,(%eax)
  1061f9:	66                   	data16
  1061fa:	10 00                	adc    %al,(%eax)
  1061fc:	10 66 10             	adc    %ah,0x10(%esi)
  1061ff:	00 10                	add    %dl,(%eax)
  106201:	66                   	data16
  106202:	10 00                	adc    %al,(%eax)
  106204:	10 66 10             	adc    %ah,0x10(%esi)
  106207:	00 10                	add    %dl,(%eax)
  106209:	66                   	data16
  10620a:	10 00                	adc    %al,(%eax)
  10620c:	10 66 10             	adc    %ah,0x10(%esi)
  10620f:	00 6c 62 10          	add    %ch,0x10(%edx,%eiz,2)
  106213:	00 40 65             	add    %al,0x65(%eax)
  106216:	10 00                	adc    %al,(%eax)
  106218:	88 64 10 00          	mov    %ah,0x0(%eax,%edx,1)
  10621c:	10 66 10             	adc    %ah,0x10(%esi)
  10621f:	00 10                	add    %dl,(%eax)
  106221:	66                   	data16
  106222:	10 00                	adc    %al,(%eax)
  106224:	10 66 10             	adc    %ah,0x10(%esi)
  106227:	00 10                	add    %dl,(%eax)
  106229:	66                   	data16
  10622a:	10 00                	adc    %al,(%eax)
  10622c:	88 64 10 00          	mov    %ah,0x0(%eax,%edx,1)
  106230:	10 66 10             	adc    %ah,0x10(%esi)
  106233:	00 10                	add    %dl,(%eax)
  106235:	66                   	data16
  106236:	10 00                	adc    %al,(%eax)
  106238:	a4                   	movsb  %ds:(%esi),%es:(%edi)
  106239:	63 10                	arpl   %dx,(%eax)
  10623b:	00 10                	add    %dl,(%eax)
  10623d:	66                   	data16
  10623e:	10 00                	adc    %al,(%eax)
  106240:	10 66 10             	adc    %ah,0x10(%esi)
  106243:	00 58 64             	add    %bl,0x64(%eax)
  106246:	10 00                	adc    %al,(%eax)
  106248:	6c                   	insb   (%dx),%es:(%edi)
  106249:	64 10 00             	adc    %al,%fs:(%eax)
  10624c:	10 66 10             	adc    %ah,0x10(%esi)
  10624f:	00 10                	add    %dl,(%eax)
  106251:	66                   	data16
  106252:	10 00                	adc    %al,(%eax)
  106254:	ac                   	lods   %ds:(%esi),%al
  106255:	65 10 00             	adc    %al,%gs:(%eax)
  106258:	50                   	push   %eax
  106259:	64 10 00             	adc    %al,%fs:(%eax)
  10625c:	b0 64                	mov    $0x64,%al
  10625e:	10 00                	adc    %al,(%eax)
  106260:	10 66 10             	adc    %ah,0x10(%esi)
  106263:	00 10                	add    %dl,(%eax)
  106265:	66                   	data16
  106266:	10 00                	adc    %al,(%eax)
  106268:	76 64                	jbe    1062ce <_doprnt+0x3c2>
  10626a:	10 00                	adc    %al,(%eax)
  10626c:	83 45 0c 04          	addl   $0x4,0xc(%ebp)
  106270:	8b 45 0c             	mov    0xc(%ebp),%eax
  106273:	8b 40 fc             	mov    -0x4(%eax),%eax
  106276:	89 85 38 ff ff ff    	mov    %eax,-0xc8(%ebp)
  10627c:	83 45 0c 04          	addl   $0x4,0xc(%ebp)
  106280:	8b 7d 0c             	mov    0xc(%ebp),%edi
  106283:	8b 5f fc             	mov    -0x4(%edi),%ebx
  106286:	0f be 03             	movsbl (%ebx),%eax
  106289:	50                   	push   %eax
  10628a:	43                   	inc    %ebx
  10628b:	6a 32                	push   $0x32
  10628d:	8d bd 4c ff ff ff    	lea    -0xb4(%ebp),%edi
  106293:	57                   	push   %edi
  106294:	ff b5 38 ff ff ff    	pushl  -0xc8(%ebp)
  10629a:	e8 91 fb ff ff       	call   105e30 <ultonb>
  10629f:	89 c6                	mov    %eax,%esi
  1062a1:	ff 75 10             	pushl  0x10(%ebp)
  1062a4:	6a 00                	push   $0x0
  1062a6:	30 d2                	xor    %dl,%dl
  1062a8:	89 b5 14 ff ff ff    	mov    %esi,-0xec(%ebp)
  1062ae:	89 f7                	mov    %esi,%edi
  1062b0:	88 d0                	mov    %dl,%al
  1062b2:	fc                   	cld    
  1062b3:	b9 ff ff ff ff       	mov    $0xffffffff,%ecx
  1062b8:	f2 ae                	repnz scas %es:(%edi),%al
  1062ba:	f7 d1                	not    %ecx
  1062bc:	89 c8                	mov    %ecx,%eax
  1062be:	48                   	dec    %eax
  1062bf:	50                   	push   %eax
  1062c0:	56                   	push   %esi
  1062c1:	e8 42 fa ff ff       	call   105d08 <_strout>
  1062c6:	89 c2                	mov    %eax,%edx
  1062c8:	01 95 30 ff ff ff    	add    %edx,-0xd0(%ebp)
  1062ce:	83 c4 20             	add    $0x20,%esp
  1062d1:	83 bd 38 ff ff ff 00 	cmpl   $0x0,-0xc8(%ebp)
  1062d8:	75 12                	jne    1062ec <_doprnt+0x3e0>
  1062da:	8b bd 48 ff ff ff    	mov    -0xb8(%ebp),%edi
  1062e0:	c6 07 3c             	movb   $0x3c,(%edi)
  1062e3:	47                   	inc    %edi
  1062e4:	c6 07 3e             	movb   $0x3e,(%edi)
  1062e7:	e9 19 03 00 00       	jmp    106605 <_doprnt+0x6f9>
  1062ec:	b2 3c                	mov    $0x3c,%dl
  1062ee:	80 3b 00             	cmpb   $0x0,(%ebx)
  1062f1:	0f 84 95 00 00 00    	je     10638c <_doprnt+0x480>
  1062f7:	0f be 0b             	movsbl (%ebx),%ecx
  1062fa:	43                   	inc    %ebx
  1062fb:	49                   	dec    %ecx
  1062fc:	89 8d 28 ff ff ff    	mov    %ecx,-0xd8(%ebp)
  106302:	8b 85 38 ff ff ff    	mov    -0xc8(%ebp),%eax
  106308:	0f a3 c8             	bt     %ecx,%eax
  10630b:	73 74                	jae    106381 <_doprnt+0x475>
  10630d:	8b bd 48 ff ff ff    	mov    -0xb8(%ebp),%edi
  106313:	88 17                	mov    %dl,(%edi)
  106315:	47                   	inc    %edi
  106316:	89 bd 48 ff ff ff    	mov    %edi,-0xb8(%ebp)
  10631c:	80 3b 20             	cmpb   $0x20,(%ebx)
  10631f:	7e 1a                	jle    10633b <_doprnt+0x42f>
  106321:	8d 76 00             	lea    0x0(%esi),%esi
  106324:	8a 03                	mov    (%ebx),%al
  106326:	8b bd 48 ff ff ff    	mov    -0xb8(%ebp),%edi
  10632c:	88 07                	mov    %al,(%edi)
  10632e:	47                   	inc    %edi
  10632f:	89 bd 48 ff ff ff    	mov    %edi,-0xb8(%ebp)
  106335:	43                   	inc    %ebx
  106336:	80 3b 20             	cmpb   $0x20,(%ebx)
  106339:	7f e9                	jg     106324 <_doprnt+0x418>
  10633b:	ff 75 10             	pushl  0x10(%ebp)
  10633e:	6a 00                	push   $0x0
  106340:	8b 85 48 ff ff ff    	mov    -0xb8(%ebp),%eax
  106346:	2b 85 2c ff ff ff    	sub    -0xd4(%ebp),%eax
  10634c:	50                   	push   %eax
  10634d:	ff b5 2c ff ff ff    	pushl  -0xd4(%ebp)
  106353:	e8 b0 f9 ff ff       	call   105d08 <_strout>
  106358:	89 c2                	mov    %eax,%edx
  10635a:	8b bd 30 ff ff ff    	mov    -0xd0(%ebp),%edi
  106360:	8d 54 3a 01          	lea    0x1(%edx,%edi,1),%edx
  106364:	89 95 30 ff ff ff    	mov    %edx,-0xd0(%ebp)
  10636a:	8b 85 2c ff ff ff    	mov    -0xd4(%ebp),%eax
  106370:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%ebp)
  106376:	b2 2c                	mov    $0x2c,%dl
  106378:	83 c4 10             	add    $0x10,%esp
  10637b:	e9 6e ff ff ff       	jmp    1062ee <_doprnt+0x3e2>
  106380:	43                   	inc    %ebx
  106381:	80 3b 20             	cmpb   $0x20,(%ebx)
  106384:	7f fa                	jg     106380 <_doprnt+0x474>
  106386:	e9 63 ff ff ff       	jmp    1062ee <_doprnt+0x3e2>
  10638b:	90                   	nop
  10638c:	80 fa 2c             	cmp    $0x2c,%dl
  10638f:	0f 85 94 02 00 00    	jne    106629 <_doprnt+0x71d>
  106395:	8b bd 48 ff ff ff    	mov    -0xb8(%ebp),%edi
  10639b:	c6 07 3e             	movb   $0x3e,(%edi)
  10639e:	e9 62 02 00 00       	jmp    106605 <_doprnt+0x6f9>
  1063a3:	90                   	nop
  1063a4:	8b 45 08             	mov    0x8(%ebp),%eax
  1063a7:	8a 00                	mov    (%eax),%al
  1063a9:	04 a8                	add    $0xa8,%al
  1063ab:	0f be d0             	movsbl %al,%edx
  1063ae:	ff 45 08             	incl   0x8(%ebp)
  1063b1:	83 fa 20             	cmp    $0x20,%edx
  1063b4:	0f 87 8e 00 00 00    	ja     106448 <_doprnt+0x53c>
  1063ba:	ff 24 95 c4 63 10 00 	jmp    *0x1063c4(,%edx,4)
  1063c1:	8d 76 00             	lea    0x0(%esi),%esi
  1063c4:	6c                   	insb   (%dx),%es:(%edi)
  1063c5:	64 10 00             	adc    %al,%fs:(%eax)
  1063c8:	48                   	dec    %eax
  1063c9:	64 10 00             	adc    %al,%fs:(%eax)
  1063cc:	48                   	dec    %eax
  1063cd:	64 10 00             	adc    %al,%fs:(%eax)
  1063d0:	48                   	dec    %eax
  1063d1:	64 10 00             	adc    %al,%fs:(%eax)
  1063d4:	48                   	dec    %eax
  1063d5:	64 10 00             	adc    %al,%fs:(%eax)
  1063d8:	48                   	dec    %eax
  1063d9:	64 10 00             	adc    %al,%fs:(%eax)
  1063dc:	48                   	dec    %eax
  1063dd:	64 10 00             	adc    %al,%fs:(%eax)
  1063e0:	48                   	dec    %eax
  1063e1:	64 10 00             	adc    %al,%fs:(%eax)
  1063e4:	48                   	dec    %eax
  1063e5:	64 10 00             	adc    %al,%fs:(%eax)
  1063e8:	48                   	dec    %eax
  1063e9:	64 10 00             	adc    %al,%fs:(%eax)
  1063ec:	48                   	dec    %eax
  1063ed:	64 10 00             	adc    %al,%fs:(%eax)
  1063f0:	48                   	dec    %eax
  1063f1:	64 10 00             	adc    %al,%fs:(%eax)
  1063f4:	88 64 10 00          	mov    %ah,0x0(%eax,%edx,1)
  1063f8:	48                   	dec    %eax
  1063f9:	64 10 00             	adc    %al,%fs:(%eax)
  1063fc:	48                   	dec    %eax
  1063fd:	64 10 00             	adc    %al,%fs:(%eax)
  106400:	48                   	dec    %eax
  106401:	64 10 00             	adc    %al,%fs:(%eax)
  106404:	48                   	dec    %eax
  106405:	64 10 00             	adc    %al,%fs:(%eax)
  106408:	88 64 10 00          	mov    %ah,0x0(%eax,%edx,1)
  10640c:	48                   	dec    %eax
  10640d:	64 10 00             	adc    %al,%fs:(%eax)
  106410:	48                   	dec    %eax
  106411:	64 10 00             	adc    %al,%fs:(%eax)
  106414:	48                   	dec    %eax
  106415:	64 10 00             	adc    %al,%fs:(%eax)
  106418:	48                   	dec    %eax
  106419:	64 10 00             	adc    %al,%fs:(%eax)
  10641c:	48                   	dec    %eax
  10641d:	64 10 00             	adc    %al,%fs:(%eax)
  106420:	58                   	pop    %eax
  106421:	64 10 00             	adc    %al,%fs:(%eax)
  106424:	48                   	dec    %eax
  106425:	64 10 00             	adc    %al,%fs:(%eax)
  106428:	48                   	dec    %eax
  106429:	64 10 00             	adc    %al,%fs:(%eax)
  10642c:	48                   	dec    %eax
  10642d:	64 10 00             	adc    %al,%fs:(%eax)
  106430:	48                   	dec    %eax
  106431:	64 10 00             	adc    %al,%fs:(%eax)
  106434:	50                   	push   %eax
  106435:	64 10 00             	adc    %al,%fs:(%eax)
  106438:	b0 64                	mov    $0x64,%al
  10643a:	10 00                	adc    %al,(%eax)
  10643c:	48                   	dec    %eax
  10643d:	64 10 00             	adc    %al,%fs:(%eax)
  106440:	48                   	dec    %eax
  106441:	64 10 00             	adc    %al,%fs:(%eax)
  106444:	76 64                	jbe    1064aa <_doprnt+0x59e>
  106446:	10 00                	adc    %al,(%eax)
  106448:	ff 4d 08             	decl   0x8(%ebp)
  10644b:	eb 63                	jmp    1064b0 <_doprnt+0x5a4>
  10644d:	8d 76 00             	lea    0x0(%esi),%esi
  106450:	bb 02 00 00 00       	mov    $0x2,%ebx
  106455:	eb 24                	jmp    10647b <_doprnt+0x56f>
  106457:	90                   	nop
  106458:	bb 08 00 00 00       	mov    $0x8,%ebx
  10645d:	83 45 0c 04          	addl   $0x4,0xc(%ebp)
  106461:	8b 45 0c             	mov    0xc(%ebp),%eax
  106464:	8b 48 fc             	mov    -0x4(%eax),%ecx
  106467:	eb 56                	jmp    1064bf <_doprnt+0x5b3>
  106469:	8d 76 00             	lea    0x0(%esi),%esi
  10646c:	c7 85 34 ff ff ff 37 	movl   $0x37,-0xcc(%ebp)
  106473:	00 00 00 
  106476:	bb 10 00 00 00       	mov    $0x10,%ebx
  10647b:	83 45 0c 04          	addl   $0x4,0xc(%ebp)
  10647f:	8b 7d 0c             	mov    0xc(%ebp),%edi
  106482:	8b 4f fc             	mov    -0x4(%edi),%ecx
  106485:	eb 38                	jmp    1064bf <_doprnt+0x5b3>
  106487:	90                   	nop
  106488:	bb 0a 00 00 00       	mov    $0xa,%ebx
  10648d:	83 45 0c 04          	addl   $0x4,0xc(%ebp)
  106491:	8b 45 0c             	mov    0xc(%ebp),%eax
  106494:	8b 48 fc             	mov    -0x4(%eax),%ecx
  106497:	85 c9                	test   %ecx,%ecx
  106499:	7d 24                	jge    1064bf <_doprnt+0x5b3>
  10649b:	8b bd 48 ff ff ff    	mov    -0xb8(%ebp),%edi
  1064a1:	c6 07 2d             	movb   $0x2d,(%edi)
  1064a4:	47                   	inc    %edi
  1064a5:	89 bd 48 ff ff ff    	mov    %edi,-0xb8(%ebp)
  1064ab:	f7 d9                	neg    %ecx
  1064ad:	eb 10                	jmp    1064bf <_doprnt+0x5b3>
  1064af:	90                   	nop
  1064b0:	83 45 0c 04          	addl   $0x4,0xc(%ebp)
  1064b4:	8b 45 0c             	mov    0xc(%ebp),%eax
  1064b7:	8b 48 fc             	mov    -0x4(%eax),%ecx
  1064ba:	bb 0a 00 00 00       	mov    $0xa,%ebx
  1064bf:	85 c9                	test   %ecx,%ecx
  1064c1:	75 19                	jne    1064dc <_doprnt+0x5d0>
  1064c3:	83 bd 14 ff ff ff 00 	cmpl   $0x0,-0xec(%ebp)
  1064ca:	75 10                	jne    1064dc <_doprnt+0x5d0>
  1064cc:	8b bd 48 ff ff ff    	mov    -0xb8(%ebp),%edi
  1064d2:	c6 07 30             	movb   $0x30,(%edi)
  1064d5:	47                   	inc    %edi
  1064d6:	89 bd 48 ff ff ff    	mov    %edi,-0xb8(%ebp)
  1064dc:	8d b5 4c ff ff ff    	lea    -0xb4(%ebp),%esi
  1064e2:	85 c9                	test   %ecx,%ecx
  1064e4:	74 35                	je     10651b <_doprnt+0x60f>
  1064e6:	8d 36                	lea    (%esi),%esi
  1064e8:	89 c8                	mov    %ecx,%eax
  1064ea:	31 d2                	xor    %edx,%edx
  1064ec:	f7 f3                	div    %ebx
  1064ee:	89 b5 14 ff ff ff    	mov    %esi,-0xec(%ebp)
  1064f4:	46                   	inc    %esi
  1064f5:	83 fa 09             	cmp    $0x9,%edx
  1064f8:	7e 0a                	jle    106504 <_doprnt+0x5f8>
  1064fa:	02 95 34 ff ff ff    	add    -0xcc(%ebp),%dl
  106500:	eb 05                	jmp    106507 <_doprnt+0x5fb>
  106502:	8d 36                	lea    (%esi),%esi
  106504:	80 c2 30             	add    $0x30,%dl
  106507:	8b 85 14 ff ff ff    	mov    -0xec(%ebp),%eax
  10650d:	88 10                	mov    %dl,(%eax)
  10650f:	89 c8                	mov    %ecx,%eax
  106511:	31 d2                	xor    %edx,%edx
  106513:	f7 f3                	div    %ebx
  106515:	89 c1                	mov    %eax,%ecx
  106517:	85 c9                	test   %ecx,%ecx
  106519:	75 cd                	jne    1064e8 <_doprnt+0x5dc>
  10651b:	8d 85 4c ff ff ff    	lea    -0xb4(%ebp),%eax
  106521:	89 c2                	mov    %eax,%edx
  106523:	39 c6                	cmp    %eax,%esi
  106525:	76 2f                	jbe    106556 <_doprnt+0x64a>
  106527:	90                   	nop
  106528:	4e                   	dec    %esi
  106529:	8a 06                	mov    (%esi),%al
  10652b:	8b bd 48 ff ff ff    	mov    -0xb8(%ebp),%edi
  106531:	88 07                	mov    %al,(%edi)
  106533:	47                   	inc    %edi
  106534:	89 bd 48 ff ff ff    	mov    %edi,-0xb8(%ebp)
  10653a:	39 d6                	cmp    %edx,%esi
  10653c:	77 ea                	ja     106528 <_doprnt+0x61c>
  10653e:	eb 16                	jmp    106556 <_doprnt+0x64a>
  106540:	83 45 0c 04          	addl   $0x4,0xc(%ebp)
  106544:	8b 45 0c             	mov    0xc(%ebp),%eax
  106547:	8a 40 fc             	mov    -0x4(%eax),%al
  10654a:	88 45 80             	mov    %al,-0x80(%ebp)
  10654d:	8d 7d 81             	lea    -0x7f(%ebp),%edi
  106550:	89 bd 48 ff ff ff    	mov    %edi,-0xb8(%ebp)
  106556:	8d 75 80             	lea    -0x80(%ebp),%esi
  106559:	8b 85 48 ff ff ff    	mov    -0xb8(%ebp),%eax
  10655f:	29 f0                	sub    %esi,%eax
  106561:	8b 95 44 ff ff ff    	mov    -0xbc(%ebp),%edx
  106567:	29 c2                	sub    %eax,%edx
  106569:	79 02                	jns    10656d <_doprnt+0x661>
  10656b:	31 d2                	xor    %edx,%edx
  10656d:	80 bd 3c ff ff ff 00 	cmpb   $0x0,-0xc4(%ebp)
  106574:	75 02                	jne    106578 <_doprnt+0x66c>
  106576:	f7 da                	neg    %edx
  106578:	0f be 85 40 ff ff ff 	movsbl -0xc0(%ebp),%eax
  10657f:	50                   	push   %eax
  106580:	ff 75 10             	pushl  0x10(%ebp)
  106583:	52                   	push   %edx
  106584:	8b bd 48 ff ff ff    	mov    -0xb8(%ebp),%edi
  10658a:	29 f7                	sub    %esi,%edi
  10658c:	57                   	push   %edi
  10658d:	56                   	push   %esi
  10658e:	e8 75 f7 ff ff       	call   105d08 <_strout>
  106593:	89 c2                	mov    %eax,%edx
  106595:	01 95 30 ff ff ff    	add    %edx,-0xd0(%ebp)
  10659b:	8d 45 80             	lea    -0x80(%ebp),%eax
  10659e:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%ebp)
  1065a4:	83 c4 14             	add    $0x14,%esp
  1065a7:	e9 7d 00 00 00       	jmp    106629 <_doprnt+0x71d>
  1065ac:	83 45 0c 04          	addl   $0x4,0xc(%ebp)
  1065b0:	8b 7d 0c             	mov    0xc(%ebp),%edi
  1065b3:	8b 77 fc             	mov    -0x4(%edi),%esi
  1065b6:	85 f6                	test   %esi,%esi
  1065b8:	75 05                	jne    1065bf <_doprnt+0x6b3>
  1065ba:	be 81 6e 10 00       	mov    $0x106e81,%esi
  1065bf:	8b 95 14 ff ff ff    	mov    -0xec(%ebp),%edx
  1065c5:	85 d2                	test   %edx,%edx
  1065c7:	75 05                	jne    1065ce <_doprnt+0x6c2>
  1065c9:	ba ff 7f 00 00       	mov    $0x7fff,%edx
  1065ce:	89 b5 48 ff ff ff    	mov    %esi,-0xb8(%ebp)
  1065d4:	80 3e 00             	cmpb   $0x0,(%esi)
  1065d7:	74 80                	je     106559 <_doprnt+0x64d>
  1065d9:	8d 76 00             	lea    0x0(%esi),%esi
  1065dc:	4a                   	dec    %edx
  1065dd:	0f 88 76 ff ff ff    	js     106559 <_doprnt+0x64d>
  1065e3:	ff 85 48 ff ff ff    	incl   -0xb8(%ebp)
  1065e9:	8b 85 48 ff ff ff    	mov    -0xb8(%ebp),%eax
  1065ef:	80 38 00             	cmpb   $0x0,(%eax)
  1065f2:	0f 84 61 ff ff ff    	je     106559 <_doprnt+0x64d>
  1065f8:	eb e2                	jmp    1065dc <_doprnt+0x6d0>
  1065fa:	8d 36                	lea    (%esi),%esi
  1065fc:	8b bd 48 ff ff ff    	mov    -0xb8(%ebp),%edi
  106602:	c6 07 25             	movb   $0x25,(%edi)
  106605:	47                   	inc    %edi
  106606:	89 bd 48 ff ff ff    	mov    %edi,-0xb8(%ebp)
  10660c:	eb 1b                	jmp    106629 <_doprnt+0x71d>
  10660e:	8d 36                	lea    (%esi),%esi
  106610:	8b 85 48 ff ff ff    	mov    -0xb8(%ebp),%eax
  106616:	c6 00 25             	movb   $0x25,(%eax)
  106619:	40                   	inc    %eax
  10661a:	88 95 1c ff ff ff    	mov    %dl,-0xe4(%ebp)
  106620:	88 10                	mov    %dl,(%eax)
  106622:	40                   	inc    %eax
  106623:	89 85 48 ff ff ff    	mov    %eax,-0xb8(%ebp)
  106629:	8b 7d 08             	mov    0x8(%ebp),%edi
  10662c:	8a 17                	mov    (%edi),%dl
  10662e:	47                   	inc    %edi
  10662f:	89 7d 08             	mov    %edi,0x8(%ebp)
  106632:	84 d2                	test   %dl,%dl
  106634:	0f 85 12 f9 ff ff    	jne    105f4c <_doprnt+0x40>
  10663a:	8d 55 80             	lea    -0x80(%ebp),%edx
  10663d:	39 95 48 ff ff ff    	cmp    %edx,-0xb8(%ebp)
  106643:	74 1c                	je     106661 <_doprnt+0x755>
  106645:	6a 20                	push   $0x20
  106647:	ff 75 10             	pushl  0x10(%ebp)
  10664a:	6a 00                	push   $0x0
  10664c:	8b 85 48 ff ff ff    	mov    -0xb8(%ebp),%eax
  106652:	29 d0                	sub    %edx,%eax
  106654:	50                   	push   %eax
  106655:	52                   	push   %edx
  106656:	e8 ad f6 ff ff       	call   105d08 <_strout>
  10665b:	01 85 30 ff ff ff    	add    %eax,-0xd0(%ebp)
  106661:	8b 45 10             	mov    0x10(%ebp),%eax
  106664:	f6 40 0d 40          	testb  $0x40,0xd(%eax)
  106668:	74 0c                	je     106676 <_doprnt+0x76a>
  10666a:	ff 48 04             	decl   0x4(%eax)
  10666d:	78 07                	js     106676 <_doprnt+0x76a>
  10666f:	8b 38                	mov    (%eax),%edi
  106671:	c6 07 00             	movb   $0x0,(%edi)
  106674:	ff 00                	incl   (%eax)
  106676:	8b 85 30 ff ff ff    	mov    -0xd0(%ebp),%eax
  10667c:	8d a5 08 ff ff ff    	lea    -0xf8(%ebp),%esp
  106682:	5b                   	pop    %ebx
  106683:	5e                   	pop    %esi
  106684:	5f                   	pop    %edi
  106685:	c9                   	leave  
  106686:	c3                   	ret    
  106687:	90                   	nop

00106688 <sprintf>:
  106688:	55                   	push   %ebp
  106689:	89 e5                	mov    %esp,%ebp
  10668b:	83 ec 10             	sub    $0x10,%esp
  10668e:	8b 45 08             	mov    0x8(%ebp),%eax
  106691:	c6 45 fd 42          	movb   $0x42,-0x3(%ebp)
  106695:	89 45 f8             	mov    %eax,-0x8(%ebp)
  106698:	89 45 f0             	mov    %eax,-0x10(%ebp)
  10669b:	c7 45 f4 ff 7f 00 00 	movl   $0x7fff,-0xc(%ebp)
  1066a2:	8d 55 10             	lea    0x10(%ebp),%edx
  1066a5:	8d 45 f0             	lea    -0x10(%ebp),%eax
  1066a8:	50                   	push   %eax
  1066a9:	52                   	push   %edx
  1066aa:	ff 75 0c             	pushl  0xc(%ebp)
  1066ad:	e8 5a f8 ff ff       	call   105f0c <_doprnt>
  1066b2:	c9                   	leave  
  1066b3:	c3                   	ret    

001066b4 <strchr>:
  1066b4:	55                   	push   %ebp
  1066b5:	89 e5                	mov    %esp,%ebp
  1066b7:	8b 55 08             	mov    0x8(%ebp),%edx
  1066ba:	8b 4d 0c             	mov    0xc(%ebp),%ecx
  1066bd:	85 d2                	test   %edx,%edx
  1066bf:	75 07                	jne    1066c8 <strchr+0x14>
  1066c1:	31 c0                	xor    %eax,%eax
  1066c3:	c9                   	leave  
  1066c4:	c3                   	ret    
  1066c5:	8d 76 00             	lea    0x0(%esi),%esi
  1066c8:	0f be 02             	movsbl (%edx),%eax
  1066cb:	39 c8                	cmp    %ecx,%eax
  1066cd:	74 0d                	je     1066dc <strchr+0x28>
  1066cf:	8a 02                	mov    (%edx),%al
  1066d1:	42                   	inc    %edx
  1066d2:	84 c0                	test   %al,%al
  1066d4:	75 f2                	jne    1066c8 <strchr+0x14>
  1066d6:	31 c0                	xor    %eax,%eax
  1066d8:	c9                   	leave  
  1066d9:	c3                   	ret    
  1066da:	8d 36                	lea    (%esi),%esi
  1066dc:	89 d0                	mov    %edx,%eax
  1066de:	c9                   	leave  
  1066df:	c3                   	ret    

001066e0 <init_gdb_serial>:
  1066e0:	55                   	push   %ebp
  1066e1:	89 e5                	mov    %esp,%ebp
  1066e3:	68 80 00 00 00       	push   $0x80
  1066e8:	68 fb 03 00 00       	push   $0x3fb
  1066ed:	e8 9a f3 ff ff       	call   105a8c <outportb>
  1066f2:	6a 03                	push   $0x3
  1066f4:	68 f8 03 00 00       	push   $0x3f8
  1066f9:	e8 8e f3 ff ff       	call   105a8c <outportb>
  1066fe:	6a 00                	push   $0x0
  106700:	68 f9 03 00 00       	push   $0x3f9
  106705:	e8 82 f3 ff ff       	call   105a8c <outportb>
  10670a:	6a 03                	push   $0x3
  10670c:	68 fb 03 00 00       	push   $0x3fb
  106711:	e8 76 f3 ff ff       	call   105a8c <outportb>
  106716:	83 c4 20             	add    $0x20,%esp
  106719:	6a 03                	push   $0x3
  10671b:	68 fc 03 00 00       	push   $0x3fc
  106720:	e8 67 f3 ff ff       	call   105a8c <outportb>
  106725:	c9                   	leave  
  106726:	c3                   	ret    
  106727:	90                   	nop

00106728 <getDebugChar>:
  106728:	55                   	push   %ebp
  106729:	89 e5                	mov    %esp,%ebp
  10672b:	90                   	nop
  10672c:	68 fd 03 00 00       	push   $0x3fd
  106731:	e8 4e f3 ff ff       	call   105a84 <inportb>
  106736:	83 c4 04             	add    $0x4,%esp
  106739:	a8 01                	test   $0x1,%al
  10673b:	75 07                	jne    106744 <getDebugChar+0x1c>
  10673d:	e4 80                	in     $0x80,%al
  10673f:	eb eb                	jmp    10672c <getDebugChar+0x4>
  106741:	8d 76 00             	lea    0x0(%esi),%esi
  106744:	68 f8 03 00 00       	push   $0x3f8
  106749:	e8 36 f3 ff ff       	call   105a84 <inportb>
  10674e:	c9                   	leave  
  10674f:	c3                   	ret    

00106750 <putDebugChar>:
  106750:	55                   	push   %ebp
  106751:	89 e5                	mov    %esp,%ebp
  106753:	90                   	nop
  106754:	68 fd 03 00 00       	push   $0x3fd
  106759:	e8 26 f3 ff ff       	call   105a84 <inportb>
  10675e:	83 c4 04             	add    $0x4,%esp
  106761:	a8 20                	test   $0x20,%al
  106763:	75 07                	jne    10676c <putDebugChar+0x1c>
  106765:	e4 80                	in     $0x80,%al
  106767:	eb eb                	jmp    106754 <putDebugChar+0x4>
  106769:	8d 76 00             	lea    0x0(%esi),%esi
  10676c:	0f be 45 08          	movsbl 0x8(%ebp),%eax
  106770:	50                   	push   %eax
  106771:	68 f8 03 00 00       	push   $0x3f8
  106776:	e8 11 f3 ff ff       	call   105a8c <outportb>
  10677b:	c9                   	leave  
  10677c:	c3                   	ret    
  10677d:	8d 76 00             	lea    0x0(%esi),%esi

00106780 <exceptionHandler>:
  106780:	55                   	push   %ebp
  106781:	89 e5                	mov    %esp,%ebp
  106783:	83 ec 0c             	sub    $0xc,%esp
  106786:	57                   	push   %edi
  106787:	56                   	push   %esi
  106788:	53                   	push   %ebx
  106789:	8b 7d 08             	mov    0x8(%ebp),%edi
  10678c:	8b 75 0c             	mov    0xc(%ebp),%esi
  10678f:	e8 f0 f0 ff ff       	call   105884 <get_idt_base>
  106794:	89 c3                	mov    %eax,%ebx
  106796:	85 db                	test   %ebx,%ebx
  106798:	75 39                	jne    1067d3 <exceptionHandler+0x53>
  10679a:	68 00 08 00 00       	push   $0x800
  10679f:	e8 3c 01 00 00       	call   1068e0 <_lomem_heap_alloc>
  1067a4:	89 c3                	mov    %eax,%ebx
  1067a6:	68 00 08 00 00       	push   $0x800
  1067ab:	53                   	push   %ebx
  1067ac:	e8 53 00 00 00       	call   106804 <bzero>
  1067b1:	66 c7 45 f8 ff 07    	movw   $0x7ff,-0x8(%ebp)
  1067b7:	66 89 5d fa          	mov    %bx,-0x6(%ebp)
  1067bb:	89 d8                	mov    %ebx,%eax
  1067bd:	c1 f8 10             	sar    $0x10,%eax
  1067c0:	89 45 f4             	mov    %eax,-0xc(%ebp)
  1067c3:	66 8b 45 f4          	mov    -0xc(%ebp),%ax
  1067c7:	66 89 45 fc          	mov    %ax,-0x4(%ebp)
  1067cb:	8d 55 f8             	lea    -0x8(%ebp),%edx
  1067ce:	89 d0                	mov    %edx,%eax
  1067d0:	0f 01 18             	lidtl  (%eax)
  1067d3:	8d 04 fb             	lea    (%ebx,%edi,8),%eax
  1067d6:	66 8c ca             	mov    %cs,%dx
  1067d9:	66 89 30             	mov    %si,(%eax)
  1067dc:	66 89 50 02          	mov    %dx,0x2(%eax)
  1067e0:	c6 40 04 00          	movb   $0x0,0x4(%eax)
  1067e4:	c6 40 05 8e          	movb   $0x8e,0x5(%eax)
  1067e8:	89 f2                	mov    %esi,%edx
  1067ea:	c1 ea 10             	shr    $0x10,%edx
  1067ed:	66 89 50 06          	mov    %dx,0x6(%eax)
  1067f1:	8d 65 e8             	lea    -0x18(%ebp),%esp
  1067f4:	5b                   	pop    %ebx
  1067f5:	5e                   	pop    %esi
  1067f6:	5f                   	pop    %edi
  1067f7:	c9                   	leave  
  1067f8:	c3                   	ret    
  1067f9:	8d 76 00             	lea    0x0(%esi),%esi

001067fc <flush_i_cache>:
  1067fc:	55                   	push   %ebp
  1067fd:	89 e5                	mov    %esp,%ebp
  1067ff:	eb 00                	jmp    106801 <flush_i_cache+0x5>
  106801:	c9                   	leave  
  106802:	c3                   	ret    
  106803:	90                   	nop

00106804 <bzero>:
  106804:	57                   	push   %edi
  106805:	8b 7c 24 08          	mov    0x8(%esp),%edi
  106809:	8b 4c 24 0c          	mov    0xc(%esp),%ecx
  10680d:	31 c0                	xor    %eax,%eax
  10680f:	c1 e9 02             	shr    $0x2,%ecx
  106812:	fc                   	cld    
  106813:	f3 ab                	rep stos %eax,%es:(%edi)
  106815:	8b 4c 24 0c          	mov    0xc(%esp),%ecx
  106819:	83 e1 03             	and    $0x3,%ecx
  10681c:	f3 aa                	rep stos %al,%es:(%edi)
  10681e:	5f                   	pop    %edi
  10681f:	c3                   	ret    

00106820 <_cleanup>:
  106820:	55                   	push   %ebp
  106821:	89 e5                	mov    %esp,%ebp
  106823:	fa                   	cli    
  106824:	fa                   	cli    
  106825:	6a 11                	push   $0x11
  106827:	6a 20                	push   $0x20
  106829:	e8 5e f2 ff ff       	call   105a8c <outportb>
  10682e:	6a 11                	push   $0x11
  106830:	68 a0 00 00 00       	push   $0xa0
  106835:	e8 52 f2 ff ff       	call   105a8c <outportb>
  10683a:	6a 08                	push   $0x8
  10683c:	6a 21                	push   $0x21
  10683e:	e8 49 f2 ff ff       	call   105a8c <outportb>
  106843:	6a 70                	push   $0x70
  106845:	68 a1 00 00 00       	push   $0xa1
  10684a:	e8 3d f2 ff ff       	call   105a8c <outportb>
  10684f:	83 c4 20             	add    $0x20,%esp
  106852:	6a 04                	push   $0x4
  106854:	6a 21                	push   $0x21
  106856:	e8 31 f2 ff ff       	call   105a8c <outportb>
  10685b:	6a 02                	push   $0x2
  10685d:	68 a1 00 00 00       	push   $0xa1
  106862:	e8 25 f2 ff ff       	call   105a8c <outportb>
  106867:	6a 01                	push   $0x1
  106869:	6a 21                	push   $0x21
  10686b:	e8 1c f2 ff ff       	call   105a8c <outportb>
  106870:	6a 01                	push   $0x1
  106872:	68 a1 00 00 00       	push   $0xa1
  106877:	e8 10 f2 ff ff       	call   105a8c <outportb>
  10687c:	83 c4 20             	add    $0x20,%esp
  10687f:	6a 34                	push   $0x34
  106881:	6a 43                	push   $0x43
  106883:	e8 04 f2 ff ff       	call   105a8c <outportb>
  106888:	6a 00                	push   $0x0
  10688a:	6a 40                	push   $0x40
  10688c:	e8 fb f1 ff ff       	call   105a8c <outportb>
  106891:	6a 00                	push   $0x0
  106893:	6a 40                	push   $0x40
  106895:	e8 f2 f1 ff ff       	call   105a8c <outportb>
  10689a:	6a 00                	push   $0x0
  10689c:	6a 21                	push   $0x21
  10689e:	e8 e9 f1 ff ff       	call   105a8c <outportb>
  1068a3:	83 c4 20             	add    $0x20,%esp
  1068a6:	6a 00                	push   $0x0
  1068a8:	68 a1 00 00 00       	push   $0xa1
  1068ad:	e8 da f1 ff ff       	call   105a8c <outportb>
  1068b2:	83 c4 08             	add    $0x8,%esp
  1068b5:	6a 0c                	push   $0xc
  1068b7:	68 f2 03 00 00       	push   $0x3f2
  1068bc:	e8 cb f1 ff ff       	call   105a8c <outportb>
  1068c1:	c9                   	leave  
  1068c2:	c3                   	ret    
  1068c3:	90                   	nop

001068c4 <__eprintf>:
  1068c4:	55                   	push   %ebp
  1068c5:	89 e5                	mov    %esp,%ebp
  1068c7:	ff 75 14             	pushl  0x14(%ebp)
  1068ca:	ff 75 10             	pushl  0x10(%ebp)
  1068cd:	ff 75 0c             	pushl  0xc(%ebp)
  1068d0:	ff 75 08             	pushl  0x8(%ebp)
  1068d3:	e8 7c f3 ff ff       	call   105c54 <printf>
  1068d8:	e8 47 00 00 00       	call   106924 <abort>
  1068dd:	8d 76 00             	lea    0x0(%esi),%esi

001068e0 <_lomem_heap_alloc>:
  1068e0:	55                   	push   %ebp
  1068e1:	89 e5                	mov    %esp,%ebp
  1068e3:	53                   	push   %ebx
  1068e4:	8b 45 08             	mov    0x8(%ebp),%eax
  1068e7:	05 ff 00 00 00       	add    $0xff,%eax
  1068ec:	b0 00                	mov    $0x0,%al
  1068ee:	8b 1d 7c 72 10 00    	mov    0x10727c,%ebx
  1068f4:	01 05 7c 72 10 00    	add    %eax,0x10727c
  1068fa:	81 3d 7c 72 10 00 ff 	cmpl   $0x9ffff,0x10727c
  106901:	ff 09 00 
  106904:	76 16                	jbe    10691c <_lomem_heap_alloc+0x3c>
  106906:	68 88 6e 10 00       	push   $0x106e88
  10690b:	6a 22                	push   $0x22
  10690d:	68 90 6e 10 00       	push   $0x106e90
  106912:	68 ac 6e 10 00       	push   $0x106eac
  106917:	e8 a8 ff ff ff       	call   1068c4 <__eprintf>
  10691c:	89 d8                	mov    %ebx,%eax
  10691e:	8b 5d fc             	mov    -0x4(%ebp),%ebx
  106921:	c9                   	leave  
  106922:	c3                   	ret    
  106923:	90                   	nop

00106924 <abort>:
  106924:	55                   	push   %ebp
  106925:	89 e5                	mov    %esp,%ebp
  106927:	83 3d ac 72 10 00 00 	cmpl   $0x0,0x1072ac
  10692e:	7e 02                	jle    106932 <abort+0xe>
  106930:	cc                   	int3   
  106931:	90                   	nop
  106932:	6a ff                	push   $0xffffffff
  106934:	e8 9f ed ff ff       	call   1056d8 <_exit>
  106939:	c9                   	leave  
  10693a:	c3                   	ret    
  10693b:	90                   	nop
